// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.10.0
// source: tour.proto

package pb

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// 赛季数据
type TourInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Season     int32 `protobuf:"varint,1,opt,name=season,proto3" json:"season,omitempty"`         // 赛季id
	SPoint     int32 `protobuf:"varint,2,opt,name=sPoint,proto3" json:"sPoint,omitempty"`         // 当前服务器赛点id
	PPoint     int32 `protobuf:"varint,3,opt,name=pPoint,proto3" json:"pPoint,omitempty"`         // 当前玩家赛点id
	PNum       int32 `protobuf:"varint,4,opt,name=pNum,proto3" json:"pNum,omitempty"`             // 当前赛点场次记录 可以超过10场，不满10场不能进行下一赛点任务
	PTime      int64 `protobuf:"varint,5,opt,name=pTime,proto3" json:"pTime,omitempty"`           // 当前赛点剩余时间
	STime      int64 `protobuf:"varint,6,opt,name=sTime,proto3" json:"sTime,omitempty"`           // 当前赛季剩余时间
	RPoint     int32 `protobuf:"varint,7,opt,name=rPoint,proto3" json:"rPoint,omitempty"`         // 最后一次领奖的赛点
	SeasonNum  int32 `protobuf:"varint,8,opt,name=seasonNum,proto3" json:"seasonNum,omitempty"`   //当前是第几个赛季
	BattleMode int32 `protobuf:"varint,9,opt,name=battleMode,proto3" json:"battleMode,omitempty"` // 当前玩家赛点玩法
}

func (x *TourInfo) Reset() {
	*x = TourInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tour_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TourInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TourInfo) ProtoMessage() {}

func (x *TourInfo) ProtoReflect() protoreflect.Message {
	mi := &file_tour_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TourInfo.ProtoReflect.Descriptor instead.
func (*TourInfo) Descriptor() ([]byte, []int) {
	return file_tour_proto_rawDescGZIP(), []int{0}
}

func (x *TourInfo) GetSeason() int32 {
	if x != nil {
		return x.Season
	}
	return 0
}

func (x *TourInfo) GetSPoint() int32 {
	if x != nil {
		return x.SPoint
	}
	return 0
}

func (x *TourInfo) GetPPoint() int32 {
	if x != nil {
		return x.PPoint
	}
	return 0
}

func (x *TourInfo) GetPNum() int32 {
	if x != nil {
		return x.PNum
	}
	return 0
}

func (x *TourInfo) GetPTime() int64 {
	if x != nil {
		return x.PTime
	}
	return 0
}

func (x *TourInfo) GetSTime() int64 {
	if x != nil {
		return x.STime
	}
	return 0
}

func (x *TourInfo) GetRPoint() int32 {
	if x != nil {
		return x.RPoint
	}
	return 0
}

func (x *TourInfo) GetSeasonNum() int32 {
	if x != nil {
		return x.SeasonNum
	}
	return 0
}

func (x *TourInfo) GetBattleMode() int32 {
	if x != nil {
		return x.BattleMode
	}
	return 0
}

// 赛季挑战赛奖励返回
type TourRewardResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info   *TourInfo        `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"` // 当前赛季数据
	Result *RewardResultRes `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *TourRewardResp) Reset() {
	*x = TourRewardResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tour_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TourRewardResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TourRewardResp) ProtoMessage() {}

func (x *TourRewardResp) ProtoReflect() protoreflect.Message {
	mi := &file_tour_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TourRewardResp.ProtoReflect.Descriptor instead.
func (*TourRewardResp) Descriptor() ([]byte, []int) {
	return file_tour_proto_rawDescGZIP(), []int{1}
}

func (x *TourRewardResp) GetInfo() *TourInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *TourRewardResp) GetResult() *RewardResultRes {
	if x != nil {
		return x.Result
	}
	return nil
}

// 赛季更新数据  todo:临时用，后面需要由服务器结算时更新
type TourUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Season int32 `protobuf:"varint,1,opt,name=season,proto3" json:"season,omitempty"` // 赛季id
	Point  int32 `protobuf:"varint,2,opt,name=point,proto3" json:"point,omitempty"`   // 赛点id
	Add    int32 `protobuf:"varint,3,opt,name=add,proto3" json:"add,omitempty"`       // 增加的完成场次
	Mode   int32 `protobuf:"varint,4,opt,name=mode,proto3" json:"mode,omitempty"`     // 玩法类型
}

func (x *TourUpdate) Reset() {
	*x = TourUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tour_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TourUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TourUpdate) ProtoMessage() {}

func (x *TourUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_tour_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TourUpdate.ProtoReflect.Descriptor instead.
func (*TourUpdate) Descriptor() ([]byte, []int) {
	return file_tour_proto_rawDescGZIP(), []int{2}
}

func (x *TourUpdate) GetSeason() int32 {
	if x != nil {
		return x.Season
	}
	return 0
}

func (x *TourUpdate) GetPoint() int32 {
	if x != nil {
		return x.Point
	}
	return 0
}

func (x *TourUpdate) GetAdd() int32 {
	if x != nil {
		return x.Add
	}
	return 0
}

func (x *TourUpdate) GetMode() int32 {
	if x != nil {
		return x.Mode
	}
	return 0
}

var File_tour_proto protoreflect.FileDescriptor

var file_tour_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x74, 0x6f, 0x75, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x69, 0x74,
	0x65, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe8, 0x01, 0x0a, 0x08, 0x54, 0x6f, 0x75,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x4e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x4e, 0x75,
	0x6d, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4e,
	0x75, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x4e, 0x75, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x4d, 0x6f, 0x64,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x4d,
	0x6f, 0x64, 0x65, 0x22, 0x59, 0x0a, 0x0e, 0x54, 0x6f, 0x75, 0x72, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1d, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x12, 0x28, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x60,
	0x0a, 0x0a, 0x54, 0x6f, 0x75, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x64,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x61, 0x64, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6d, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65,
	0x42, 0x0b, 0x5a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tour_proto_rawDescOnce sync.Once
	file_tour_proto_rawDescData = file_tour_proto_rawDesc
)

func file_tour_proto_rawDescGZIP() []byte {
	file_tour_proto_rawDescOnce.Do(func() {
		file_tour_proto_rawDescData = protoimpl.X.CompressGZIP(file_tour_proto_rawDescData)
	})
	return file_tour_proto_rawDescData
}

var file_tour_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_tour_proto_goTypes = []interface{}{
	(*TourInfo)(nil),        // 0: TourInfo
	(*TourRewardResp)(nil),  // 1: TourRewardResp
	(*TourUpdate)(nil),      // 2: TourUpdate
	(*RewardResultRes)(nil), // 3: RewardResultRes
}
var file_tour_proto_depIdxs = []int32{
	0, // 0: TourRewardResp.info:type_name -> TourInfo
	3, // 1: TourRewardResp.result:type_name -> RewardResultRes
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_tour_proto_init() }
func file_tour_proto_init() {
	if File_tour_proto != nil {
		return
	}
	file_item_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_tour_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TourInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tour_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TourRewardResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tour_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TourUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tour_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tour_proto_goTypes,
		DependencyIndexes: file_tour_proto_depIdxs,
		MessageInfos:      file_tour_proto_msgTypes,
	}.Build()
	File_tour_proto = out.File
	file_tour_proto_rawDesc = nil
	file_tour_proto_goTypes = nil
	file_tour_proto_depIdxs = nil
}
