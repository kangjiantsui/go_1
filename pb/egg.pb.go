// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.10.0
// source: egg.proto

package pb

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// 抽奖类型,单抽/十连抽
type PLAY_TYPE int32

const (
	PLAY_TYPE_PLAY_NONE PLAY_TYPE = 0
	PLAY_TYPE_PLAY_ONCE PLAY_TYPE = 1
	PLAY_TYPE_PLAY_TEN  PLAY_TYPE = 2
)

// Enum value maps for PLAY_TYPE.
var (
	PLAY_TYPE_name = map[int32]string{
		0: "PLAY_NONE",
		1: "PLAY_ONCE",
		2: "PLAY_TEN",
	}
	PLAY_TYPE_value = map[string]int32{
		"PLAY_NONE": 0,
		"PLAY_ONCE": 1,
		"PLAY_TEN":  2,
	}
)

func (x PLAY_TYPE) Enum() *PLAY_TYPE {
	p := new(PLAY_TYPE)
	*p = x
	return p
}

func (x PLAY_TYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PLAY_TYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_egg_proto_enumTypes[0].Descriptor()
}

func (PLAY_TYPE) Type() protoreflect.EnumType {
	return &file_egg_proto_enumTypes[0]
}

func (x PLAY_TYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PLAY_TYPE.Descriptor instead.
func (PLAY_TYPE) EnumDescriptor() ([]byte, []int) {
	return file_egg_proto_rawDescGZIP(), []int{0}
}

// 球颜色枚举
type BALL_COLOR int32

const (
	BALL_COLOR_BALL_NONE     BALL_COLOR = 0
	BALL_COLOR_BALL_BROWN    BALL_COLOR = 1
	BALL_COLOR_BALL_SILVER   BALL_COLOR = 2
	BALL_COLOR_BALL_GOLDEN   BALL_COLOR = 3
	BALL_COLOR_BALL_COLORFUL BALL_COLOR = 4
	BALL_COLOR_BALL_BLACK    BALL_COLOR = 5
)

// Enum value maps for BALL_COLOR.
var (
	BALL_COLOR_name = map[int32]string{
		0: "BALL_NONE",
		1: "BALL_BROWN",
		2: "BALL_SILVER",
		3: "BALL_GOLDEN",
		4: "BALL_COLORFUL",
		5: "BALL_BLACK",
	}
	BALL_COLOR_value = map[string]int32{
		"BALL_NONE":     0,
		"BALL_BROWN":    1,
		"BALL_SILVER":   2,
		"BALL_GOLDEN":   3,
		"BALL_COLORFUL": 4,
		"BALL_BLACK":    5,
	}
)

func (x BALL_COLOR) Enum() *BALL_COLOR {
	p := new(BALL_COLOR)
	*p = x
	return p
}

func (x BALL_COLOR) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BALL_COLOR) Descriptor() protoreflect.EnumDescriptor {
	return file_egg_proto_enumTypes[1].Descriptor()
}

func (BALL_COLOR) Type() protoreflect.EnumType {
	return &file_egg_proto_enumTypes[1]
}

func (x BALL_COLOR) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BALL_COLOR.Descriptor instead.
func (BALL_COLOR) EnumDescriptor() ([]byte, []int) {
	return file_egg_proto_rawDescGZIP(), []int{1}
}

// 玩家抽奖信息
type EggInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ticket              int32               `protobuf:"varint,1,opt,name=ticket,proto3" json:"ticket,omitempty"`                                                                                                     // 玩家拥有的抽奖券数量
	Lucky               int32               `protobuf:"varint,2,opt,name=lucky,proto3" json:"lucky,omitempty"`                                                                                                       // 当前幸运值
	Count               int32               `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`                                                                                                       // 总抽奖次数
	LuckyProduct        map[int32]*ShopInfo `protobuf:"bytes,4,rep,name=luckyProduct,proto3" json:"luckyProduct,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // 达到指定幸运值后刷出的商品 <shop表index,shopInfo>
	TimeLeft            map[string]int64    `protobuf:"bytes,5,rep,name=timeLeft,proto3" json:"timeLeft,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`         // 道具进入宝箱倒计时,<table.EggActor.Item,倒计时秒>
	GuaranteedInfo      []*GuaranteedInfo   `protobuf:"bytes,6,rep,name=guaranteedInfo,proto3" json:"guaranteedInfo,omitempty"`                                                                                      // 球保底信息
	LuckPointCumulative int32               `protobuf:"varint,7,opt,name=luckPointCumulative,proto3" json:"luckPointCumulative,omitempty"`                                                                           // 生涯累计幸运点
	Tickets             map[int32]int32     `protobuf:"bytes,8,rep,name=tickets,proto3" json:"tickets,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`          // 各种券的数量<table.Ticket.ID,num>
	LuckyMax            int32               `protobuf:"varint,9,opt,name=luckyMax,proto3" json:"luckyMax,omitempty"`                                                                                                 // 生涯最大单次幸运值
	AlreadyGetProducts  []int32             `protobuf:"varint,10,rep,packed,name=alreadyGetProducts,proto3" json:"alreadyGetProducts,omitempty"`                                                                     // 已获取过的礼包,table.EggBag.Index
	AlreadyBuyProducts  []int32             `protobuf:"varint,11,rep,packed,name=alreadyBuyProducts,proto3" json:"alreadyBuyProducts,omitempty"`                                                                     // 已购买过的礼包,table.EggBag.Index
}

func (x *EggInfo) Reset() {
	*x = EggInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_egg_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EggInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EggInfo) ProtoMessage() {}

func (x *EggInfo) ProtoReflect() protoreflect.Message {
	mi := &file_egg_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EggInfo.ProtoReflect.Descriptor instead.
func (*EggInfo) Descriptor() ([]byte, []int) {
	return file_egg_proto_rawDescGZIP(), []int{0}
}

func (x *EggInfo) GetTicket() int32 {
	if x != nil {
		return x.Ticket
	}
	return 0
}

func (x *EggInfo) GetLucky() int32 {
	if x != nil {
		return x.Lucky
	}
	return 0
}

func (x *EggInfo) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *EggInfo) GetLuckyProduct() map[int32]*ShopInfo {
	if x != nil {
		return x.LuckyProduct
	}
	return nil
}

func (x *EggInfo) GetTimeLeft() map[string]int64 {
	if x != nil {
		return x.TimeLeft
	}
	return nil
}

func (x *EggInfo) GetGuaranteedInfo() []*GuaranteedInfo {
	if x != nil {
		return x.GuaranteedInfo
	}
	return nil
}

func (x *EggInfo) GetLuckPointCumulative() int32 {
	if x != nil {
		return x.LuckPointCumulative
	}
	return 0
}

func (x *EggInfo) GetTickets() map[int32]int32 {
	if x != nil {
		return x.Tickets
	}
	return nil
}

func (x *EggInfo) GetLuckyMax() int32 {
	if x != nil {
		return x.LuckyMax
	}
	return 0
}

func (x *EggInfo) GetAlreadyGetProducts() []int32 {
	if x != nil {
		return x.AlreadyGetProducts
	}
	return nil
}

func (x *EggInfo) GetAlreadyBuyProducts() []int32 {
	if x != nil {
		return x.AlreadyBuyProducts
	}
	return nil
}

// 球保底信息
type GuaranteedInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Color   BALL_COLOR `protobuf:"varint,1,opt,name=color,proto3,enum=BALL_COLOR" json:"color,omitempty"` // 球颜色
	HowMany int32      `protobuf:"varint,2,opt,name=howMany,proto3" json:"howMany,omitempty"`             // 剩几次到保底
}

func (x *GuaranteedInfo) Reset() {
	*x = GuaranteedInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_egg_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuaranteedInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuaranteedInfo) ProtoMessage() {}

func (x *GuaranteedInfo) ProtoReflect() protoreflect.Message {
	mi := &file_egg_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuaranteedInfo.ProtoReflect.Descriptor instead.
func (*GuaranteedInfo) Descriptor() ([]byte, []int) {
	return file_egg_proto_rawDescGZIP(), []int{1}
}

func (x *GuaranteedInfo) GetColor() BALL_COLOR {
	if x != nil {
		return x.Color
	}
	return BALL_COLOR_BALL_NONE
}

func (x *GuaranteedInfo) GetHowMany() int32 {
	if x != nil {
		return x.HowMany
	}
	return 0
}

// 抽奖请求
type PlayReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type PLAY_TYPE `protobuf:"varint,1,opt,name=type,proto3,enum=PLAY_TYPE" json:"type,omitempty"`
}

func (x *PlayReq) Reset() {
	*x = PlayReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_egg_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayReq) ProtoMessage() {}

func (x *PlayReq) ProtoReflect() protoreflect.Message {
	mi := &file_egg_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayReq.ProtoReflect.Descriptor instead.
func (*PlayReq) Descriptor() ([]byte, []int) {
	return file_egg_proto_rawDescGZIP(), []int{2}
}

func (x *PlayReq) GetType() PLAY_TYPE {
	if x != nil {
		return x.Type
	}
	return PLAY_TYPE_PLAY_NONE
}

// 抽奖结果
type PlayResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info             *EggInfo            `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	ItemUpdateResult *ItemUpdateResult   `protobuf:"bytes,2,opt,name=itemUpdateResult,proto3" json:"itemUpdateResult,omitempty"`
	Lucky            int32               `protobuf:"varint,3,opt,name=lucky,proto3" json:"lucky,omitempty"`                  // 这次增加的幸运值
	Rank             int32               `protobuf:"varint,4,opt,name=rank,proto3" json:"rank,omitempty"`                    // 这次这个幸运值在全服玩家中的排名百分比.
	Reward           []*SingleRewardInfo `protobuf:"bytes,5,rep,name=reward,proto3" json:"reward,omitempty"`                 // 抽到的奖励
	NewEggBags       []int32             `protobuf:"varint,6,rep,packed,name=newEggBags,proto3" json:"newEggBags,omitempty"` // 新获取到的扭蛋礼包,table.EggBag.Index
}

func (x *PlayResp) Reset() {
	*x = PlayResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_egg_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayResp) ProtoMessage() {}

func (x *PlayResp) ProtoReflect() protoreflect.Message {
	mi := &file_egg_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayResp.ProtoReflect.Descriptor instead.
func (*PlayResp) Descriptor() ([]byte, []int) {
	return file_egg_proto_rawDescGZIP(), []int{3}
}

func (x *PlayResp) GetInfo() *EggInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *PlayResp) GetItemUpdateResult() *ItemUpdateResult {
	if x != nil {
		return x.ItemUpdateResult
	}
	return nil
}

func (x *PlayResp) GetLucky() int32 {
	if x != nil {
		return x.Lucky
	}
	return 0
}

func (x *PlayResp) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *PlayResp) GetReward() []*SingleRewardInfo {
	if x != nil {
		return x.Reward
	}
	return nil
}

func (x *PlayResp) GetNewEggBags() []int32 {
	if x != nil {
		return x.NewEggBags
	}
	return nil
}

// 单个奖励信息
type SingleRewardInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Color BALL_COLOR    `protobuf:"varint,1,opt,name=color,proto3,enum=BALL_COLOR" json:"color,omitempty"` // 球颜色
	Index int32         `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`                 // 对应EggItem表index
	Items []*ItemUpdate `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`                  // 奖励物品
}

func (x *SingleRewardInfo) Reset() {
	*x = SingleRewardInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_egg_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SingleRewardInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SingleRewardInfo) ProtoMessage() {}

func (x *SingleRewardInfo) ProtoReflect() protoreflect.Message {
	mi := &file_egg_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SingleRewardInfo.ProtoReflect.Descriptor instead.
func (*SingleRewardInfo) Descriptor() ([]byte, []int) {
	return file_egg_proto_rawDescGZIP(), []int{4}
}

func (x *SingleRewardInfo) GetColor() BALL_COLOR {
	if x != nil {
		return x.Color
	}
	return BALL_COLOR_BALL_NONE
}

func (x *SingleRewardInfo) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *SingleRewardInfo) GetItems() []*ItemUpdate {
	if x != nil {
		return x.Items
	}
	return nil
}

// 购买请求
type BuyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Num int32 `protobuf:"varint,1,opt,name=num,proto3" json:"num,omitempty"`
}

func (x *BuyReq) Reset() {
	*x = BuyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_egg_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyReq) ProtoMessage() {}

func (x *BuyReq) ProtoReflect() protoreflect.Message {
	mi := &file_egg_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyReq.ProtoReflect.Descriptor instead.
func (*BuyReq) Descriptor() ([]byte, []int) {
	return file_egg_proto_rawDescGZIP(), []int{5}
}

func (x *BuyReq) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

// 购买返回
type BuyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info             *EggInfo          `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	ItemUpdateResult *ItemUpdateResult `protobuf:"bytes,2,opt,name=itemUpdateResult,proto3" json:"itemUpdateResult,omitempty"`
}

func (x *BuyResp) Reset() {
	*x = BuyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_egg_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyResp) ProtoMessage() {}

func (x *BuyResp) ProtoReflect() protoreflect.Message {
	mi := &file_egg_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyResp.ProtoReflect.Descriptor instead.
func (*BuyResp) Descriptor() ([]byte, []int) {
	return file_egg_proto_rawDescGZIP(), []int{6}
}

func (x *BuyResp) GetInfo() *EggInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *BuyResp) GetItemUpdateResult() *ItemUpdateResult {
	if x != nil {
		return x.ItemUpdateResult
	}
	return nil
}

// 幸运点兑换请求
type ExchangeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index int32 `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"` // 对应EggExchange表index
}

func (x *ExchangeReq) Reset() {
	*x = ExchangeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_egg_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExchangeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeReq) ProtoMessage() {}

func (x *ExchangeReq) ProtoReflect() protoreflect.Message {
	mi := &file_egg_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeReq.ProtoReflect.Descriptor instead.
func (*ExchangeReq) Descriptor() ([]byte, []int) {
	return file_egg_proto_rawDescGZIP(), []int{7}
}

func (x *ExchangeReq) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

// 幸运点兑换返回
type ExchangeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info             *EggInfo          `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	ItemUpdateResult *ItemUpdateResult `protobuf:"bytes,2,opt,name=itemUpdateResult,proto3" json:"itemUpdateResult,omitempty"`
}

func (x *ExchangeResp) Reset() {
	*x = ExchangeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_egg_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExchangeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeResp) ProtoMessage() {}

func (x *ExchangeResp) ProtoReflect() protoreflect.Message {
	mi := &file_egg_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeResp.ProtoReflect.Descriptor instead.
func (*ExchangeResp) Descriptor() ([]byte, []int) {
	return file_egg_proto_rawDescGZIP(), []int{8}
}

func (x *ExchangeResp) GetInfo() *EggInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *ExchangeResp) GetItemUpdateResult() *ItemUpdateResult {
	if x != nil {
		return x.ItemUpdateResult
	}
	return nil
}

var File_egg_proto protoreflect.FileDescriptor

var file_egg_proto_rawDesc = []byte{
	0x0a, 0x09, 0x65, 0x67, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x69, 0x74, 0x65,
	0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x73, 0x68, 0x6f, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x9e, 0x05, 0x0a, 0x07, 0x45, 0x67, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x16, 0x0a, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x75, 0x63, 0x6b, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x75, 0x63, 0x6b, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x3e, 0x0a, 0x0c, 0x6c, 0x75, 0x63, 0x6b, 0x79, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x45, 0x67, 0x67, 0x49,
	0x6e, 0x66, 0x6f, 0x2e, 0x4c, 0x75, 0x63, 0x6b, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x6c, 0x75, 0x63, 0x6b, 0x79, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x12, 0x32, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x4c, 0x65, 0x66, 0x74, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x45, 0x67, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x4c, 0x65, 0x66, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x74,
	0x69, 0x6d, 0x65, 0x4c, 0x65, 0x66, 0x74, 0x12, 0x37, 0x0a, 0x0e, 0x67, 0x75, 0x61, 0x72, 0x61,
	0x6e, 0x74, 0x65, 0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x47, 0x75, 0x61, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x0e, 0x67, 0x75, 0x61, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x30, 0x0a, 0x13, 0x6c, 0x75, 0x63, 0x6b, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x43, 0x75, 0x6d,
	0x75, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x6c,
	0x75, 0x63, 0x6b, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x43, 0x75, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x69,
	0x76, 0x65, 0x12, 0x2f, 0x0a, 0x07, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x08, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x45, 0x67, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x74, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x75, 0x63, 0x6b, 0x79, 0x4d, 0x61, 0x78, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6c, 0x75, 0x63, 0x6b, 0x79, 0x4d, 0x61, 0x78, 0x12,
	0x2e, 0x0a, 0x12, 0x61, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x05, 0x52, 0x12, 0x61, 0x6c, 0x72,
	0x65, 0x61, 0x64, 0x79, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12,
	0x2e, 0x0a, 0x12, 0x61, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x42, 0x75, 0x79, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x05, 0x52, 0x12, 0x61, 0x6c, 0x72,
	0x65, 0x61, 0x64, 0x79, 0x42, 0x75, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x1a,
	0x4a, 0x0a, 0x11, 0x4c, 0x75, 0x63, 0x6b, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3b, 0x0a, 0x0d, 0x54,
	0x69, 0x6d, 0x65, 0x4c, 0x65, 0x66, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3a, 0x0a, 0x0c, 0x54, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x4d, 0x0a, 0x0e, 0x47, 0x75, 0x61, 0x72, 0x61, 0x6e, 0x74, 0x65,
	0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x42, 0x41, 0x4c, 0x4c, 0x5f, 0x43, 0x4f, 0x4c,
	0x4f, 0x52, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x6f, 0x77,
	0x4d, 0x61, 0x6e, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x68, 0x6f, 0x77, 0x4d,
	0x61, 0x6e, 0x79, 0x22, 0x29, 0x0a, 0x07, 0x50, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x71, 0x12, 0x1e,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0a, 0x2e, 0x50,
	0x4c, 0x41, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xdc,
	0x01, 0x0a, 0x08, 0x50, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1c, 0x0a, 0x04, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x45, 0x67, 0x67, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x3d, 0x0a, 0x10, 0x69, 0x74, 0x65,
	0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x10, 0x69, 0x74, 0x65, 0x6d, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x75, 0x63, 0x6b,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x75, 0x63, 0x6b, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x61,
	0x6e, 0x6b, 0x12, 0x29, 0x0a, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x6e, 0x65, 0x77, 0x45, 0x67, 0x67, 0x42, 0x61, 0x67, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x05, 0x52, 0x0a, 0x6e, 0x65, 0x77, 0x45, 0x67, 0x67, 0x42, 0x61, 0x67, 0x73, 0x22, 0x6e, 0x0a,
	0x10, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x21, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0b, 0x2e, 0x42, 0x41, 0x4c, 0x4c, 0x5f, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x52, 0x05, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x21, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x49, 0x74, 0x65, 0x6d,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x1a, 0x0a,
	0x06, 0x42, 0x75, 0x79, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x22, 0x66, 0x0a, 0x07, 0x42, 0x75, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x1c, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x08, 0x2e, 0x45, 0x67, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e,
	0x66, 0x6f, 0x12, 0x3d, 0x0a, 0x10, 0x69, 0x74, 0x65, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x49,
	0x74, 0x65, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52,
	0x10, 0x69, 0x74, 0x65, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x23, 0x0a, 0x0b, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x6b, 0x0a, 0x0c, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1c, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x45, 0x67, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x12, 0x3d, 0x0a, 0x10, 0x69, 0x74, 0x65, 0x6d, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x49, 0x74, 0x65, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x10, 0x69, 0x74, 0x65, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x2a, 0x37, 0x0a, 0x09, 0x50, 0x4c, 0x41, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x12, 0x0d, 0x0a, 0x09, 0x50, 0x4c, 0x41, 0x59, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12,
	0x0d, 0x0a, 0x09, 0x50, 0x4c, 0x41, 0x59, 0x5f, 0x4f, 0x4e, 0x43, 0x45, 0x10, 0x01, 0x12, 0x0c,
	0x0a, 0x08, 0x50, 0x4c, 0x41, 0x59, 0x5f, 0x54, 0x45, 0x4e, 0x10, 0x02, 0x2a, 0x70, 0x0a, 0x0a,
	0x42, 0x41, 0x4c, 0x4c, 0x5f, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41,
	0x4c, 0x4c, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x42, 0x41, 0x4c,
	0x4c, 0x5f, 0x42, 0x52, 0x4f, 0x57, 0x4e, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x42, 0x41, 0x4c,
	0x4c, 0x5f, 0x53, 0x49, 0x4c, 0x56, 0x45, 0x52, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x42, 0x41,
	0x4c, 0x4c, 0x5f, 0x47, 0x4f, 0x4c, 0x44, 0x45, 0x4e, 0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x42,
	0x41, 0x4c, 0x4c, 0x5f, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x46, 0x55, 0x4c, 0x10, 0x04, 0x12, 0x0e,
	0x0a, 0x0a, 0x42, 0x41, 0x4c, 0x4c, 0x5f, 0x42, 0x4c, 0x41, 0x43, 0x4b, 0x10, 0x05, 0x42, 0x0b,
	0x5a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_egg_proto_rawDescOnce sync.Once
	file_egg_proto_rawDescData = file_egg_proto_rawDesc
)

func file_egg_proto_rawDescGZIP() []byte {
	file_egg_proto_rawDescOnce.Do(func() {
		file_egg_proto_rawDescData = protoimpl.X.CompressGZIP(file_egg_proto_rawDescData)
	})
	return file_egg_proto_rawDescData
}

var file_egg_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_egg_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_egg_proto_goTypes = []interface{}{
	(PLAY_TYPE)(0),           // 0: PLAY_TYPE
	(BALL_COLOR)(0),          // 1: BALL_COLOR
	(*EggInfo)(nil),          // 2: EggInfo
	(*GuaranteedInfo)(nil),   // 3: GuaranteedInfo
	(*PlayReq)(nil),          // 4: PlayReq
	(*PlayResp)(nil),         // 5: PlayResp
	(*SingleRewardInfo)(nil), // 6: SingleRewardInfo
	(*BuyReq)(nil),           // 7: BuyReq
	(*BuyResp)(nil),          // 8: BuyResp
	(*ExchangeReq)(nil),      // 9: ExchangeReq
	(*ExchangeResp)(nil),     // 10: ExchangeResp
	nil,                      // 11: EggInfo.LuckyProductEntry
	nil,                      // 12: EggInfo.TimeLeftEntry
	nil,                      // 13: EggInfo.TicketsEntry
	(*ItemUpdateResult)(nil), // 14: ItemUpdateResult
	(*ItemUpdate)(nil),       // 15: ItemUpdate
	(*ShopInfo)(nil),         // 16: ShopInfo
}
var file_egg_proto_depIdxs = []int32{
	11, // 0: EggInfo.luckyProduct:type_name -> EggInfo.LuckyProductEntry
	12, // 1: EggInfo.timeLeft:type_name -> EggInfo.TimeLeftEntry
	3,  // 2: EggInfo.guaranteedInfo:type_name -> GuaranteedInfo
	13, // 3: EggInfo.tickets:type_name -> EggInfo.TicketsEntry
	1,  // 4: GuaranteedInfo.color:type_name -> BALL_COLOR
	0,  // 5: PlayReq.type:type_name -> PLAY_TYPE
	2,  // 6: PlayResp.info:type_name -> EggInfo
	14, // 7: PlayResp.itemUpdateResult:type_name -> ItemUpdateResult
	6,  // 8: PlayResp.reward:type_name -> SingleRewardInfo
	1,  // 9: SingleRewardInfo.color:type_name -> BALL_COLOR
	15, // 10: SingleRewardInfo.items:type_name -> ItemUpdate
	2,  // 11: BuyResp.info:type_name -> EggInfo
	14, // 12: BuyResp.itemUpdateResult:type_name -> ItemUpdateResult
	2,  // 13: ExchangeResp.info:type_name -> EggInfo
	14, // 14: ExchangeResp.itemUpdateResult:type_name -> ItemUpdateResult
	16, // 15: EggInfo.LuckyProductEntry.value:type_name -> ShopInfo
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_egg_proto_init() }
func file_egg_proto_init() {
	if File_egg_proto != nil {
		return
	}
	file_item_proto_init()
	file_shop_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_egg_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EggInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_egg_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuaranteedInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_egg_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_egg_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_egg_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SingleRewardInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_egg_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_egg_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_egg_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExchangeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_egg_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExchangeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_egg_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_egg_proto_goTypes,
		DependencyIndexes: file_egg_proto_depIdxs,
		EnumInfos:         file_egg_proto_enumTypes,
		MessageInfos:      file_egg_proto_msgTypes,
	}.Build()
	File_egg_proto = out.File
	file_egg_proto_rawDesc = nil
	file_egg_proto_goTypes = nil
	file_egg_proto_depIdxs = nil
}
