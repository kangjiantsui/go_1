// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.10.0
// source: face.proto

package pb

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type FaceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Face    []int32         `protobuf:"varint,1,rep,packed,name=face,proto3" json:"face,omitempty"`                                                                                         // 玩家获取到的表情列表    弃用
	Slot    map[int32]int32 `protobuf:"bytes,2,rep,name=slot,proto3" json:"slot,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`       // 栏位对应的表情   slotId: faceId
	FaceMap map[int32]int32 `protobuf:"bytes,3,rep,name=faceMap,proto3" json:"faceMap,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` // 表情map
}

func (x *FaceInfo) Reset() {
	*x = FaceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_face_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FaceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FaceInfo) ProtoMessage() {}

func (x *FaceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_face_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FaceInfo.ProtoReflect.Descriptor instead.
func (*FaceInfo) Descriptor() ([]byte, []int) {
	return file_face_proto_rawDescGZIP(), []int{0}
}

func (x *FaceInfo) GetFace() []int32 {
	if x != nil {
		return x.Face
	}
	return nil
}

func (x *FaceInfo) GetSlot() map[int32]int32 {
	if x != nil {
		return x.Slot
	}
	return nil
}

func (x *FaceInfo) GetFaceMap() map[int32]int32 {
	if x != nil {
		return x.FaceMap
	}
	return nil
}

type FaceSlot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FaceId int32 `protobuf:"varint,1,opt,name=faceId,proto3" json:"faceId,omitempty"` // 待上架的表情id
	SlotId int32 `protobuf:"varint,2,opt,name=slotId,proto3" json:"slotId,omitempty"` // 栏位id   0-（最大栏位数-1）
}

func (x *FaceSlot) Reset() {
	*x = FaceSlot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_face_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FaceSlot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FaceSlot) ProtoMessage() {}

func (x *FaceSlot) ProtoReflect() protoreflect.Message {
	mi := &file_face_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FaceSlot.ProtoReflect.Descriptor instead.
func (*FaceSlot) Descriptor() ([]byte, []int) {
	return file_face_proto_rawDescGZIP(), []int{1}
}

func (x *FaceSlot) GetFaceId() int32 {
	if x != nil {
		return x.FaceId
	}
	return 0
}

func (x *FaceSlot) GetSlotId() int32 {
	if x != nil {
		return x.SlotId
	}
	return 0
}

var File_face_proto protoreflect.FileDescriptor

var file_face_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xee, 0x01, 0x0a,
	0x08, 0x46, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x61, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x04, 0x66, 0x61, 0x63, 0x65, 0x12, 0x27, 0x0a,
	0x04, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x46, 0x61,
	0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x53, 0x6c, 0x6f, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x12, 0x30, 0x0a, 0x07, 0x66, 0x61, 0x63, 0x65, 0x4d, 0x61,
	0x70, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x46, 0x61, 0x63, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x2e, 0x46, 0x61, 0x63, 0x65, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x07, 0x66, 0x61, 0x63, 0x65, 0x4d, 0x61, 0x70, 0x1a, 0x37, 0x0a, 0x09, 0x53, 0x6c, 0x6f, 0x74,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x1a, 0x3a, 0x0a, 0x0c, 0x46, 0x61, 0x63, 0x65, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x3a, 0x0a,
	0x08, 0x46, 0x61, 0x63, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x61, 0x63,
	0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x66, 0x61, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x42, 0x0b, 0x5a, 0x09, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_face_proto_rawDescOnce sync.Once
	file_face_proto_rawDescData = file_face_proto_rawDesc
)

func file_face_proto_rawDescGZIP() []byte {
	file_face_proto_rawDescOnce.Do(func() {
		file_face_proto_rawDescData = protoimpl.X.CompressGZIP(file_face_proto_rawDescData)
	})
	return file_face_proto_rawDescData
}

var file_face_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_face_proto_goTypes = []interface{}{
	(*FaceInfo)(nil), // 0: FaceInfo
	(*FaceSlot)(nil), // 1: FaceSlot
	nil,              // 2: FaceInfo.SlotEntry
	nil,              // 3: FaceInfo.FaceMapEntry
}
var file_face_proto_depIdxs = []int32{
	2, // 0: FaceInfo.slot:type_name -> FaceInfo.SlotEntry
	3, // 1: FaceInfo.faceMap:type_name -> FaceInfo.FaceMapEntry
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_face_proto_init() }
func file_face_proto_init() {
	if File_face_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_face_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FaceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_face_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FaceSlot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_face_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_face_proto_goTypes,
		DependencyIndexes: file_face_proto_depIdxs,
		MessageInfos:      file_face_proto_msgTypes,
	}.Build()
	File_face_proto = out.File
	file_face_proto_rawDesc = nil
	file_face_proto_goTypes = nil
	file_face_proto_depIdxs = nil
}
