// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.10.0
// source: achievemenT.proto

package pb

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// 成就条件大类型
type ConditionType int32

const (
	ConditionType_C_NONE  ConditionType = 0
	ConditionType_C_FIGHT ConditionType = 1 // 战斗类成就
	ConditionType_C_ITEM  ConditionType = 2 // 物品类成就
)

// Enum value maps for ConditionType.
var (
	ConditionType_name = map[int32]string{
		0: "C_NONE",
		1: "C_FIGHT",
		2: "C_ITEM",
	}
	ConditionType_value = map[string]int32{
		"C_NONE":  0,
		"C_FIGHT": 1,
		"C_ITEM":  2,
	}
)

func (x ConditionType) Enum() *ConditionType {
	p := new(ConditionType)
	*p = x
	return p
}

func (x ConditionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConditionType) Descriptor() protoreflect.EnumDescriptor {
	return file_achievemenT_proto_enumTypes[0].Descriptor()
}

func (ConditionType) Type() protoreflect.EnumType {
	return &file_achievemenT_proto_enumTypes[0]
}

func (x ConditionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConditionType.Descriptor instead.
func (ConditionType) EnumDescriptor() ([]byte, []int) {
	return file_achievemenT_proto_rawDescGZIP(), []int{0}
}

type PushAchievementMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type   int32  `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Param1 int32  `protobuf:"varint,2,opt,name=param1,proto3" json:"param1,omitempty"`
	Param2 int32  `protobuf:"varint,3,opt,name=param2,proto3" json:"param2,omitempty"`
	Param3 int32  `protobuf:"varint,4,opt,name=param3,proto3" json:"param3,omitempty"`
	Uid    uint64 `protobuf:"varint,5,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *PushAchievementMsg) Reset() {
	*x = PushAchievementMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_achievemenT_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushAchievementMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushAchievementMsg) ProtoMessage() {}

func (x *PushAchievementMsg) ProtoReflect() protoreflect.Message {
	mi := &file_achievemenT_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushAchievementMsg.ProtoReflect.Descriptor instead.
func (*PushAchievementMsg) Descriptor() ([]byte, []int) {
	return file_achievemenT_proto_rawDescGZIP(), []int{0}
}

func (x *PushAchievementMsg) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *PushAchievementMsg) GetParam1() int32 {
	if x != nil {
		return x.Param1
	}
	return 0
}

func (x *PushAchievementMsg) GetParam2() int32 {
	if x != nil {
		return x.Param2
	}
	return 0
}

func (x *PushAchievementMsg) GetParam3() int32 {
	if x != nil {
		return x.Param3
	}
	return 0
}

func (x *PushAchievementMsg) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

// 玩家杯数提升,可触发"被邀请者达到指定杯数的成就"
type NoticePlayerUpCupMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid          uint64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`                   // 邀请者uid
	BeInvitedUid uint64 `protobuf:"varint,2,opt,name=beInvitedUid,proto3" json:"beInvitedUid,omitempty"` // 被邀请者uid
}

func (x *NoticePlayerUpCupMsg) Reset() {
	*x = NoticePlayerUpCupMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_achievemenT_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoticePlayerUpCupMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoticePlayerUpCupMsg) ProtoMessage() {}

func (x *NoticePlayerUpCupMsg) ProtoReflect() protoreflect.Message {
	mi := &file_achievemenT_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoticePlayerUpCupMsg.ProtoReflect.Descriptor instead.
func (*NoticePlayerUpCupMsg) Descriptor() ([]byte, []int) {
	return file_achievemenT_proto_rawDescGZIP(), []int{1}
}

func (x *NoticePlayerUpCupMsg) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *NoticePlayerUpCupMsg) GetBeInvitedUid() uint64 {
	if x != nil {
		return x.BeInvitedUid
	}
	return 0
}

// 客户端触发的成就事件,如发起分享/开关音乐等
type AchievementEventReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetType int32 `protobuf:"varint,1,opt,name=targetType,proto3" json:"targetType,omitempty"`
}

func (x *AchievementEventReq) Reset() {
	*x = AchievementEventReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_achievemenT_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AchievementEventReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AchievementEventReq) ProtoMessage() {}

func (x *AchievementEventReq) ProtoReflect() protoreflect.Message {
	mi := &file_achievemenT_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AchievementEventReq.ProtoReflect.Descriptor instead.
func (*AchievementEventReq) Descriptor() ([]byte, []int) {
	return file_achievemenT_proto_rawDescGZIP(), []int{2}
}

func (x *AchievementEventReq) GetTargetType() int32 {
	if x != nil {
		return x.TargetType
	}
	return 0
}

type Achievement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value  int32         `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	Status REWARD_STATUS `protobuf:"varint,2,opt,name=status,proto3,enum=REWARD_STATUS" json:"status,omitempty"`
}

func (x *Achievement) Reset() {
	*x = Achievement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_achievemenT_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Achievement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Achievement) ProtoMessage() {}

func (x *Achievement) ProtoReflect() protoreflect.Message {
	mi := &file_achievemenT_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Achievement.ProtoReflect.Descriptor instead.
func (*Achievement) Descriptor() ([]byte, []int) {
	return file_achievemenT_proto_rawDescGZIP(), []int{3}
}

func (x *Achievement) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *Achievement) GetStatus() REWARD_STATUS {
	if x != nil {
		return x.Status
	}
	return REWARD_STATUS_CANT
}

// 玩家成就信息
type AchievementInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info             map[int32]*Achievement `protobuf:"bytes,1,rep,name=info,proto3" json:"info,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // 成就条件信息,<成就id,信息>
	Point            int32                  `protobuf:"varint,2,opt,name=point,proto3" json:"point,omitempty"`                                                                                       // 成就积分
	Level            int32                  `protobuf:"varint,3,opt,name=level,proto3" json:"level,omitempty"`                                                                                       // 成就等级
	LastSeasonReward *ItemUpdateResult      `protobuf:"bytes,4,opt,name=lastSeasonReward,proto3" json:"lastSeasonReward,omitempty"`                                                                  // 上赛季未领取的奖励
}

func (x *AchievementInfo) Reset() {
	*x = AchievementInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_achievemenT_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AchievementInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AchievementInfo) ProtoMessage() {}

func (x *AchievementInfo) ProtoReflect() protoreflect.Message {
	mi := &file_achievemenT_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AchievementInfo.ProtoReflect.Descriptor instead.
func (*AchievementInfo) Descriptor() ([]byte, []int) {
	return file_achievemenT_proto_rawDescGZIP(), []int{4}
}

func (x *AchievementInfo) GetInfo() map[int32]*Achievement {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *AchievementInfo) GetPoint() int32 {
	if x != nil {
		return x.Point
	}
	return 0
}

func (x *AchievementInfo) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *AchievementInfo) GetLastSeasonReward() *ItemUpdateResult {
	if x != nil {
		return x.LastSeasonReward
	}
	return nil
}

// 领取成就奖励请求
type AchievementRewardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // 成就id
}

func (x *AchievementRewardReq) Reset() {
	*x = AchievementRewardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_achievemenT_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AchievementRewardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AchievementRewardReq) ProtoMessage() {}

func (x *AchievementRewardReq) ProtoReflect() protoreflect.Message {
	mi := &file_achievemenT_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AchievementRewardReq.ProtoReflect.Descriptor instead.
func (*AchievementRewardReq) Descriptor() ([]byte, []int) {
	return file_achievemenT_proto_rawDescGZIP(), []int{5}
}

func (x *AchievementRewardReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 领取成就奖励返回
type AchievementRewardResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info       *AchievementInfo  `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	ItemResult *ItemUpdateResult `protobuf:"bytes,2,opt,name=itemResult,proto3" json:"itemResult,omitempty"`
}

func (x *AchievementRewardResp) Reset() {
	*x = AchievementRewardResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_achievemenT_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AchievementRewardResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AchievementRewardResp) ProtoMessage() {}

func (x *AchievementRewardResp) ProtoReflect() protoreflect.Message {
	mi := &file_achievemenT_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AchievementRewardResp.ProtoReflect.Descriptor instead.
func (*AchievementRewardResp) Descriptor() ([]byte, []int) {
	return file_achievemenT_proto_rawDescGZIP(), []int{6}
}

func (x *AchievementRewardResp) GetInfo() *AchievementInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *AchievementRewardResp) GetItemResult() *ItemUpdateResult {
	if x != nil {
		return x.ItemResult
	}
	return nil
}

// 有成就被完成时的推送
type AchievementPush struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id []int32 `protobuf:"varint,1,rep,packed,name=id,proto3" json:"id,omitempty"` // 成就id
}

func (x *AchievementPush) Reset() {
	*x = AchievementPush{}
	if protoimpl.UnsafeEnabled {
		mi := &file_achievemenT_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AchievementPush) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AchievementPush) ProtoMessage() {}

func (x *AchievementPush) ProtoReflect() protoreflect.Message {
	mi := &file_achievemenT_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AchievementPush.ProtoReflect.Descriptor instead.
func (*AchievementPush) Descriptor() ([]byte, []int) {
	return file_achievemenT_proto_rawDescGZIP(), []int{7}
}

func (x *AchievementPush) GetId() []int32 {
	if x != nil {
		return x.Id
	}
	return nil
}

var File_achievemenT_proto protoreflect.FileDescriptor

var file_achievemenT_proto_rawDesc = []byte{
	0x0a, 0x11, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x54, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x0f, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x82, 0x01, 0x0a, 0x12, 0x50, 0x75, 0x73, 0x68, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x31, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x32, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x33, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x33, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x4c, 0x0a, 0x14, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x55, 0x70, 0x43, 0x75, 0x70, 0x4d, 0x73, 0x67, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12,
	0x22, 0x0a, 0x0c, 0x62, 0x65, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x64, 0x55, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x62, 0x65, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x64,
	0x55, 0x69, 0x64, 0x22, 0x35, 0x0a, 0x13, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x4b, 0x0a, 0x0b, 0x41, 0x63,
	0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x26, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0e, 0x2e, 0x52, 0x45, 0x57, 0x41, 0x52, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xf3, 0x01, 0x0a, 0x0f, 0x41, 0x63, 0x68, 0x69,
	0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2e, 0x0a, 0x04, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x41, 0x63, 0x68, 0x69,
	0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x49, 0x6e, 0x66, 0x6f,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x3d, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x53,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x1a, 0x45, 0x0a, 0x09, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x22, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x26, 0x0a,
	0x14, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x70, 0x0a, 0x15, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x24,
	0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x41,
	0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x12, 0x31, 0x0a, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0a, 0x69, 0x74, 0x65,
	0x6d, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x21, 0x0a, 0x0f, 0x41, 0x63, 0x68, 0x69, 0x65,
	0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x75, 0x73, 0x68, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x2a, 0x34, 0x0a, 0x0d, 0x43, 0x6f,
	0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x43,
	0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x5f, 0x46, 0x49, 0x47,
	0x48, 0x54, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x5f, 0x49, 0x54, 0x45, 0x4d, 0x10, 0x02,
	0x42, 0x0b, 0x5a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_achievemenT_proto_rawDescOnce sync.Once
	file_achievemenT_proto_rawDescData = file_achievemenT_proto_rawDesc
)

func file_achievemenT_proto_rawDescGZIP() []byte {
	file_achievemenT_proto_rawDescOnce.Do(func() {
		file_achievemenT_proto_rawDescData = protoimpl.X.CompressGZIP(file_achievemenT_proto_rawDescData)
	})
	return file_achievemenT_proto_rawDescData
}

var file_achievemenT_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_achievemenT_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_achievemenT_proto_goTypes = []interface{}{
	(ConditionType)(0),            // 0: ConditionType
	(*PushAchievementMsg)(nil),    // 1: PushAchievementMsg
	(*NoticePlayerUpCupMsg)(nil),  // 2: NoticePlayerUpCupMsg
	(*AchievementEventReq)(nil),   // 3: AchievementEventReq
	(*Achievement)(nil),           // 4: Achievement
	(*AchievementInfo)(nil),       // 5: AchievementInfo
	(*AchievementRewardReq)(nil),  // 6: AchievementRewardReq
	(*AchievementRewardResp)(nil), // 7: AchievementRewardResp
	(*AchievementPush)(nil),       // 8: AchievementPush
	nil,                           // 9: AchievementInfo.InfoEntry
	(REWARD_STATUS)(0),            // 10: REWARD_STATUS
	(*ItemUpdateResult)(nil),      // 11: ItemUpdateResult
}
var file_achievemenT_proto_depIdxs = []int32{
	10, // 0: Achievement.status:type_name -> REWARD_STATUS
	9,  // 1: AchievementInfo.info:type_name -> AchievementInfo.InfoEntry
	11, // 2: AchievementInfo.lastSeasonReward:type_name -> ItemUpdateResult
	5,  // 3: AchievementRewardResp.info:type_name -> AchievementInfo
	11, // 4: AchievementRewardResp.itemResult:type_name -> ItemUpdateResult
	4,  // 5: AchievementInfo.InfoEntry.value:type_name -> Achievement
	6,  // [6:6] is the sub-list for method output_type
	6,  // [6:6] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_achievemenT_proto_init() }
func file_achievemenT_proto_init() {
	if File_achievemenT_proto != nil {
		return
	}
	file_item_proto_init()
	file_advertise_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_achievemenT_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushAchievementMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_achievemenT_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoticePlayerUpCupMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_achievemenT_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AchievementEventReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_achievemenT_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Achievement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_achievemenT_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AchievementInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_achievemenT_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AchievementRewardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_achievemenT_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AchievementRewardResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_achievemenT_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AchievementPush); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_achievemenT_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_achievemenT_proto_goTypes,
		DependencyIndexes: file_achievemenT_proto_depIdxs,
		EnumInfos:         file_achievemenT_proto_enumTypes,
		MessageInfos:      file_achievemenT_proto_msgTypes,
	}.Build()
	File_achievemenT_proto = out.File
	file_achievemenT_proto_rawDesc = nil
	file_achievemenT_proto_goTypes = nil
	file_achievemenT_proto_depIdxs = nil
}
