// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.10.0
// source: novice_task.proto

package pb

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// 新手活动信息
type NoviceTaskInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeLeft          int64                     `protobuf:"varint,1,opt,name=timeLeft,proto3" json:"timeLeft,omitempty"`                                                                                                                               // 活动倒计时秒,整个七天的
	Day               int32                     `protobuf:"varint,3,opt,name=day,proto3" json:"day,omitempty"`                                                                                                                                         // 当前激活的任务天数
	SingleInfo        map[int32]*SingleTaskInfo `protobuf:"bytes,4,rep,name=singleInfo,proto3" json:"singleInfo,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`                                   // <id,单个任务信息>
	DailyTimeLeft     int64                     `protobuf:"varint,5,opt,name=dailyTimeLeft,proto3" json:"dailyTimeLeft,omitempty"`                                                                                                                     // 每日倒计时,还有多少秒到第二天五点
	DailyRewardStatus map[int32]REWARD_STATUS   `protobuf:"bytes,6,rep,name=dailyRewardStatus,proto3" json:"dailyRewardStatus,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3,enum=REWARD_STATUS"` // 每日奖励状态<day,status>
}

func (x *NoviceTaskInfo) Reset() {
	*x = NoviceTaskInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_novice_task_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoviceTaskInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoviceTaskInfo) ProtoMessage() {}

func (x *NoviceTaskInfo) ProtoReflect() protoreflect.Message {
	mi := &file_novice_task_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoviceTaskInfo.ProtoReflect.Descriptor instead.
func (*NoviceTaskInfo) Descriptor() ([]byte, []int) {
	return file_novice_task_proto_rawDescGZIP(), []int{0}
}

func (x *NoviceTaskInfo) GetTimeLeft() int64 {
	if x != nil {
		return x.TimeLeft
	}
	return 0
}

func (x *NoviceTaskInfo) GetDay() int32 {
	if x != nil {
		return x.Day
	}
	return 0
}

func (x *NoviceTaskInfo) GetSingleInfo() map[int32]*SingleTaskInfo {
	if x != nil {
		return x.SingleInfo
	}
	return nil
}

func (x *NoviceTaskInfo) GetDailyTimeLeft() int64 {
	if x != nil {
		return x.DailyTimeLeft
	}
	return 0
}

func (x *NoviceTaskInfo) GetDailyRewardStatus() map[int32]REWARD_STATUS {
	if x != nil {
		return x.DailyRewardStatus
	}
	return nil
}

// 单个任务信息
type SingleTaskInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Val    int32         `protobuf:"varint,1,opt,name=val,proto3" json:"val,omitempty"`                          // 记录值
	Status REWARD_STATUS `protobuf:"varint,2,opt,name=status,proto3,enum=REWARD_STATUS" json:"status,omitempty"` // 奖励状态
}

func (x *SingleTaskInfo) Reset() {
	*x = SingleTaskInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_novice_task_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SingleTaskInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SingleTaskInfo) ProtoMessage() {}

func (x *SingleTaskInfo) ProtoReflect() protoreflect.Message {
	mi := &file_novice_task_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SingleTaskInfo.ProtoReflect.Descriptor instead.
func (*SingleTaskInfo) Descriptor() ([]byte, []int) {
	return file_novice_task_proto_rawDescGZIP(), []int{1}
}

func (x *SingleTaskInfo) GetVal() int32 {
	if x != nil {
		return x.Val
	}
	return 0
}

func (x *SingleTaskInfo) GetStatus() REWARD_STATUS {
	if x != nil {
		return x.Status
	}
	return REWARD_STATUS_CANT
}

type NoviceTaskRewardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`         // 任务id
	Belong int32 `protobuf:"varint,2,opt,name=belong,proto3" json:"belong,omitempty"` // 领取未指定球员的熟练度时,球员id
}

func (x *NoviceTaskRewardReq) Reset() {
	*x = NoviceTaskRewardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_novice_task_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoviceTaskRewardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoviceTaskRewardReq) ProtoMessage() {}

func (x *NoviceTaskRewardReq) ProtoReflect() protoreflect.Message {
	mi := &file_novice_task_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoviceTaskRewardReq.ProtoReflect.Descriptor instead.
func (*NoviceTaskRewardReq) Descriptor() ([]byte, []int) {
	return file_novice_task_proto_rawDescGZIP(), []int{2}
}

func (x *NoviceTaskRewardReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NoviceTaskRewardReq) GetBelong() int32 {
	if x != nil {
		return x.Belong
	}
	return 0
}

type NoviceTaskRewardResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info             *NoviceTaskInfo   `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	ItemUpdateResult *ItemUpdateResult `protobuf:"bytes,2,opt,name=itemUpdateResult,proto3" json:"itemUpdateResult,omitempty"`
}

func (x *NoviceTaskRewardResp) Reset() {
	*x = NoviceTaskRewardResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_novice_task_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoviceTaskRewardResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoviceTaskRewardResp) ProtoMessage() {}

func (x *NoviceTaskRewardResp) ProtoReflect() protoreflect.Message {
	mi := &file_novice_task_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoviceTaskRewardResp.ProtoReflect.Descriptor instead.
func (*NoviceTaskRewardResp) Descriptor() ([]byte, []int) {
	return file_novice_task_proto_rawDescGZIP(), []int{3}
}

func (x *NoviceTaskRewardResp) GetInfo() *NoviceTaskInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *NoviceTaskRewardResp) GetItemUpdateResult() *ItemUpdateResult {
	if x != nil {
		return x.ItemUpdateResult
	}
	return nil
}

type NoviceTaskRemakeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Day int32 `protobuf:"varint,1,opt,name=day,proto3" json:"day,omitempty"` // 选择重训练到第几天
}

func (x *NoviceTaskRemakeReq) Reset() {
	*x = NoviceTaskRemakeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_novice_task_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoviceTaskRemakeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoviceTaskRemakeReq) ProtoMessage() {}

func (x *NoviceTaskRemakeReq) ProtoReflect() protoreflect.Message {
	mi := &file_novice_task_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoviceTaskRemakeReq.ProtoReflect.Descriptor instead.
func (*NoviceTaskRemakeReq) Descriptor() ([]byte, []int) {
	return file_novice_task_proto_rawDescGZIP(), []int{4}
}

func (x *NoviceTaskRemakeReq) GetDay() int32 {
	if x != nil {
		return x.Day
	}
	return 0
}

type NoviceDailyRewardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Day    int32 `protobuf:"varint,1,opt,name=day,proto3" json:"day,omitempty"`
	Belong int32 `protobuf:"varint,2,opt,name=belong,proto3" json:"belong,omitempty"` // 领取未指定球员的熟练度时,球员id
}

func (x *NoviceDailyRewardReq) Reset() {
	*x = NoviceDailyRewardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_novice_task_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoviceDailyRewardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoviceDailyRewardReq) ProtoMessage() {}

func (x *NoviceDailyRewardReq) ProtoReflect() protoreflect.Message {
	mi := &file_novice_task_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoviceDailyRewardReq.ProtoReflect.Descriptor instead.
func (*NoviceDailyRewardReq) Descriptor() ([]byte, []int) {
	return file_novice_task_proto_rawDescGZIP(), []int{5}
}

func (x *NoviceDailyRewardReq) GetDay() int32 {
	if x != nil {
		return x.Day
	}
	return 0
}

func (x *NoviceDailyRewardReq) GetBelong() int32 {
	if x != nil {
		return x.Belong
	}
	return 0
}

var File_novice_task_proto protoreflect.FileDescriptor

var file_novice_task_proto_rawDesc = []byte{
	0x0a, 0x11, 0x6e, 0x6f, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xa1, 0x03, 0x0a, 0x0e, 0x4e, 0x6f, 0x76, 0x69, 0x63, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x4c, 0x65, 0x66, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x4c, 0x65, 0x66, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x64, 0x61, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x64, 0x61,
	0x79, 0x12, 0x3f, 0x0a, 0x0a, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x4e, 0x6f, 0x76, 0x69, 0x63, 0x65, 0x54, 0x61,
	0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x4c,
	0x65, 0x66, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x64, 0x61, 0x69, 0x6c, 0x79,
	0x54, 0x69, 0x6d, 0x65, 0x4c, 0x65, 0x66, 0x74, 0x12, 0x54, 0x0a, 0x11, 0x64, 0x61, 0x69, 0x6c,
	0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x4e, 0x6f, 0x76, 0x69, 0x63, 0x65, 0x54, 0x61, 0x73, 0x6b,
	0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x11, 0x64, 0x61, 0x69,
	0x6c, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0x4e,
	0x0a, 0x0f, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x25, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x54,
	0x0a, 0x16, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x24, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x52, 0x45, 0x57, 0x41,
	0x52, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x4a, 0x0a, 0x0e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x54, 0x61,
	0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x12, 0x26, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x52, 0x45, 0x57, 0x41, 0x52,
	0x44, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x3d, 0x0a, 0x13, 0x4e, 0x6f, 0x76, 0x69, 0x63, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x65, 0x6c, 0x6f, 0x6e,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x62, 0x65, 0x6c, 0x6f, 0x6e, 0x67, 0x22,
	0x7a, 0x0a, 0x14, 0x4e, 0x6f, 0x76, 0x69, 0x63, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x23, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x4e, 0x6f, 0x76, 0x69, 0x63, 0x65, 0x54, 0x61,
	0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x3d, 0x0a, 0x10,
	0x69, 0x74, 0x65, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x10, 0x69, 0x74, 0x65, 0x6d, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x27, 0x0a, 0x13, 0x4e,
	0x6f, 0x76, 0x69, 0x63, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x6d, 0x61, 0x6b, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x61, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x64, 0x61, 0x79, 0x22, 0x40, 0x0a, 0x14, 0x4e, 0x6f, 0x76, 0x69, 0x63, 0x65, 0x44, 0x61,
	0x69, 0x6c, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03,
	0x64, 0x61, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x64, 0x61, 0x79, 0x12, 0x16,
	0x0a, 0x06, 0x62, 0x65, 0x6c, 0x6f, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x62, 0x65, 0x6c, 0x6f, 0x6e, 0x67, 0x42, 0x0b, 0x5a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_novice_task_proto_rawDescOnce sync.Once
	file_novice_task_proto_rawDescData = file_novice_task_proto_rawDesc
)

func file_novice_task_proto_rawDescGZIP() []byte {
	file_novice_task_proto_rawDescOnce.Do(func() {
		file_novice_task_proto_rawDescData = protoimpl.X.CompressGZIP(file_novice_task_proto_rawDescData)
	})
	return file_novice_task_proto_rawDescData
}

var file_novice_task_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_novice_task_proto_goTypes = []interface{}{
	(*NoviceTaskInfo)(nil),       // 0: NoviceTaskInfo
	(*SingleTaskInfo)(nil),       // 1: SingleTaskInfo
	(*NoviceTaskRewardReq)(nil),  // 2: NoviceTaskRewardReq
	(*NoviceTaskRewardResp)(nil), // 3: NoviceTaskRewardResp
	(*NoviceTaskRemakeReq)(nil),  // 4: NoviceTaskRemakeReq
	(*NoviceDailyRewardReq)(nil), // 5: NoviceDailyRewardReq
	nil,                          // 6: NoviceTaskInfo.SingleInfoEntry
	nil,                          // 7: NoviceTaskInfo.DailyRewardStatusEntry
	(REWARD_STATUS)(0),           // 8: REWARD_STATUS
	(*ItemUpdateResult)(nil),     // 9: ItemUpdateResult
}
var file_novice_task_proto_depIdxs = []int32{
	6, // 0: NoviceTaskInfo.singleInfo:type_name -> NoviceTaskInfo.SingleInfoEntry
	7, // 1: NoviceTaskInfo.dailyRewardStatus:type_name -> NoviceTaskInfo.DailyRewardStatusEntry
	8, // 2: SingleTaskInfo.status:type_name -> REWARD_STATUS
	0, // 3: NoviceTaskRewardResp.info:type_name -> NoviceTaskInfo
	9, // 4: NoviceTaskRewardResp.itemUpdateResult:type_name -> ItemUpdateResult
	1, // 5: NoviceTaskInfo.SingleInfoEntry.value:type_name -> SingleTaskInfo
	8, // 6: NoviceTaskInfo.DailyRewardStatusEntry.value:type_name -> REWARD_STATUS
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_novice_task_proto_init() }
func file_novice_task_proto_init() {
	if File_novice_task_proto != nil {
		return
	}
	file_advertise_proto_init()
	file_item_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_novice_task_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoviceTaskInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_novice_task_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SingleTaskInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_novice_task_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoviceTaskRewardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_novice_task_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoviceTaskRewardResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_novice_task_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoviceTaskRemakeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_novice_task_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoviceDailyRewardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_novice_task_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_novice_task_proto_goTypes,
		DependencyIndexes: file_novice_task_proto_depIdxs,
		MessageInfos:      file_novice_task_proto_msgTypes,
	}.Build()
	File_novice_task_proto = out.File
	file_novice_task_proto_rawDesc = nil
	file_novice_task_proto_goTypes = nil
	file_novice_task_proto_depIdxs = nil
}
