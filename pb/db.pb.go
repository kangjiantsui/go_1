// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.10.0
// source: db.proto

package pb

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type UidBind struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UidBind) Reset() {
	*x = UidBind{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UidBind) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UidBind) ProtoMessage() {}

func (x *UidBind) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UidBind.ProtoReflect.Descriptor instead.
func (*UidBind) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{0}
}

func (x *UidBind) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type IndexMgrInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdxFuncUnique int32  `protobuf:"varint,1,opt,name=IdxFuncUnique,proto3" json:"IdxFuncUnique,omitempty"`
	FuncName      string `protobuf:"bytes,2,opt,name=FuncName,proto3" json:"FuncName,omitempty"`
	CurrentIndex  int64  `protobuf:"varint,3,opt,name=CurrentIndex,proto3" json:"CurrentIndex,omitempty"`
}

func (x *IndexMgrInfo) Reset() {
	*x = IndexMgrInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexMgrInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexMgrInfo) ProtoMessage() {}

func (x *IndexMgrInfo) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexMgrInfo.ProtoReflect.Descriptor instead.
func (*IndexMgrInfo) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{1}
}

func (x *IndexMgrInfo) GetIdxFuncUnique() int32 {
	if x != nil {
		return x.IdxFuncUnique
	}
	return 0
}

func (x *IndexMgrInfo) GetFuncName() string {
	if x != nil {
		return x.FuncName
	}
	return ""
}

func (x *IndexMgrInfo) GetCurrentIndex() int64 {
	if x != nil {
		return x.CurrentIndex
	}
	return 0
}

// 巡回赛（赛季挑战）
type TourPublicMongo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Season    int32           `protobuf:"varint,1,opt,name=season,proto3" json:"season,omitempty"`                                                                                            // 当前赛季   需要根据起始时间来算，需要设置，不能增加（避免重复加）
	SPoint    int32           `protobuf:"varint,2,opt,name=sPoint,proto3" json:"sPoint,omitempty"`                                                                                            // 当前赛点   需要根据起始时间来算，需要设置，不能增加（避免重复加）
	STime     int64           `protobuf:"varint,3,opt,name=sTime,proto3" json:"sTime,omitempty"`                                                                                              // 赛季开始时间戳
	SeasonNum int32           `protobuf:"varint,4,opt,name=seasonNum,proto3" json:"seasonNum,omitempty"`                                                                                      // 第几个赛季
	ModeRec   map[int32]int32 `protobuf:"bytes,5,rep,name=modeRec,proto3" json:"modeRec,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` // 赛点玩法记录
	BeginTime int64           `protobuf:"varint,6,opt,name=beginTime,proto3" json:"beginTime,omitempty"`                                                                                      // 赛季系统初始化时间戳,用于计算当前是第几个赛季
}

func (x *TourPublicMongo) Reset() {
	*x = TourPublicMongo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TourPublicMongo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TourPublicMongo) ProtoMessage() {}

func (x *TourPublicMongo) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TourPublicMongo.ProtoReflect.Descriptor instead.
func (*TourPublicMongo) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{2}
}

func (x *TourPublicMongo) GetSeason() int32 {
	if x != nil {
		return x.Season
	}
	return 0
}

func (x *TourPublicMongo) GetSPoint() int32 {
	if x != nil {
		return x.SPoint
	}
	return 0
}

func (x *TourPublicMongo) GetSTime() int64 {
	if x != nil {
		return x.STime
	}
	return 0
}

func (x *TourPublicMongo) GetSeasonNum() int32 {
	if x != nil {
		return x.SeasonNum
	}
	return 0
}

func (x *TourPublicMongo) GetModeRec() map[int32]int32 {
	if x != nil {
		return x.ModeRec
	}
	return nil
}

func (x *TourPublicMongo) GetBeginTime() int64 {
	if x != nil {
		return x.BeginTime
	}
	return 0
}

// 天梯全局存储
type LadderPublic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BType  int32 `protobuf:"varint,1,opt,name=bType,proto3" json:"bType,omitempty"`   // 玩法模式
	Period int32 `protobuf:"varint,2,opt,name=period,proto3" json:"period,omitempty"` // 该方法当前期数
	Start  int64 `protobuf:"varint,3,opt,name=start,proto3" json:"start,omitempty"`   // 玩法开始时间
}

func (x *LadderPublic) Reset() {
	*x = LadderPublic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LadderPublic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LadderPublic) ProtoMessage() {}

func (x *LadderPublic) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LadderPublic.ProtoReflect.Descriptor instead.
func (*LadderPublic) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{3}
}

func (x *LadderPublic) GetBType() int32 {
	if x != nil {
		return x.BType
	}
	return 0
}

func (x *LadderPublic) GetPeriod() int32 {
	if x != nil {
		return x.Period
	}
	return 0
}

func (x *LadderPublic) GetStart() int64 {
	if x != nil {
		return x.Start
	}
	return 0
}

type LadderPublicMongo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	S []*LadderPublic `protobuf:"bytes,1,rep,name=s,proto3" json:"s,omitempty"` // 存储列表
}

func (x *LadderPublicMongo) Reset() {
	*x = LadderPublicMongo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LadderPublicMongo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LadderPublicMongo) ProtoMessage() {}

func (x *LadderPublicMongo) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LadderPublicMongo.ProtoReflect.Descriptor instead.
func (*LadderPublicMongo) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{4}
}

func (x *LadderPublicMongo) GetS() []*LadderPublic {
	if x != nil {
		return x.S
	}
	return nil
}

type LadderPlayer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BType   int32 `protobuf:"varint,1,opt,name=bType,proto3" json:"bType,omitempty"`     // 玩法模式
	RPeriod int32 `protobuf:"varint,2,opt,name=rPeriod,proto3" json:"rPeriod,omitempty"` // 上次领奖期数
}

func (x *LadderPlayer) Reset() {
	*x = LadderPlayer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LadderPlayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LadderPlayer) ProtoMessage() {}

func (x *LadderPlayer) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LadderPlayer.ProtoReflect.Descriptor instead.
func (*LadderPlayer) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{5}
}

func (x *LadderPlayer) GetBType() int32 {
	if x != nil {
		return x.BType
	}
	return 0
}

func (x *LadderPlayer) GetRPeriod() int32 {
	if x != nil {
		return x.RPeriod
	}
	return 0
}

// 球星之路全局信息
type GloryPublicMongo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeasonId int32 `protobuf:"varint,1,opt,name=seasonId,proto3" json:"seasonId,omitempty"` // 赛季id
	StarTime int64 `protobuf:"varint,2,opt,name=starTime,proto3" json:"starTime,omitempty"` // 当前赛季开始时间
}

func (x *GloryPublicMongo) Reset() {
	*x = GloryPublicMongo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GloryPublicMongo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GloryPublicMongo) ProtoMessage() {}

func (x *GloryPublicMongo) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GloryPublicMongo.ProtoReflect.Descriptor instead.
func (*GloryPublicMongo) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{6}
}

func (x *GloryPublicMongo) GetSeasonId() int32 {
	if x != nil {
		return x.SeasonId
	}
	return 0
}

func (x *GloryPublicMongo) GetStarTime() int64 {
	if x != nil {
		return x.StarTime
	}
	return 0
}

type MissionRefreshLimit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeLimit int32 `protobuf:"varint,1,opt,name=timeLimit,proto3" json:"timeLimit,omitempty"` // 次数限制
	LastTime  int64 `protobuf:"varint,2,opt,name=lastTime,proto3" json:"lastTime,omitempty"`   // 上次刷新时间
}

func (x *MissionRefreshLimit) Reset() {
	*x = MissionRefreshLimit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MissionRefreshLimit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MissionRefreshLimit) ProtoMessage() {}

func (x *MissionRefreshLimit) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MissionRefreshLimit.ProtoReflect.Descriptor instead.
func (*MissionRefreshLimit) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{7}
}

func (x *MissionRefreshLimit) GetTimeLimit() int32 {
	if x != nil {
		return x.TimeLimit
	}
	return 0
}

func (x *MissionRefreshLimit) GetLastTime() int64 {
	if x != nil {
		return x.LastTime
	}
	return 0
}

type MissionInfoMongo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PSeason      int32                          `protobuf:"varint,1,opt,name=pSeason,proto3" json:"pSeason,omitempty"`                                                                                                   // 当前玩家检查的seasonId   赛季相关
	Pref         int32                          `protobuf:"varint,2,opt,name=pref,proto3" json:"pref,omitempty"`                                                                                                         // 当前玩家检查的pref 保证一天只检查一次，检查完之后跟小滚pref   不需要遍历全任务
	MType        map[int32]*MissionType         `protobuf:"bytes,3,rep,name=mType,proto3" json:"mType,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`               // 分类型任务   Type:类型任务
	MissionLimit map[int32]*MissionRefreshLimit `protobuf:"bytes,4,rep,name=missionLimit,proto3" json:"missionLimit,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // 限制条件 任务id:限制
}

func (x *MissionInfoMongo) Reset() {
	*x = MissionInfoMongo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MissionInfoMongo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MissionInfoMongo) ProtoMessage() {}

func (x *MissionInfoMongo) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MissionInfoMongo.ProtoReflect.Descriptor instead.
func (*MissionInfoMongo) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{8}
}

func (x *MissionInfoMongo) GetPSeason() int32 {
	if x != nil {
		return x.PSeason
	}
	return 0
}

func (x *MissionInfoMongo) GetPref() int32 {
	if x != nil {
		return x.Pref
	}
	return 0
}

func (x *MissionInfoMongo) GetMType() map[int32]*MissionType {
	if x != nil {
		return x.MType
	}
	return nil
}

func (x *MissionInfoMongo) GetMissionLimit() map[int32]*MissionRefreshLimit {
	if x != nil {
		return x.MissionLimit
	}
	return nil
}

// 最近对战的玩家
type RecentFights struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IcList []uint64 `protobuf:"varint,1,rep,packed,name=icList,proto3" json:"icList,omitempty"`
}

func (x *RecentFights) Reset() {
	*x = RecentFights{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecentFights) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecentFights) ProtoMessage() {}

func (x *RecentFights) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecentFights.ProtoReflect.Descriptor instead.
func (*RecentFights) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{9}
}

func (x *RecentFights) GetIcList() []uint64 {
	if x != nil {
		return x.IcList
	}
	return nil
}

// 好友信息
type FriendInfoMongo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Friends       map[uint64]FRIEND_SOURCE `protobuf:"bytes,1,rep,name=friends,proto3" json:"friends,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3,enum=FRIEND_SOURCE"` // 好友列表
	ReqInfo       map[uint64]*ReqInfo      `protobuf:"bytes,2,rep,name=reqInfo,proto3" json:"reqInfo,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`                     // 好友请求
	Recommend     map[uint64]*Recommend    `protobuf:"bytes,4,rep,name=recommend,proto3" json:"recommend,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`                 // 推荐好友
	RecommendTime int64                    `protobuf:"varint,5,opt,name=recommendTime,proto3" json:"recommendTime,omitempty"`                                                                                                 // 推荐好友 最后刷新时间
	RecentFights  []*RecentFights          `protobuf:"bytes,6,rep,name=recentFights,proto3" json:"recentFights,omitempty"`                                                                                                    // 最近对战玩家
	SharePlayers  map[uint64]bool          `protobuf:"bytes,7,rep,name=sharePlayers,proto3" json:"sharePlayers,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`          // 接受邀请的玩家
}

func (x *FriendInfoMongo) Reset() {
	*x = FriendInfoMongo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendInfoMongo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendInfoMongo) ProtoMessage() {}

func (x *FriendInfoMongo) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendInfoMongo.ProtoReflect.Descriptor instead.
func (*FriendInfoMongo) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{10}
}

func (x *FriendInfoMongo) GetFriends() map[uint64]FRIEND_SOURCE {
	if x != nil {
		return x.Friends
	}
	return nil
}

func (x *FriendInfoMongo) GetReqInfo() map[uint64]*ReqInfo {
	if x != nil {
		return x.ReqInfo
	}
	return nil
}

func (x *FriendInfoMongo) GetRecommend() map[uint64]*Recommend {
	if x != nil {
		return x.Recommend
	}
	return nil
}

func (x *FriendInfoMongo) GetRecommendTime() int64 {
	if x != nil {
		return x.RecommendTime
	}
	return 0
}

func (x *FriendInfoMongo) GetRecentFights() []*RecentFights {
	if x != nil {
		return x.RecentFights
	}
	return nil
}

func (x *FriendInfoMongo) GetSharePlayers() map[uint64]bool {
	if x != nil {
		return x.SharePlayers
	}
	return nil
}

// 激活码结构
type ActivateCodeItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Wid  string `protobuf:"bytes,2,opt,name=wid,proto3" json:"wid,omitempty"`
	Ic   uint64 `protobuf:"varint,3,opt,name=ic,proto3" json:"ic,omitempty"`
}

func (x *ActivateCodeItem) Reset() {
	*x = ActivateCodeItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivateCodeItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivateCodeItem) ProtoMessage() {}

func (x *ActivateCodeItem) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivateCodeItem.ProtoReflect.Descriptor instead.
func (*ActivateCodeItem) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{11}
}

func (x *ActivateCodeItem) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ActivateCodeItem) GetWid() string {
	if x != nil {
		return x.Wid
	}
	return ""
}

func (x *ActivateCodeItem) GetIc() uint64 {
	if x != nil {
		return x.Ic
	}
	return 0
}

type WhiteListStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ips []string `protobuf:"bytes,1,rep,name=ips,proto3" json:"ips,omitempty"`
	Ics []uint64 `protobuf:"varint,2,rep,packed,name=ics,proto3" json:"ics,omitempty"`
}

func (x *WhiteListStruct) Reset() {
	*x = WhiteListStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhiteListStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhiteListStruct) ProtoMessage() {}

func (x *WhiteListStruct) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhiteListStruct.ProtoReflect.Descriptor instead.
func (*WhiteListStruct) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{12}
}

func (x *WhiteListStruct) GetIps() []string {
	if x != nil {
		return x.Ips
	}
	return nil
}

func (x *WhiteListStruct) GetIcs() []uint64 {
	if x != nil {
		return x.Ics
	}
	return nil
}

type VCUpdateInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version       string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`             // 版本号
	HUrl          string `protobuf:"bytes,2,opt,name=hUrl,proto3" json:"hUrl,omitempty"`                   // 热更地址
	FUrl          string `protobuf:"bytes,3,opt,name=fUrl,proto3" json:"fUrl,omitempty"`                   // 强更地址
	SName         string `protobuf:"bytes,4,opt,name=sName,proto3" json:"sName,omitempty"`                 // 资源名
	Note          string `protobuf:"bytes,5,opt,name=note,proto3" json:"note,omitempty"`                   // 强更说明
	LowestVersion string `protobuf:"bytes,6,opt,name=lowestVersion,proto3" json:"lowestVersion,omitempty"` // 最低版本号
}

func (x *VCUpdateInfo) Reset() {
	*x = VCUpdateInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VCUpdateInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VCUpdateInfo) ProtoMessage() {}

func (x *VCUpdateInfo) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VCUpdateInfo.ProtoReflect.Descriptor instead.
func (*VCUpdateInfo) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{13}
}

func (x *VCUpdateInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *VCUpdateInfo) GetHUrl() string {
	if x != nil {
		return x.HUrl
	}
	return ""
}

func (x *VCUpdateInfo) GetFUrl() string {
	if x != nil {
		return x.FUrl
	}
	return ""
}

func (x *VCUpdateInfo) GetSName() string {
	if x != nil {
		return x.SName
	}
	return ""
}

func (x *VCUpdateInfo) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *VCUpdateInfo) GetLowestVersion() string {
	if x != nil {
		return x.LowestVersion
	}
	return ""
}

// 版本检测结构
type VersionCheckMongo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Platform int32                   `protobuf:"varint,1,opt,name=platform,proto3" json:"platform,omitempty"`
	Channel  string                  `protobuf:"bytes,2,opt,name=channel,proto3" json:"channel,omitempty"`
	VcInfo   map[int32]*VCUpdateInfo `protobuf:"bytes,3,rep,name=vcInfo,proto3" json:"vcInfo,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // 根据白名单选择  1：白名单资料   0：非白名单资料
	Wl       *WhiteListStruct        `protobuf:"bytes,4,opt,name=wl,proto3" json:"wl,omitempty"`
	Open     bool                    `protobuf:"varint,5,opt,name=open,proto3" json:"open,omitempty"`
}

func (x *VersionCheckMongo) Reset() {
	*x = VersionCheckMongo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersionCheckMongo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionCheckMongo) ProtoMessage() {}

func (x *VersionCheckMongo) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionCheckMongo.ProtoReflect.Descriptor instead.
func (*VersionCheckMongo) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{14}
}

func (x *VersionCheckMongo) GetPlatform() int32 {
	if x != nil {
		return x.Platform
	}
	return 0
}

func (x *VersionCheckMongo) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *VersionCheckMongo) GetVcInfo() map[int32]*VCUpdateInfo {
	if x != nil {
		return x.VcInfo
	}
	return nil
}

func (x *VersionCheckMongo) GetWl() *WhiteListStruct {
	if x != nil {
		return x.Wl
	}
	return nil
}

func (x *VersionCheckMongo) GetOpen() bool {
	if x != nil {
		return x.Open
	}
	return false
}

type PlayRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	R []int32 `protobuf:"varint,1,rep,packed,name=r,proto3" json:"r,omitempty"`
}

func (x *PlayRecord) Reset() {
	*x = PlayRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayRecord) ProtoMessage() {}

func (x *PlayRecord) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayRecord.ProtoReflect.Descriptor instead.
func (*PlayRecord) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{15}
}

func (x *PlayRecord) GetR() []int32 {
	if x != nil {
		return x.R
	}
	return nil
}

// 路人王公共信息
type KingRoundPublicMongo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WeekPeriod int32                 `protobuf:"varint,1,opt,name=weekPeriod,proto3" json:"weekPeriod,omitempty"`                                                                                         // 周期数   unique week + 1/2/3/4
	PlayId     map[int32]int32       `protobuf:"bytes,2,rep,name=playId,proto3" json:"playId,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`        // 当前周期内随机出来的玩法， 轮次：玩法
	PlayRecord map[int32]*PlayRecord `protobuf:"bytes,3,rep,name=playRecord,proto3" json:"playRecord,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // 已经随机出来的玩法总记录  轮次：玩法[]
}

func (x *KingRoundPublicMongo) Reset() {
	*x = KingRoundPublicMongo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KingRoundPublicMongo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KingRoundPublicMongo) ProtoMessage() {}

func (x *KingRoundPublicMongo) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KingRoundPublicMongo.ProtoReflect.Descriptor instead.
func (*KingRoundPublicMongo) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{16}
}

func (x *KingRoundPublicMongo) GetWeekPeriod() int32 {
	if x != nil {
		return x.WeekPeriod
	}
	return 0
}

func (x *KingRoundPublicMongo) GetPlayId() map[int32]int32 {
	if x != nil {
		return x.PlayId
	}
	return nil
}

func (x *KingRoundPublicMongo) GetPlayRecord() map[int32]*PlayRecord {
	if x != nil {
		return x.PlayRecord
	}
	return nil
}

var File_db_proto protoreflect.FileDescriptor

var file_db_proto_rawDesc = []byte{
	0x0a, 0x08, 0x64, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x66, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x19, 0x0a, 0x07, 0x55, 0x69, 0x64, 0x42, 0x69, 0x6e, 0x64,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x74, 0x0a, 0x0c, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4d, 0x67, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x24, 0x0a, 0x0d, 0x49, 0x64, 0x78, 0x46, 0x75, 0x6e, 0x63, 0x55, 0x6e, 0x69, 0x71, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x49, 0x64, 0x78, 0x46, 0x75, 0x6e, 0x63,
	0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x75, 0x6e, 0x63, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x75, 0x6e, 0x63, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x88, 0x02, 0x0a, 0x0f, 0x54, 0x6f, 0x75, 0x72, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x73, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x12, 0x37,
	0x0a, 0x07, 0x6d, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x63, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4d, 0x6f, 0x6e, 0x67,
	0x6f, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x63, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07,
	0x6d, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x62, 0x65, 0x67, 0x69,
	0x6e, 0x54, 0x69, 0x6d, 0x65, 0x1a, 0x3a, 0x0a, 0x0c, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x63,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x52, 0x0a, 0x0c, 0x4c, 0x61, 0x64, 0x64, 0x65, 0x72, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x22, 0x30, 0x0a, 0x11, 0x4c, 0x61, 0x64, 0x64, 0x65, 0x72, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x12, 0x1b, 0x0a, 0x01, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x4c, 0x61, 0x64, 0x64, 0x65, 0x72, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x52, 0x01, 0x73, 0x22, 0x3e, 0x0a, 0x0c, 0x4c, 0x61, 0x64, 0x64, 0x65,
	0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x72, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x72, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x22, 0x4a, 0x0a, 0x10, 0x47, 0x6c, 0x6f, 0x72, 0x79,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x73,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x72, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x74, 0x61, 0x72, 0x54,
	0x69, 0x6d, 0x65, 0x22, 0x4f, 0x0a, 0x13, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x73, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x22, 0xdc, 0x02, 0x0a, 0x10, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x53, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x53, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x72, 0x65, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x70, 0x72, 0x65, 0x66, 0x12, 0x32, 0x0a, 0x05, 0x6d, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x2e, 0x4d, 0x54, 0x79, 0x70, 0x65, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x47, 0x0a, 0x0c, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x4d,
	0x6f, 0x6e, 0x67, 0x6f, 0x2e, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x1a, 0x46, 0x0a, 0x0a, 0x4d, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x22, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x55, 0x0a, 0x11,
	0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x66, 0x72,
	0x65, 0x73, 0x68, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x26, 0x0a, 0x0c, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x67,
	0x68, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x04, 0x52, 0x06, 0x69, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x80, 0x05, 0x0a, 0x0f,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x12,
	0x37, 0x0a, 0x07, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x6f, 0x6e,
	0x67, 0x6f, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x07, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x12, 0x37, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x2e, 0x52, 0x65, 0x71, 0x49,
	0x6e, 0x66, 0x6f, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x72, 0x65, 0x71, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x3d, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66,
	0x6f, 0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64,
	0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x31, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x6e, 0x74,
	0x46, 0x69, 0x67, 0x68, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x52,
	0x65, 0x63, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x67, 0x68, 0x74, 0x73, 0x52, 0x0c, 0x72, 0x65, 0x63,
	0x65, 0x6e, 0x74, 0x46, 0x69, 0x67, 0x68, 0x74, 0x73, 0x12, 0x46, 0x0a, 0x0c, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x6f, 0x6e, 0x67,
	0x6f, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x0c, 0x73, 0x68, 0x61, 0x72, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x73, 0x1a, 0x4a, 0x0a, 0x0c, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x24, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x46, 0x52, 0x49, 0x45, 0x4e, 0x44, 0x5f, 0x53, 0x4f, 0x55, 0x52,
	0x43, 0x45, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x44, 0x0a,
	0x0c, 0x52, 0x65, 0x71, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08,
	0x2e, 0x52, 0x65, 0x71, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x1a, 0x48, 0x0a, 0x0e, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x20, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x64, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3f, 0x0a,
	0x11, 0x53, 0x68, 0x61, 0x72, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x48,
	0x0a, 0x10, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x77, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x77, 0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x63, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x63, 0x22, 0x35, 0x0a, 0x0f, 0x57, 0x68, 0x69, 0x74,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69,
	0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x70, 0x73, 0x12, 0x10, 0x0a,
	0x03, 0x69, 0x63, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04, 0x52, 0x03, 0x69, 0x63, 0x73, 0x22,
	0xa0, 0x01, 0x0a, 0x0c, 0x56, 0x43, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x55,
	0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x55, 0x72, 0x6c, 0x12, 0x12,
	0x0a, 0x04, 0x66, 0x55, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x55,
	0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0d,
	0x6c, 0x6f, 0x77, 0x65, 0x73, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x6f, 0x77, 0x65, 0x73, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x22, 0x81, 0x02, 0x0a, 0x11, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x36,
	0x0a, 0x06, 0x76, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4d, 0x6f, 0x6e,
	0x67, 0x6f, 0x2e, 0x56, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06,
	0x76, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20, 0x0a, 0x02, 0x77, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x57, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x52, 0x02, 0x77, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x70, 0x65, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x1a, 0x48, 0x0a, 0x0b,
	0x56, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x23, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x56,
	0x43, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x1a, 0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x79, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x12, 0x0c, 0x0a, 0x01, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x01, 0x72, 0x22, 0xbf, 0x02, 0x0a, 0x14, 0x4b, 0x69, 0x6e, 0x67, 0x52, 0x6f, 0x75, 0x6e, 0x64,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x77,
	0x65, 0x65, 0x6b, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x77, 0x65, 0x65, 0x6b, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x39, 0x0a, 0x06, 0x70,
	0x6c, 0x61, 0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x4b, 0x69,
	0x6e, 0x67, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4d, 0x6f, 0x6e,
	0x67, 0x6f, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x49, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06,
	0x70, 0x6c, 0x61, 0x79, 0x49, 0x64, 0x12, 0x45, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x4b, 0x69, 0x6e,
	0x67, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4d, 0x6f, 0x6e, 0x67,
	0x6f, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x1a, 0x39, 0x0a,
	0x0b, 0x50, 0x6c, 0x61, 0x79, 0x49, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x4a, 0x0a, 0x0f, 0x50, 0x6c, 0x61, 0x79,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x21, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x50,
	0x6c, 0x61, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x42, 0x0b, 0x5a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70,
	0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_db_proto_rawDescOnce sync.Once
	file_db_proto_rawDescData = file_db_proto_rawDesc
)

func file_db_proto_rawDescGZIP() []byte {
	file_db_proto_rawDescOnce.Do(func() {
		file_db_proto_rawDescData = protoimpl.X.CompressGZIP(file_db_proto_rawDescData)
	})
	return file_db_proto_rawDescData
}

var file_db_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_db_proto_goTypes = []interface{}{
	(*UidBind)(nil),              // 0: UidBind
	(*IndexMgrInfo)(nil),         // 1: IndexMgrInfo
	(*TourPublicMongo)(nil),      // 2: TourPublicMongo
	(*LadderPublic)(nil),         // 3: LadderPublic
	(*LadderPublicMongo)(nil),    // 4: LadderPublicMongo
	(*LadderPlayer)(nil),         // 5: LadderPlayer
	(*GloryPublicMongo)(nil),     // 6: GloryPublicMongo
	(*MissionRefreshLimit)(nil),  // 7: MissionRefreshLimit
	(*MissionInfoMongo)(nil),     // 8: MissionInfoMongo
	(*RecentFights)(nil),         // 9: RecentFights
	(*FriendInfoMongo)(nil),      // 10: FriendInfoMongo
	(*ActivateCodeItem)(nil),     // 11: ActivateCodeItem
	(*WhiteListStruct)(nil),      // 12: WhiteListStruct
	(*VCUpdateInfo)(nil),         // 13: VCUpdateInfo
	(*VersionCheckMongo)(nil),    // 14: VersionCheckMongo
	(*PlayRecord)(nil),           // 15: PlayRecord
	(*KingRoundPublicMongo)(nil), // 16: KingRoundPublicMongo
	nil,                          // 17: TourPublicMongo.ModeRecEntry
	nil,                          // 18: MissionInfoMongo.MTypeEntry
	nil,                          // 19: MissionInfoMongo.MissionLimitEntry
	nil,                          // 20: FriendInfoMongo.FriendsEntry
	nil,                          // 21: FriendInfoMongo.ReqInfoEntry
	nil,                          // 22: FriendInfoMongo.RecommendEntry
	nil,                          // 23: FriendInfoMongo.SharePlayersEntry
	nil,                          // 24: VersionCheckMongo.VcInfoEntry
	nil,                          // 25: KingRoundPublicMongo.PlayIdEntry
	nil,                          // 26: KingRoundPublicMongo.PlayRecordEntry
	(*MissionType)(nil),          // 27: MissionType
	(FRIEND_SOURCE)(0),           // 28: FRIEND_SOURCE
	(*ReqInfo)(nil),              // 29: ReqInfo
	(*Recommend)(nil),            // 30: Recommend
}
var file_db_proto_depIdxs = []int32{
	17, // 0: TourPublicMongo.modeRec:type_name -> TourPublicMongo.ModeRecEntry
	3,  // 1: LadderPublicMongo.s:type_name -> LadderPublic
	18, // 2: MissionInfoMongo.mType:type_name -> MissionInfoMongo.MTypeEntry
	19, // 3: MissionInfoMongo.missionLimit:type_name -> MissionInfoMongo.MissionLimitEntry
	20, // 4: FriendInfoMongo.friends:type_name -> FriendInfoMongo.FriendsEntry
	21, // 5: FriendInfoMongo.reqInfo:type_name -> FriendInfoMongo.ReqInfoEntry
	22, // 6: FriendInfoMongo.recommend:type_name -> FriendInfoMongo.RecommendEntry
	9,  // 7: FriendInfoMongo.recentFights:type_name -> RecentFights
	23, // 8: FriendInfoMongo.sharePlayers:type_name -> FriendInfoMongo.SharePlayersEntry
	24, // 9: VersionCheckMongo.vcInfo:type_name -> VersionCheckMongo.VcInfoEntry
	12, // 10: VersionCheckMongo.wl:type_name -> WhiteListStruct
	25, // 11: KingRoundPublicMongo.playId:type_name -> KingRoundPublicMongo.PlayIdEntry
	26, // 12: KingRoundPublicMongo.playRecord:type_name -> KingRoundPublicMongo.PlayRecordEntry
	27, // 13: MissionInfoMongo.MTypeEntry.value:type_name -> MissionType
	7,  // 14: MissionInfoMongo.MissionLimitEntry.value:type_name -> MissionRefreshLimit
	28, // 15: FriendInfoMongo.FriendsEntry.value:type_name -> FRIEND_SOURCE
	29, // 16: FriendInfoMongo.ReqInfoEntry.value:type_name -> ReqInfo
	30, // 17: FriendInfoMongo.RecommendEntry.value:type_name -> Recommend
	13, // 18: VersionCheckMongo.VcInfoEntry.value:type_name -> VCUpdateInfo
	15, // 19: KingRoundPublicMongo.PlayRecordEntry.value:type_name -> PlayRecord
	20, // [20:20] is the sub-list for method output_type
	20, // [20:20] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_db_proto_init() }
func file_db_proto_init() {
	if File_db_proto != nil {
		return
	}
	file_mission_proto_init()
	file_friend_proto_init()
	file_define_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_db_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UidBind); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexMgrInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TourPublicMongo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LadderPublic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LadderPublicMongo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LadderPlayer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GloryPublicMongo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MissionRefreshLimit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MissionInfoMongo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecentFights); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendInfoMongo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivateCodeItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WhiteListStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VCUpdateInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersionCheckMongo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KingRoundPublicMongo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_db_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_db_proto_goTypes,
		DependencyIndexes: file_db_proto_depIdxs,
		MessageInfos:      file_db_proto_msgTypes,
	}.Build()
	File_db_proto = out.File
	file_db_proto_rawDesc = nil
	file_db_proto_goTypes = nil
	file_db_proto_depIdxs = nil
}
