// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.10.0
// source: cluster.proto

package pb

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type LoginOpt int32

const (
	LoginOpt_OptRegister LoginOpt = 0
	LoginOpt_OptLogin    LoginOpt = 1
	LoginOpt_OptToken    LoginOpt = 2
)

// Enum value maps for LoginOpt.
var (
	LoginOpt_name = map[int32]string{
		0: "OptRegister",
		1: "OptLogin",
		2: "OptToken",
	}
	LoginOpt_value = map[string]int32{
		"OptRegister": 0,
		"OptLogin":    1,
		"OptToken":    2,
	}
)

func (x LoginOpt) Enum() *LoginOpt {
	p := new(LoginOpt)
	*p = x
	return p
}

func (x LoginOpt) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LoginOpt) Descriptor() protoreflect.EnumDescriptor {
	return file_cluster_proto_enumTypes[0].Descriptor()
}

func (LoginOpt) Type() protoreflect.EnumType {
	return &file_cluster_proto_enumTypes[0]
}

func (x LoginOpt) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LoginOpt.Descriptor instead.
func (LoginOpt) EnumDescriptor() ([]byte, []int) {
	return file_cluster_proto_rawDescGZIP(), []int{0}
}

type LoginMethod int32

const (
	LoginMethod_LMGuest  LoginMethod = 0
	LoginMethod_LMQQ     LoginMethod = 1
	LoginMethod_LMWeChat LoginMethod = 2
	LoginMethod_LMOhayoo LoginMethod = 3
	LoginMethod_LMApple  LoginMethod = 4
)

// Enum value maps for LoginMethod.
var (
	LoginMethod_name = map[int32]string{
		0: "LMGuest",
		1: "LMQQ",
		2: "LMWeChat",
		3: "LMOhayoo",
		4: "LMApple",
	}
	LoginMethod_value = map[string]int32{
		"LMGuest":  0,
		"LMQQ":     1,
		"LMWeChat": 2,
		"LMOhayoo": 3,
		"LMApple":  4,
	}
)

func (x LoginMethod) Enum() *LoginMethod {
	p := new(LoginMethod)
	*p = x
	return p
}

func (x LoginMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LoginMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_cluster_proto_enumTypes[1].Descriptor()
}

func (LoginMethod) Type() protoreflect.EnumType {
	return &file_cluster_proto_enumTypes[1]
}

func (x LoginMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LoginMethod.Descriptor instead.
func (LoginMethod) EnumDescriptor() ([]byte, []int) {
	return file_cluster_proto_rawDescGZIP(), []int{1}
}

//  rpc 请求消息
type RequestMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From string `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"` // 来自哪个服务器
	Aid  int64  `protobuf:"varint,2,opt,name=aid,proto3" json:"aid,omitempty"`  // agentId
	Seq  uint32 `protobuf:"varint,3,opt,name=seq,proto3" json:"seq,omitempty"`  // 请求流水号
	Cmd  int32  `protobuf:"varint,4,opt,name=cmd,proto3" json:"cmd,omitempty"`  // 业务码
	Uid  uint64 `protobuf:"varint,5,opt,name=uid,proto3" json:"uid,omitempty"`  // 玩家 id
	Data []byte `protobuf:"bytes,6,opt,name=data,proto3" json:"data,omitempty"` // 请求具体数据
	Ip   string `protobuf:"bytes,7,opt,name=ip,proto3" json:"ip,omitempty"`     // 地址
}

func (x *RequestMessage) Reset() {
	*x = RequestMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cluster_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestMessage) ProtoMessage() {}

func (x *RequestMessage) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestMessage.ProtoReflect.Descriptor instead.
func (*RequestMessage) Descriptor() ([]byte, []int) {
	return file_cluster_proto_rawDescGZIP(), []int{0}
}

func (x *RequestMessage) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *RequestMessage) GetAid() int64 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *RequestMessage) GetSeq() uint32 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *RequestMessage) GetCmd() int32 {
	if x != nil {
		return x.Cmd
	}
	return 0
}

func (x *RequestMessage) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *RequestMessage) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *RequestMessage) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

// rpc 请求的返回消息
type ResponseMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aid  int64  `protobuf:"varint,1,opt,name=aid,proto3" json:"aid,omitempty"`
	Seq  uint64 `protobuf:"varint,2,opt,name=seq,proto3" json:"seq,omitempty"`
	Cmd  int32  `protobuf:"varint,3,opt,name=cmd,proto3" json:"cmd,omitempty"`
	Code int32  `protobuf:"varint,4,opt,name=code,proto3" json:"code,omitempty"`
	Data []byte `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	Msg  string `protobuf:"bytes,6,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ResponseMessage) Reset() {
	*x = ResponseMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cluster_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseMessage) ProtoMessage() {}

func (x *ResponseMessage) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseMessage.ProtoReflect.Descriptor instead.
func (*ResponseMessage) Descriptor() ([]byte, []int) {
	return file_cluster_proto_rawDescGZIP(), []int{1}
}

func (x *ResponseMessage) GetAid() int64 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *ResponseMessage) GetSeq() uint64 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *ResponseMessage) GetCmd() int32 {
	if x != nil {
		return x.Cmd
	}
	return 0
}

func (x *ResponseMessage) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ResponseMessage) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ResponseMessage) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// 其他服务器调用 gate,推送消息, 若无 aid 则使用 uid
type PushMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aid  int64  `protobuf:"varint,1,opt,name=aid,proto3" json:"aid,omitempty"`  // agentId
	Uid  uint64 `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`  // uid
	Cmd  int32  `protobuf:"varint,3,opt,name=cmd,proto3" json:"cmd,omitempty"`  // 推送业务码
	Data []byte `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"` // 推送数据
}

func (x *PushMessage) Reset() {
	*x = PushMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cluster_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushMessage) ProtoMessage() {}

func (x *PushMessage) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushMessage.ProtoReflect.Descriptor instead.
func (*PushMessage) Descriptor() ([]byte, []int) {
	return file_cluster_proto_rawDescGZIP(), []int{2}
}

func (x *PushMessage) GetAid() int64 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *PushMessage) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *PushMessage) GetCmd() int32 {
	if x != nil {
		return x.Cmd
	}
	return 0
}

func (x *PushMessage) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// 关闭连接通知
type AgentClosedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Gid    string `protobuf:"bytes,1,opt,name=gid,proto3" json:"gid,omitempty"`
	Aid    int64  `protobuf:"varint,2,opt,name=aid,proto3" json:"aid,omitempty"`
	Uid    uint64 `protobuf:"varint,3,opt,name=uid,proto3" json:"uid,omitempty"`
	BindAt int64  `protobuf:"varint,4,opt,name=bindAt,proto3" json:"bindAt,omitempty"` // 连上线时间，用于处理在线时长
}

func (x *AgentClosedRequest) Reset() {
	*x = AgentClosedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cluster_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentClosedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentClosedRequest) ProtoMessage() {}

func (x *AgentClosedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentClosedRequest.ProtoReflect.Descriptor instead.
func (*AgentClosedRequest) Descriptor() ([]byte, []int) {
	return file_cluster_proto_rawDescGZIP(), []int{3}
}

func (x *AgentClosedRequest) GetGid() string {
	if x != nil {
		return x.Gid
	}
	return ""
}

func (x *AgentClosedRequest) GetAid() int64 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *AgentClosedRequest) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *AgentClosedRequest) GetBindAt() int64 {
	if x != nil {
		return x.BindAt
	}
	return 0
}

// 关闭连接通知返回
type AgentClosedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AgentClosedResponse) Reset() {
	*x = AgentClosedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cluster_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentClosedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentClosedResponse) ProtoMessage() {}

func (x *AgentClosedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentClosedResponse.ProtoReflect.Descriptor instead.
func (*AgentClosedResponse) Descriptor() ([]byte, []int) {
	return file_cluster_proto_rawDescGZIP(), []int{4}
}

// 关闭连接
type CloseAgentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aid int64        `protobuf:"varint,1,opt,name=aid,proto3" json:"aid,omitempty"`
	Uid uint64       `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Msg *PushMessage `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"` // 关闭之前可以推送一个消息，若无则不推送
}

func (x *CloseAgentRequest) Reset() {
	*x = CloseAgentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cluster_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseAgentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseAgentRequest) ProtoMessage() {}

func (x *CloseAgentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseAgentRequest.ProtoReflect.Descriptor instead.
func (*CloseAgentRequest) Descriptor() ([]byte, []int) {
	return file_cluster_proto_rawDescGZIP(), []int{5}
}

func (x *CloseAgentRequest) GetAid() int64 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *CloseAgentRequest) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *CloseAgentRequest) GetMsg() *PushMessage {
	if x != nil {
		return x.Msg
	}
	return nil
}

// 推送数据
type PushValueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aid int64             `protobuf:"varint,1,opt,name=aid,proto3" json:"aid,omitempty"`
	Uid uint64            `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Kv  map[string]string `protobuf:"bytes,3,rep,name=kv,proto3" json:"kv,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *PushValueRequest) Reset() {
	*x = PushValueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cluster_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushValueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushValueRequest) ProtoMessage() {}

func (x *PushValueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushValueRequest.ProtoReflect.Descriptor instead.
func (*PushValueRequest) Descriptor() ([]byte, []int) {
	return file_cluster_proto_rawDescGZIP(), []int{6}
}

func (x *PushValueRequest) GetAid() int64 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *PushValueRequest) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *PushValueRequest) GetKv() map[string]string {
	if x != nil {
		return x.Kv
	}
	return nil
}

type BindRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Gid string `protobuf:"bytes,1,opt,name=gid,proto3" json:"gid,omitempty"`
	Aid int64  `protobuf:"varint,2,opt,name=aid,proto3" json:"aid,omitempty"`
	Uid uint64 `protobuf:"varint,3,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *BindRequest) Reset() {
	*x = BindRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cluster_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BindRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindRequest) ProtoMessage() {}

func (x *BindRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindRequest.ProtoReflect.Descriptor instead.
func (*BindRequest) Descriptor() ([]byte, []int) {
	return file_cluster_proto_rawDescGZIP(), []int{7}
}

func (x *BindRequest) GetGid() string {
	if x != nil {
		return x.Gid
	}
	return ""
}

func (x *BindRequest) GetAid() int64 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *BindRequest) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type BindResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BindResponse) Reset() {
	*x = BindResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cluster_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BindResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindResponse) ProtoMessage() {}

func (x *BindResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindResponse.ProtoReflect.Descriptor instead.
func (*BindResponse) Descriptor() ([]byte, []int) {
	return file_cluster_proto_rawDescGZIP(), []int{8}
}

type GetSessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetSessionRequest) Reset() {
	*x = GetSessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cluster_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSessionRequest) ProtoMessage() {}

func (x *GetSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSessionRequest.ProtoReflect.Descriptor instead.
func (*GetSessionRequest) Descriptor() ([]byte, []int) {
	return file_cluster_proto_rawDescGZIP(), []int{9}
}

type GetSessionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetSessionResponse) Reset() {
	*x = GetSessionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cluster_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSessionResponse) ProtoMessage() {}

func (x *GetSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSessionResponse.ProtoReflect.Descriptor instead.
func (*GetSessionResponse) Descriptor() ([]byte, []int) {
	return file_cluster_proto_rawDescGZIP(), []int{10}
}

type GetUidArrIsOnlineReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UidArr []uint64 `protobuf:"varint,1,rep,packed,name=uidArr,proto3" json:"uidArr,omitempty"`
}

func (x *GetUidArrIsOnlineReq) Reset() {
	*x = GetUidArrIsOnlineReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cluster_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUidArrIsOnlineReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUidArrIsOnlineReq) ProtoMessage() {}

func (x *GetUidArrIsOnlineReq) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUidArrIsOnlineReq.ProtoReflect.Descriptor instead.
func (*GetUidArrIsOnlineReq) Descriptor() ([]byte, []int) {
	return file_cluster_proto_rawDescGZIP(), []int{11}
}

func (x *GetUidArrIsOnlineReq) GetUidArr() []uint64 {
	if x != nil {
		return x.UidArr
	}
	return nil
}

type GetUidArrIsOnlineRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsOnlineArr []bool `protobuf:"varint,1,rep,packed,name=isOnlineArr,proto3" json:"isOnlineArr,omitempty"`
}

func (x *GetUidArrIsOnlineRsp) Reset() {
	*x = GetUidArrIsOnlineRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cluster_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUidArrIsOnlineRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUidArrIsOnlineRsp) ProtoMessage() {}

func (x *GetUidArrIsOnlineRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUidArrIsOnlineRsp.ProtoReflect.Descriptor instead.
func (*GetUidArrIsOnlineRsp) Descriptor() ([]byte, []int) {
	return file_cluster_proto_rawDescGZIP(), []int{12}
}

func (x *GetUidArrIsOnlineRsp) GetIsOnlineArr() []bool {
	if x != nil {
		return x.IsOnlineArr
	}
	return nil
}

type GetRandomUidArrReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Num int32 `protobuf:"varint,1,opt,name=num,proto3" json:"num,omitempty"`
}

func (x *GetRandomUidArrReq) Reset() {
	*x = GetRandomUidArrReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cluster_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRandomUidArrReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRandomUidArrReq) ProtoMessage() {}

func (x *GetRandomUidArrReq) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRandomUidArrReq.ProtoReflect.Descriptor instead.
func (*GetRandomUidArrReq) Descriptor() ([]byte, []int) {
	return file_cluster_proto_rawDescGZIP(), []int{13}
}

func (x *GetRandomUidArrReq) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

type GetRandomUidArrRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OnlineUidArr []uint64 `protobuf:"varint,1,rep,packed,name=onlineUidArr,proto3" json:"onlineUidArr,omitempty"`
}

func (x *GetRandomUidArrRsp) Reset() {
	*x = GetRandomUidArrRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cluster_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRandomUidArrRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRandomUidArrRsp) ProtoMessage() {}

func (x *GetRandomUidArrRsp) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRandomUidArrRsp.ProtoReflect.Descriptor instead.
func (*GetRandomUidArrRsp) Descriptor() ([]byte, []int) {
	return file_cluster_proto_rawDescGZIP(), []int{14}
}

func (x *GetRandomUidArrRsp) GetOnlineUidArr() []uint64 {
	if x != nil {
		return x.OnlineUidArr
	}
	return nil
}

type HttpRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uri    string            `protobuf:"bytes,1,opt,name=uri,proto3" json:"uri,omitempty"`
	Header map[string]string `protobuf:"bytes,2,rep,name=header,proto3" json:"header,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Data   []byte            `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *HttpRequest) Reset() {
	*x = HttpRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cluster_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HttpRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpRequest) ProtoMessage() {}

func (x *HttpRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpRequest.ProtoReflect.Descriptor instead.
func (*HttpRequest) Descriptor() ([]byte, []int) {
	return file_cluster_proto_rawDescGZIP(), []int{15}
}

func (x *HttpRequest) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *HttpRequest) GetHeader() map[string]string {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *HttpRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type HttpResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *HttpResponse) Reset() {
	*x = HttpResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cluster_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HttpResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpResponse) ProtoMessage() {}

func (x *HttpResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpResponse.ProtoReflect.Descriptor instead.
func (*HttpResponse) Descriptor() ([]byte, []int) {
	return file_cluster_proto_rawDescGZIP(), []int{16}
}

func (x *HttpResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *HttpResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *HttpResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// 玩家分配到此服务器
type UserEnterMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Gid string `protobuf:"bytes,1,opt,name=gid,proto3" json:"gid,omitempty"`
	Aid int64  `protobuf:"varint,2,opt,name=aid,proto3" json:"aid,omitempty"`
	Uid uint64 `protobuf:"varint,3,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *UserEnterMessage) Reset() {
	*x = UserEnterMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cluster_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserEnterMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserEnterMessage) ProtoMessage() {}

func (x *UserEnterMessage) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserEnterMessage.ProtoReflect.Descriptor instead.
func (*UserEnterMessage) Descriptor() ([]byte, []int) {
	return file_cluster_proto_rawDescGZIP(), []int{17}
}

func (x *UserEnterMessage) GetGid() string {
	if x != nil {
		return x.Gid
	}
	return ""
}

func (x *UserEnterMessage) GetAid() int64 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *UserEnterMessage) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

// 战斗请求  服务器间通讯用
type FightPushMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid        uint64          `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`               // 待处理的玩家
	FightId    int64           `protobuf:"varint,2,opt,name=fightId,proto3" json:"fightId,omitempty"`       // 战斗唯一id  须知：客户端8月份之后停用该字段
	BattleType int32           `protobuf:"varint,3,opt,name=battleType,proto3" json:"battleType,omitempty"` // 玩法大类
	Mode       int32           `protobuf:"varint,4,opt,name=mode,proto3" json:"mode,omitempty"`             // 比赛类型
	Stage      int32           `protobuf:"varint,5,opt,name=stage,proto3" json:"stage,omitempty"`           // 关卡记录
	IsWin      int32           `protobuf:"varint,6,opt,name=isWin,proto3" json:"isWin,omitempty"`           // 是否胜利 0胜利 1失败 2平局
	Again      int32           `protobuf:"varint,7,opt,name=again,proto3" json:"again,omitempty"`           // 是否再来一场   0 直接开始    1 再来一场开始
	Actor      []*FightActor   `protobuf:"bytes,8,rep,name=actor,proto3" json:"actor,omitempty"`            // 上场球员（参与对抗的球员）
	ScoreDiff  int32           `protobuf:"varint,9,opt,name=scoreDiff,proto3" json:"scoreDiff,omitempty"`   // 分数差
	FightIdStr string          `protobuf:"bytes,10,opt,name=fightIdStr,proto3" json:"fightIdStr,omitempty"` // 战斗唯一id
	Ret        *FightResultReq `protobuf:"bytes,11,opt,name=ret,proto3" json:"ret,omitempty"`
	Star       *StarInfoMsg    `protobuf:"bytes,12,opt,name=star,proto3" json:"star,omitempty"` // 对手的星辉记录
}

func (x *FightPushMsg) Reset() {
	*x = FightPushMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cluster_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FightPushMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FightPushMsg) ProtoMessage() {}

func (x *FightPushMsg) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FightPushMsg.ProtoReflect.Descriptor instead.
func (*FightPushMsg) Descriptor() ([]byte, []int) {
	return file_cluster_proto_rawDescGZIP(), []int{18}
}

func (x *FightPushMsg) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *FightPushMsg) GetFightId() int64 {
	if x != nil {
		return x.FightId
	}
	return 0
}

func (x *FightPushMsg) GetBattleType() int32 {
	if x != nil {
		return x.BattleType
	}
	return 0
}

func (x *FightPushMsg) GetMode() int32 {
	if x != nil {
		return x.Mode
	}
	return 0
}

func (x *FightPushMsg) GetStage() int32 {
	if x != nil {
		return x.Stage
	}
	return 0
}

func (x *FightPushMsg) GetIsWin() int32 {
	if x != nil {
		return x.IsWin
	}
	return 0
}

func (x *FightPushMsg) GetAgain() int32 {
	if x != nil {
		return x.Again
	}
	return 0
}

func (x *FightPushMsg) GetActor() []*FightActor {
	if x != nil {
		return x.Actor
	}
	return nil
}

func (x *FightPushMsg) GetScoreDiff() int32 {
	if x != nil {
		return x.ScoreDiff
	}
	return 0
}

func (x *FightPushMsg) GetFightIdStr() string {
	if x != nil {
		return x.FightIdStr
	}
	return ""
}

func (x *FightPushMsg) GetRet() *FightResultReq {
	if x != nil {
		return x.Ret
	}
	return nil
}

func (x *FightPushMsg) GetStar() *StarInfoMsg {
	if x != nil {
		return x.Star
	}
	return nil
}

// 邮件消息 服务器间通讯
type MailPushMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid          uint64           `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Reward       []*ItemCommon    `protobuf:"bytes,2,rep,name=reward,proto3" json:"reward,omitempty"`              // 道具列表
	Containers   []*MailContainer `protobuf:"bytes,3,rep,name=containers,proto3" json:"containers,omitempty"`      // 邮件内容
	ClientMailId int32            `protobuf:"varint,4,opt,name=clientMailId,proto3" json:"clientMailId,omitempty"` // 是否客户端读取配置文件 如果为0则为服务器邮件，否则读取相应Id的配置邮件
	BindKey      string           `protobuf:"bytes,5,opt,name=bindKey,proto3" json:"bindKey,omitempty"`            // 绑定key，各个系统使用不一样。支付内为MallId
	Platform     int32            `protobuf:"varint,6,opt,name=platform,proto3" json:"platform,omitempty"`         // 平台
}

func (x *MailPushMsg) Reset() {
	*x = MailPushMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cluster_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MailPushMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MailPushMsg) ProtoMessage() {}

func (x *MailPushMsg) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MailPushMsg.ProtoReflect.Descriptor instead.
func (*MailPushMsg) Descriptor() ([]byte, []int) {
	return file_cluster_proto_rawDescGZIP(), []int{19}
}

func (x *MailPushMsg) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *MailPushMsg) GetReward() []*ItemCommon {
	if x != nil {
		return x.Reward
	}
	return nil
}

func (x *MailPushMsg) GetContainers() []*MailContainer {
	if x != nil {
		return x.Containers
	}
	return nil
}

func (x *MailPushMsg) GetClientMailId() int32 {
	if x != nil {
		return x.ClientMailId
	}
	return 0
}

func (x *MailPushMsg) GetBindKey() string {
	if x != nil {
		return x.BindKey
	}
	return ""
}

func (x *MailPushMsg) GetPlatform() int32 {
	if x != nil {
		return x.Platform
	}
	return 0
}

// 清理玩家
type ClearUserPushMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid uint64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *ClearUserPushMsg) Reset() {
	*x = ClearUserPushMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cluster_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearUserPushMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearUserPushMsg) ProtoMessage() {}

func (x *ClearUserPushMsg) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearUserPushMsg.ProtoReflect.Descriptor instead.
func (*ClearUserPushMsg) Descriptor() ([]byte, []int) {
	return file_cluster_proto_rawDescGZIP(), []int{20}
}

func (x *ClearUserPushMsg) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

// 星辉信息
type StarInfoMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid       uint64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	StarLevel int32  `protobuf:"varint,2,opt,name=starLevel,proto3" json:"starLevel,omitempty"`
}

func (x *StarInfoMsg) Reset() {
	*x = StarInfoMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cluster_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StarInfoMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StarInfoMsg) ProtoMessage() {}

func (x *StarInfoMsg) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StarInfoMsg.ProtoReflect.Descriptor instead.
func (*StarInfoMsg) Descriptor() ([]byte, []int) {
	return file_cluster_proto_rawDescGZIP(), []int{21}
}

func (x *StarInfoMsg) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *StarInfoMsg) GetStarLevel() int32 {
	if x != nil {
		return x.StarLevel
	}
	return 0
}

type SetUserNumMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid uint64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Num int32  `protobuf:"varint,2,opt,name=num,proto3" json:"num,omitempty"`
}

func (x *SetUserNumMsg) Reset() {
	*x = SetUserNumMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cluster_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetUserNumMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetUserNumMsg) ProtoMessage() {}

func (x *SetUserNumMsg) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetUserNumMsg.ProtoReflect.Descriptor instead.
func (*SetUserNumMsg) Descriptor() ([]byte, []int) {
	return file_cluster_proto_rawDescGZIP(), []int{22}
}

func (x *SetUserNumMsg) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *SetUserNumMsg) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

type PayItems struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid     uint64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	ItemStr string `protobuf:"bytes,2,opt,name=itemStr,proto3" json:"itemStr,omitempty"`
	Actor   int32  `protobuf:"varint,3,opt,name=actor,proto3" json:"actor,omitempty"`
}

func (x *PayItems) Reset() {
	*x = PayItems{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cluster_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayItems) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayItems) ProtoMessage() {}

func (x *PayItems) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayItems.ProtoReflect.Descriptor instead.
func (*PayItems) Descriptor() ([]byte, []int) {
	return file_cluster_proto_rawDescGZIP(), []int{23}
}

func (x *PayItems) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *PayItems) GetItemStr() string {
	if x != nil {
		return x.ItemStr
	}
	return ""
}

func (x *PayItems) GetActor() int32 {
	if x != nil {
		return x.Actor
	}
	return 0
}

type UserLoginMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid         uint64            `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Opt         LoginOpt          `protobuf:"varint,2,opt,name=opt,proto3,enum=LoginOpt" json:"opt,omitempty"`          // 注册0， 账号登录1， token登录2
	Method      LoginMethod       `protobuf:"varint,3,opt,name=method,proto3,enum=LoginMethod" json:"method,omitempty"` // 登陆方式  0游客 1QQ 2微信 3ohayoo
	Ip          string            `protobuf:"bytes,4,opt,name=ip,proto3" json:"ip,omitempty"`
	Msg         *CommonLoginParam `protobuf:"bytes,5,opt,name=msg,proto3" json:"msg,omitempty"`
	Type        int32             `protobuf:"varint,6,opt,name=type,proto3" json:"type,omitempty"` // ohayoo 注册需要知道是手机号还是抖音号， 1手机号 2抖音号 0 游客登录
	IsRealnamed bool              `protobuf:"varint,7,opt,name=isRealnamed,proto3" json:"isRealnamed,omitempty"`
	IsAdult     bool              `protobuf:"varint,8,opt,name=isAdult,proto3" json:"isAdult,omitempty"`
	Age         int32             `protobuf:"varint,9,opt,name=age,proto3" json:"age,omitempty"`
}

func (x *UserLoginMsg) Reset() {
	*x = UserLoginMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cluster_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserLoginMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserLoginMsg) ProtoMessage() {}

func (x *UserLoginMsg) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserLoginMsg.ProtoReflect.Descriptor instead.
func (*UserLoginMsg) Descriptor() ([]byte, []int) {
	return file_cluster_proto_rawDescGZIP(), []int{24}
}

func (x *UserLoginMsg) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *UserLoginMsg) GetOpt() LoginOpt {
	if x != nil {
		return x.Opt
	}
	return LoginOpt_OptRegister
}

func (x *UserLoginMsg) GetMethod() LoginMethod {
	if x != nil {
		return x.Method
	}
	return LoginMethod_LMGuest
}

func (x *UserLoginMsg) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *UserLoginMsg) GetMsg() *CommonLoginParam {
	if x != nil {
		return x.Msg
	}
	return nil
}

func (x *UserLoginMsg) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *UserLoginMsg) GetIsRealnamed() bool {
	if x != nil {
		return x.IsRealnamed
	}
	return false
}

func (x *UserLoginMsg) GetIsAdult() bool {
	if x != nil {
		return x.IsAdult
	}
	return false
}

func (x *UserLoginMsg) GetAge() int32 {
	if x != nil {
		return x.Age
	}
	return 0
}

var File_cluster_proto protoreflect.FileDescriptor

var file_cluster_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x0a, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x66, 0x69, 0x67,
	0x68, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x11, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x54, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x11, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x90, 0x01, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x61, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65,
	0x71, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x73, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03,
	0x63, 0x6d, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x75, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x70, 0x22, 0x81, 0x01, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x61, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65,
	0x71, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x73, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03,
	0x63, 0x6d, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x57, 0x0a, 0x0b, 0x50, 0x75, 0x73, 0x68,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x61, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x63,
	0x6d, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x62, 0x0a, 0x12, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x67, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x61, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x62, 0x69, 0x6e, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x62,
	0x69, 0x6e, 0x64, 0x41, 0x74, 0x22, 0x15, 0x0a, 0x13, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6c,
	0x6f, 0x73, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x57, 0x0a, 0x11,
	0x43, 0x6c, 0x6f, 0x73, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x61, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x98, 0x01, 0x0a, 0x10, 0x50, 0x75, 0x73, 0x68, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x61, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x29,
	0x0a, 0x02, 0x6b, 0x76, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x50, 0x75, 0x73,
	0x68, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4b, 0x76,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x02, 0x6b, 0x76, 0x1a, 0x35, 0x0a, 0x07, 0x4b, 0x76, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x43, 0x0a, 0x0b, 0x42, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x67, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x67, 0x69,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x61, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x0e, 0x0a, 0x0c, 0x42, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x13, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x14, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x2e, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x55, 0x69, 0x64, 0x41, 0x72, 0x72, 0x49, 0x73, 0x4f,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x69, 0x64, 0x41,
	0x72, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x06, 0x75, 0x69, 0x64, 0x41, 0x72, 0x72,
	0x22, 0x38, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x55, 0x69, 0x64, 0x41, 0x72, 0x72, 0x49, 0x73, 0x4f,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x73, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x73, 0x4f, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x41, 0x72, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x08, 0x52, 0x0b, 0x69,
	0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x41, 0x72, 0x72, 0x22, 0x26, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x55, 0x69, 0x64, 0x41, 0x72, 0x72, 0x52, 0x65, 0x71,
	0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6e,
	0x75, 0x6d, 0x22, 0x38, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x55,
	0x69, 0x64, 0x41, 0x72, 0x72, 0x52, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x55, 0x69, 0x64, 0x41, 0x72, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0c,
	0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x55, 0x69, 0x64, 0x41, 0x72, 0x72, 0x22, 0xa0, 0x01, 0x0a,
	0x0b, 0x48, 0x74, 0x74, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x72, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x30,
	0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x48, 0x74, 0x74, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x1a, 0x39, 0x0a, 0x0b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x48, 0x0a, 0x0c, 0x48, 0x74, 0x74, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x48, 0x0a, 0x10, 0x55, 0x73, 0x65,
	0x72, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x67, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x67, 0x69, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x61, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x61, 0x69,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03,
	0x75, 0x69, 0x64, 0x22, 0xd6, 0x02, 0x0a, 0x0c, 0x46, 0x69, 0x67, 0x68, 0x74, 0x50, 0x75, 0x73,
	0x68, 0x4d, 0x73, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x67, 0x68, 0x74, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x66, 0x69, 0x67, 0x68, 0x74, 0x49, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x6d, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73,
	0x57, 0x69, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x73, 0x57, 0x69, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x61, 0x67, 0x61, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x61, 0x67, 0x61, 0x69, 0x6e, 0x12, 0x21, 0x0a, 0x05, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18,
	0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x41, 0x63, 0x74,
	0x6f, 0x72, 0x52, 0x05, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x44, 0x69, 0x66, 0x66, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x44, 0x69, 0x66, 0x66, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x69, 0x67, 0x68, 0x74,
	0x49, 0x64, 0x53, 0x74, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x69, 0x67,
	0x68, 0x74, 0x49, 0x64, 0x53, 0x74, 0x72, 0x12, 0x21, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x65, 0x71, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x20, 0x0a, 0x04, 0x73, 0x74,
	0x61, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x4d, 0x73, 0x67, 0x52, 0x04, 0x73, 0x74, 0x61, 0x72, 0x22, 0xce, 0x01, 0x0a,
	0x0b, 0x4d, 0x61, 0x69, 0x6c, 0x50, 0x75, 0x73, 0x68, 0x4d, 0x73, 0x67, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x23,
	0x0a, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x06, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x12, 0x2e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x4d, 0x61, 0x69, 0x6c, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x69,
	0x6c, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x4d, 0x61, 0x69, 0x6c, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x69, 0x6e, 0x64, 0x4b,
	0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x69, 0x6e, 0x64, 0x4b, 0x65,
	0x79, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x22, 0x24, 0x0a,
	0x10, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x55, 0x73, 0x65, 0x72, 0x50, 0x75, 0x73, 0x68, 0x4d, 0x73,
	0x67, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03,
	0x75, 0x69, 0x64, 0x22, 0x3d, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4d,
	0x73, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x03, 0x75, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x22, 0x33, 0x0a, 0x0d, 0x53, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x75, 0x6d,
	0x4d, 0x73, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x22, 0x4c, 0x0a, 0x08, 0x50, 0x61, 0x79, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x72, 0x12,
	0x14, 0x0a, 0x05, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x22, 0xfa, 0x01, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x4d, 0x73, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x03, 0x6f, 0x70, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x09, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4f, 0x70, 0x74,
	0x52, 0x03, 0x6f, 0x70, 0x74, 0x12, 0x24, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x23, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x73, 0x52, 0x65, 0x61, 0x6c, 0x6e, 0x61,
	0x6d, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x52, 0x65, 0x61,
	0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x41, 0x64, 0x75, 0x6c,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x41, 0x64, 0x75, 0x6c, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x61, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x61,
	0x67, 0x65, 0x2a, 0x37, 0x0a, 0x08, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4f, 0x70, 0x74, 0x12, 0x0f,
	0x0a, 0x0b, 0x4f, 0x70, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x10, 0x00, 0x12,
	0x0c, 0x0a, 0x08, 0x4f, 0x70, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x10, 0x01, 0x12, 0x0c, 0x0a,
	0x08, 0x4f, 0x70, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x10, 0x02, 0x2a, 0x4d, 0x0a, 0x0b, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x0b, 0x0a, 0x07, 0x4c, 0x4d,
	0x47, 0x75, 0x65, 0x73, 0x74, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x4d, 0x51, 0x51, 0x10,
	0x01, 0x12, 0x0c, 0x0a, 0x08, 0x4c, 0x4d, 0x57, 0x65, 0x43, 0x68, 0x61, 0x74, 0x10, 0x02, 0x12,
	0x0c, 0x0a, 0x08, 0x4c, 0x4d, 0x4f, 0x68, 0x61, 0x79, 0x6f, 0x6f, 0x10, 0x03, 0x12, 0x0b, 0x0a,
	0x07, 0x4c, 0x4d, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x10, 0x04, 0x32, 0xbd, 0x10, 0x0a, 0x03, 0x72,
	0x70, 0x63, 0x12, 0x34, 0x0a, 0x0d, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0f, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x1a, 0x10, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0b, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x12, 0x13, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43,
	0x6c, 0x6f, 0x73, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x32, 0x0a, 0x11, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x48, 0x74,
	0x74, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0c, 0x2e, 0x48, 0x74, 0x74, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x26, 0x0a, 0x07, 0x4f, 0x6e, 0x45, 0x6e,
	0x74, 0x65, 0x72, 0x12, 0x11, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x06, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x12, 0x23, 0x0a, 0x0b, 0x4f, 0x6e, 0x48, 0x65, 0x61, 0x72, 0x74, 0x42, 0x65, 0x61, 0x74, 0x12,
	0x0a, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x55, 0x69, 0x64, 0x1a, 0x06, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x24, 0x0a, 0x0a, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x50,
	0x75, 0x73, 0x68, 0x12, 0x0c, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x1a, 0x06, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x2a, 0x0a, 0x0a, 0x43,
	0x6c, 0x6f, 0x73, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x2e, 0x43, 0x6c, 0x6f, 0x73,
	0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x06, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x25, 0x0a, 0x04, 0x42, 0x69, 0x6e, 0x64, 0x12,
	0x0c, 0x2e, 0x42, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e,
	0x42, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x28,
	0x0a, 0x09, 0x50, 0x75, 0x73, 0x68, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x11, 0x2e, 0x50, 0x75,
	0x73, 0x68, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x06,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x23, 0x0a, 0x09, 0x42, 0x72, 0x6f, 0x61,
	0x64, 0x63, 0x61, 0x73, 0x74, 0x12, 0x0c, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x1a, 0x06, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x43, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x55, 0x69, 0x64, 0x41, 0x72, 0x72, 0x49, 0x73, 0x4f, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x12, 0x15, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x69, 0x64, 0x41, 0x72, 0x72, 0x49, 0x73,
	0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x47, 0x65, 0x74, 0x55,
	0x69, 0x64, 0x41, 0x72, 0x72, 0x49, 0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x55,
	0x69, 0x64, 0x41, 0x72, 0x72, 0x12, 0x13, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x61, 0x6e, 0x64, 0x6f,
	0x6d, 0x55, 0x69, 0x64, 0x41, 0x72, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x47, 0x65, 0x74,
	0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x55, 0x69, 0x64, 0x41, 0x72, 0x72, 0x52, 0x73, 0x70, 0x22,
	0x00, 0x12, 0x2a, 0x0a, 0x0f, 0x50, 0x75, 0x73, 0x68, 0x46, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x0d, 0x2e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x50, 0x75, 0x73, 0x68,
	0x4d, 0x73, 0x67, 0x1a, 0x06, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x2d, 0x0a,
	0x10, 0x50, 0x75, 0x73, 0x68, 0x46, 0x65, 0x65, 0x64, 0x46, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x0f, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x06, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x22, 0x0a, 0x08,
	0x50, 0x75, 0x73, 0x68, 0x4d, 0x61, 0x69, 0x6c, 0x12, 0x0c, 0x2e, 0x4d, 0x61, 0x69, 0x6c, 0x50,
	0x75, 0x73, 0x68, 0x4d, 0x73, 0x67, 0x1a, 0x06, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x12, 0x2c, 0x0a, 0x0d, 0x50, 0x75, 0x73, 0x68, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x11, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x55, 0x73, 0x65, 0x72, 0x50, 0x75, 0x73,
	0x68, 0x4d, 0x73, 0x67, 0x1a, 0x06, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x32,
	0x0a, 0x0b, 0x50, 0x75, 0x73, 0x68, 0x41, 0x64, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x2e,
	0x47, 0x4d, 0x5f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x1a, 0x11, 0x2e,
	0x49, 0x74, 0x65, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0x00, 0x12, 0x29, 0x0a, 0x0a, 0x50, 0x75, 0x73, 0x68, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b,
	0x12, 0x11, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x1a, 0x06, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x26, 0x0a,
	0x0a, 0x50, 0x75, 0x73, 0x68, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x12, 0x0e, 0x2e, 0x50, 0x75,
	0x73, 0x68, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4d, 0x73, 0x67, 0x1a, 0x06, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x12, 0x50, 0x75, 0x73, 0x68, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x12, 0x12, 0x2e, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x1a,
	0x13, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x23, 0x0a, 0x0b, 0x50, 0x75, 0x73, 0x68, 0x46, 0x69,
	0x78, 0x54, 0x6f, 0x75, 0x72, 0x12, 0x0a, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x55, 0x69,
	0x64, 0x1a, 0x06, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x2b, 0x0a, 0x0d, 0x50,
	0x75, 0x73, 0x68, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x0d, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4d, 0x73, 0x67, 0x1a, 0x09, 0x2e, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x24, 0x0a, 0x0c, 0x50, 0x75, 0x73, 0x68,
	0x4b, 0x69, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0a, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x55, 0x69, 0x64, 0x1a, 0x06, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x2c,
	0x0a, 0x14, 0x50, 0x75, 0x73, 0x68, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x41, 0x6e, 0x64,
	0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x0a, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x55,
	0x69, 0x64, 0x1a, 0x06, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x13,
	0x54, 0x65, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x12, 0x17, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f,
	0x6e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x54,
	0x65, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x2b, 0x0a, 0x17, 0x4e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x06, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x06, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x00, 0x12, 0x2d, 0x0a, 0x19, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x12, 0x06, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x06, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x12, 0x2f, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0a, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x55, 0x69, 0x64, 0x1a, 0x0c, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4d,
	0x73, 0x67, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0a, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x55, 0x69, 0x64,
	0x1a, 0x16, 0x2e, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x22, 0x00, 0x12, 0x2f, 0x0a, 0x17, 0x52, 0x65,
	0x73, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x72, 0x44, 0x61, 0x69,
	0x6c, 0x79, 0x52, 0x65, 0x63, 0x12, 0x0a, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x55, 0x69,
	0x64, 0x1a, 0x06, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x15, 0x53,
	0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x72, 0x44, 0x61, 0x69, 0x6c,
	0x79, 0x4e, 0x75, 0x6d, 0x12, 0x0e, 0x2e, 0x53, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x75,
	0x6d, 0x4d, 0x73, 0x67, 0x1a, 0x06, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x2e,
	0x0a, 0x0e, 0x50, 0x75, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x12, 0x12, 0x2e, 0x53, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x1a, 0x06, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x2a,
	0x0a, 0x16, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4b, 0x69, 0x6e, 0x67, 0x52, 0x6f, 0x75, 0x6e,
	0x64, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x12, 0x06, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x06, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x28, 0x0a, 0x14, 0x4e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x4b, 0x69, 0x6e, 0x67, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x73,
	0x65, 0x74, 0x12, 0x06, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x06, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x00, 0x12, 0x36, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x53, 0x75, 0x62, 0x4d, 0x61, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0a, 0x2e, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x55, 0x69, 0x64, 0x1a, 0x11, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x53, 0x75, 0x62, 0x4d, 0x61, 0x70, 0x44, 0x61, 0x74, 0x61, 0x22, 0x00, 0x12, 0x23, 0x0a, 0x0c,
	0x50, 0x75, 0x73, 0x68, 0x50, 0x61, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x09, 0x2e, 0x50,
	0x61, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0x06, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x00, 0x12, 0x35, 0x0a, 0x14, 0x50, 0x75, 0x73, 0x68, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x13, 0x2e, 0x50, 0x75, 0x73, 0x68,
	0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x73, 0x67, 0x1a, 0x06,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x26, 0x0a, 0x0e, 0x50, 0x75, 0x73, 0x68,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x53, 0x6b, 0x69, 0x6e, 0x12, 0x0a, 0x2e, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x55, 0x69, 0x64, 0x1a, 0x06, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x12, 0x38, 0x0a, 0x15, 0x50, 0x75, 0x73, 0x68, 0x53, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x41, 0x72, 0x65, 0x61, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x15, 0x2e, 0x53, 0x65, 0x74, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x72, 0x65, 0x61, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x06, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x2b, 0x0a, 0x13, 0x46, 0x69,
	0x6e, 0x69, 0x73, 0x68, 0x46, 0x69, 0x72, 0x73, 0x74, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67,
	0x65, 0x12, 0x0a, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x55, 0x69, 0x64, 0x1a, 0x06, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x11, 0x50, 0x75, 0x73, 0x68, 0x53,
	0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x12, 0x2e, 0x53,
	0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x1a, 0x11, 0x2e, 0x53, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x14, 0x50, 0x75, 0x73, 0x68, 0x53, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x12, 0x2e,
	0x53, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x1a, 0x11, 0x2e, 0x53, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x4f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x32, 0x0a, 0x12, 0x50, 0x75, 0x73, 0x68, 0x53, 0x65,
	0x74, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x65, 0x66, 0x12, 0x12, 0x2e, 0x53,
	0x65, 0x74, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x65, 0x66, 0x52, 0x65, 0x71,
	0x1a, 0x06, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x0b, 0x5a, 0x09, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cluster_proto_rawDescOnce sync.Once
	file_cluster_proto_rawDescData = file_cluster_proto_rawDesc
)

func file_cluster_proto_rawDescGZIP() []byte {
	file_cluster_proto_rawDescOnce.Do(func() {
		file_cluster_proto_rawDescData = protoimpl.X.CompressGZIP(file_cluster_proto_rawDescData)
	})
	return file_cluster_proto_rawDescData
}

var file_cluster_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_cluster_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_cluster_proto_goTypes = []interface{}{
	(LoginOpt)(0),                  // 0: LoginOpt
	(LoginMethod)(0),               // 1: LoginMethod
	(*RequestMessage)(nil),         // 2: RequestMessage
	(*ResponseMessage)(nil),        // 3: ResponseMessage
	(*PushMessage)(nil),            // 4: PushMessage
	(*AgentClosedRequest)(nil),     // 5: AgentClosedRequest
	(*AgentClosedResponse)(nil),    // 6: AgentClosedResponse
	(*CloseAgentRequest)(nil),      // 7: CloseAgentRequest
	(*PushValueRequest)(nil),       // 8: PushValueRequest
	(*BindRequest)(nil),            // 9: BindRequest
	(*BindResponse)(nil),           // 10: BindResponse
	(*GetSessionRequest)(nil),      // 11: GetSessionRequest
	(*GetSessionResponse)(nil),     // 12: GetSessionResponse
	(*GetUidArrIsOnlineReq)(nil),   // 13: GetUidArrIsOnlineReq
	(*GetUidArrIsOnlineRsp)(nil),   // 14: GetUidArrIsOnlineRsp
	(*GetRandomUidArrReq)(nil),     // 15: GetRandomUidArrReq
	(*GetRandomUidArrRsp)(nil),     // 16: GetRandomUidArrRsp
	(*HttpRequest)(nil),            // 17: HttpRequest
	(*HttpResponse)(nil),           // 18: HttpResponse
	(*UserEnterMessage)(nil),       // 19: UserEnterMessage
	(*FightPushMsg)(nil),           // 20: FightPushMsg
	(*MailPushMsg)(nil),            // 21: MailPushMsg
	(*ClearUserPushMsg)(nil),       // 22: ClearUserPushMsg
	(*StarInfoMsg)(nil),            // 23: StarInfoMsg
	(*SetUserNumMsg)(nil),          // 24: SetUserNumMsg
	(*PayItems)(nil),               // 25: PayItems
	(*UserLoginMsg)(nil),           // 26: UserLoginMsg
	nil,                            // 27: PushValueRequest.KvEntry
	nil,                            // 28: HttpRequest.HeaderEntry
	(*FightActor)(nil),             // 29: FightActor
	(*FightResultReq)(nil),         // 30: FightResultReq
	(*ItemCommon)(nil),             // 31: ItemCommon
	(*MailContainer)(nil),          // 32: MailContainer
	(*CommonLoginParam)(nil),       // 33: CommonLoginParam
	(*PlayerUid)(nil),              // 34: PlayerUid
	(*FeedAccountReq)(nil),         // 35: FeedAccountReq
	(*GM_UpdateItem)(nil),          // 36: GM_UpdateItem
	(*PlayerInviteCode)(nil),       // 37: PlayerInviteCode
	(*PushInviteMsg)(nil),          // 38: PushInviteMsg
	(*PlayerPersonalReq)(nil),      // 39: PlayerPersonalReq
	(*TestUserConcurrencyReq)(nil), // 40: TestUserConcurrencyReq
	(*Empty)(nil),                  // 41: Empty
	(*SetTimeOffsetData)(nil),      // 42: SetTimeOffsetData
	(*PushAchievementMsg)(nil),     // 43: PushAchievementMsg
	(*SetPlayerAreaCodeReq)(nil),   // 44: SetPlayerAreaCodeReq
	(*SetMissionPrefReq)(nil),      // 45: SetMissionPrefReq
	(*ItemUpdateResult)(nil),       // 46: ItemUpdateResult
	(*PlayerPersonalResp)(nil),     // 47: PlayerPersonalResp
	(*LoginRsp)(nil),               // 48: LoginRsp
	(*TestUserConcurrencyRsp)(nil), // 49: TestUserConcurrencyRsp
	(*EngageRecommendPlayer)(nil),  // 50: EngageRecommendPlayer
	(*PlayerSubMapData)(nil),       // 51: PlayerSubMapData
	(*SetTimeOffsetRes)(nil),       // 52: SetTimeOffsetRes
}
var file_cluster_proto_depIdxs = []int32{
	4,  // 0: CloseAgentRequest.msg:type_name -> PushMessage
	27, // 1: PushValueRequest.kv:type_name -> PushValueRequest.KvEntry
	28, // 2: HttpRequest.header:type_name -> HttpRequest.HeaderEntry
	29, // 3: FightPushMsg.actor:type_name -> FightActor
	30, // 4: FightPushMsg.ret:type_name -> FightResultReq
	23, // 5: FightPushMsg.star:type_name -> StarInfoMsg
	31, // 6: MailPushMsg.reward:type_name -> ItemCommon
	32, // 7: MailPushMsg.containers:type_name -> MailContainer
	0,  // 8: UserLoginMsg.opt:type_name -> LoginOpt
	1,  // 9: UserLoginMsg.method:type_name -> LoginMethod
	33, // 10: UserLoginMsg.msg:type_name -> CommonLoginParam
	2,  // 11: rpc.HandleRequest:input_type -> RequestMessage
	5,  // 12: rpc.AgentClosed:input_type -> AgentClosedRequest
	17, // 13: rpc.HandleHttpRequest:input_type -> HttpRequest
	19, // 14: rpc.OnEnter:input_type -> UserEnterMessage
	34, // 15: rpc.OnHeartBeat:input_type -> PlayerUid
	4,  // 16: rpc.HandlePush:input_type -> PushMessage
	7,  // 17: rpc.CloseAgent:input_type -> CloseAgentRequest
	9,  // 18: rpc.Bind:input_type -> BindRequest
	8,  // 19: rpc.PushValue:input_type -> PushValueRequest
	4,  // 20: rpc.Broadcast:input_type -> PushMessage
	13, // 21: rpc.GetUidArrIsOnline:input_type -> GetUidArrIsOnlineReq
	15, // 22: rpc.GetRandomUidArr:input_type -> GetRandomUidArrReq
	20, // 23: rpc.PushFightResult:input_type -> FightPushMsg
	35, // 24: rpc.PushFeedFightReq:input_type -> FeedAccountReq
	21, // 25: rpc.PushMail:input_type -> MailPushMsg
	22, // 26: rpc.PushClearUser:input_type -> ClearUserPushMsg
	36, // 27: rpc.PushAddItem:input_type -> GM_UpdateItem
	37, // 28: rpc.PushUnlock:input_type -> PlayerInviteCode
	38, // 29: rpc.PushInvite:input_type -> PushInviteMsg
	39, // 30: rpc.PushPlayerPersonal:input_type -> PlayerPersonalReq
	34, // 31: rpc.PushFixTour:input_type -> PlayerUid
	26, // 32: rpc.PushUserLogin:input_type -> UserLoginMsg
	34, // 33: rpc.PushKickUser:input_type -> PlayerUid
	34, // 34: rpc.PushRefreshAndUnlock:input_type -> PlayerUid
	40, // 35: rpc.TestUserConcurrency:input_type -> TestUserConcurrencyReq
	41, // 36: rpc.NoticeActorOutputStatus:input_type -> Empty
	41, // 37: rpc.NoticeVersionCheckRefresh:input_type -> Empty
	34, // 38: rpc.GetPlayerStarInfo:input_type -> PlayerUid
	34, // 39: rpc.GetPlayerEngageRecommendInfo:input_type -> PlayerUid
	34, // 40: rpc.ResetPlayerStarDailyRec:input_type -> PlayerUid
	24, // 41: rpc.SetPlayerStarDailyNum:input_type -> SetUserNumMsg
	42, // 42: rpc.PushTimeOffset:input_type -> SetTimeOffsetData
	41, // 43: rpc.NoticeKingRoundRefresh:input_type -> Empty
	41, // 44: rpc.NoticeKingRoundReset:input_type -> Empty
	34, // 45: rpc.GetPlayerSubMapData:input_type -> PlayerUid
	25, // 46: rpc.PushPayItems:input_type -> PayItems
	43, // 47: rpc.PushAchievementEvent:input_type -> PushAchievementMsg
	34, // 48: rpc.PushGetAllSkin:input_type -> PlayerUid
	44, // 49: rpc.PushSetPlayerAreaCode:input_type -> SetPlayerAreaCodeReq
	34, // 50: rpc.FinishFirstRecharge:input_type -> PlayerUid
	42, // 51: rpc.PushSetTimeOffset:input_type -> SetTimeOffsetData
	42, // 52: rpc.PushSetAllTimeOffset:input_type -> SetTimeOffsetData
	45, // 53: rpc.PushSetMissionPref:input_type -> SetMissionPrefReq
	3,  // 54: rpc.HandleRequest:output_type -> ResponseMessage
	6,  // 55: rpc.AgentClosed:output_type -> AgentClosedResponse
	18, // 56: rpc.HandleHttpRequest:output_type -> HttpResponse
	41, // 57: rpc.OnEnter:output_type -> Empty
	41, // 58: rpc.OnHeartBeat:output_type -> Empty
	41, // 59: rpc.HandlePush:output_type -> Empty
	41, // 60: rpc.CloseAgent:output_type -> Empty
	10, // 61: rpc.Bind:output_type -> BindResponse
	41, // 62: rpc.PushValue:output_type -> Empty
	41, // 63: rpc.Broadcast:output_type -> Empty
	14, // 64: rpc.GetUidArrIsOnline:output_type -> GetUidArrIsOnlineRsp
	16, // 65: rpc.GetRandomUidArr:output_type -> GetRandomUidArrRsp
	41, // 66: rpc.PushFightResult:output_type -> Empty
	41, // 67: rpc.PushFeedFightReq:output_type -> Empty
	41, // 68: rpc.PushMail:output_type -> Empty
	41, // 69: rpc.PushClearUser:output_type -> Empty
	46, // 70: rpc.PushAddItem:output_type -> ItemUpdateResult
	41, // 71: rpc.PushUnlock:output_type -> Empty
	41, // 72: rpc.PushInvite:output_type -> Empty
	47, // 73: rpc.PushPlayerPersonal:output_type -> PlayerPersonalResp
	41, // 74: rpc.PushFixTour:output_type -> Empty
	48, // 75: rpc.PushUserLogin:output_type -> LoginRsp
	41, // 76: rpc.PushKickUser:output_type -> Empty
	41, // 77: rpc.PushRefreshAndUnlock:output_type -> Empty
	49, // 78: rpc.TestUserConcurrency:output_type -> TestUserConcurrencyRsp
	41, // 79: rpc.NoticeActorOutputStatus:output_type -> Empty
	41, // 80: rpc.NoticeVersionCheckRefresh:output_type -> Empty
	23, // 81: rpc.GetPlayerStarInfo:output_type -> StarInfoMsg
	50, // 82: rpc.GetPlayerEngageRecommendInfo:output_type -> EngageRecommendPlayer
	41, // 83: rpc.ResetPlayerStarDailyRec:output_type -> Empty
	41, // 84: rpc.SetPlayerStarDailyNum:output_type -> Empty
	41, // 85: rpc.PushTimeOffset:output_type -> Empty
	41, // 86: rpc.NoticeKingRoundRefresh:output_type -> Empty
	41, // 87: rpc.NoticeKingRoundReset:output_type -> Empty
	51, // 88: rpc.GetPlayerSubMapData:output_type -> PlayerSubMapData
	41, // 89: rpc.PushPayItems:output_type -> Empty
	41, // 90: rpc.PushAchievementEvent:output_type -> Empty
	41, // 91: rpc.PushGetAllSkin:output_type -> Empty
	41, // 92: rpc.PushSetPlayerAreaCode:output_type -> Empty
	41, // 93: rpc.FinishFirstRecharge:output_type -> Empty
	52, // 94: rpc.PushSetTimeOffset:output_type -> SetTimeOffsetRes
	52, // 95: rpc.PushSetAllTimeOffset:output_type -> SetTimeOffsetRes
	41, // 96: rpc.PushSetMissionPref:output_type -> Empty
	54, // [54:97] is the sub-list for method output_type
	11, // [11:54] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_cluster_proto_init() }
func file_cluster_proto_init() {
	if File_cluster_proto != nil {
		return
	}
	file_game_proto_init()
	file_fight_proto_init()
	file_mail_proto_init()
	file_client_manage_proto_init()
	file_item_proto_init()
	file_player_proto_init()
	file_invite_proto_init()
	file_achievemenT_proto_init()
	file_star_proto_init()
	file_leaderboard_proto_init()
	file_manage_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_cluster_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cluster_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cluster_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cluster_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentClosedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cluster_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentClosedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cluster_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseAgentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cluster_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushValueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cluster_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BindRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cluster_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BindResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cluster_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cluster_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSessionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cluster_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUidArrIsOnlineReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cluster_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUidArrIsOnlineRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cluster_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRandomUidArrReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cluster_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRandomUidArrRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cluster_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HttpRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cluster_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HttpResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cluster_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserEnterMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cluster_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FightPushMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cluster_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MailPushMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cluster_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearUserPushMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cluster_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StarInfoMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cluster_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetUserNumMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cluster_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayItems); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cluster_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserLoginMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cluster_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cluster_proto_goTypes,
		DependencyIndexes: file_cluster_proto_depIdxs,
		EnumInfos:         file_cluster_proto_enumTypes,
		MessageInfos:      file_cluster_proto_msgTypes,
	}.Build()
	File_cluster_proto = out.File
	file_cluster_proto_rawDesc = nil
	file_cluster_proto_goTypes = nil
	file_cluster_proto_depIdxs = nil
}
