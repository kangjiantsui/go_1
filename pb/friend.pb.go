// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.10.0
// source: friend.proto

package pb

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// 在线状态
type ONLINE_STATUS int32

const (
	ONLINE_STATUS_OFFLINE ONLINE_STATUS = 0 // 离线
	ONLINE_STATUS_ONLINE  ONLINE_STATUS = 1 // 在线
	ONLINE_STATUS_BATTLE  ONLINE_STATUS = 2 // 对战中
)

// Enum value maps for ONLINE_STATUS.
var (
	ONLINE_STATUS_name = map[int32]string{
		0: "OFFLINE",
		1: "ONLINE",
		2: "BATTLE",
	}
	ONLINE_STATUS_value = map[string]int32{
		"OFFLINE": 0,
		"ONLINE":  1,
		"BATTLE":  2,
	}
)

func (x ONLINE_STATUS) Enum() *ONLINE_STATUS {
	p := new(ONLINE_STATUS)
	*p = x
	return p
}

func (x ONLINE_STATUS) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ONLINE_STATUS) Descriptor() protoreflect.EnumDescriptor {
	return file_friend_proto_enumTypes[0].Descriptor()
}

func (ONLINE_STATUS) Type() protoreflect.EnumType {
	return &file_friend_proto_enumTypes[0]
}

func (x ONLINE_STATUS) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ONLINE_STATUS.Descriptor instead.
func (ONLINE_STATUS) EnumDescriptor() ([]byte, []int) {
	return file_friend_proto_rawDescGZIP(), []int{0}
}

type FriendYuezhanInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                         // 昵称
	Cup          int32         `protobuf:"varint,2,opt,name=cup,proto3" json:"cup,omitempty"`                          // 杯数
	Status       ONLINE_STATUS `protobuf:"varint,3,opt,name=status,proto3,enum=ONLINE_STATUS" json:"status,omitempty"` // 在线状态
	InviteCode   uint64        `protobuf:"varint,4,opt,name=inviteCode,proto3" json:"inviteCode,omitempty"`
	PlayerAvatar int32         `protobuf:"varint,5,opt,name=playerAvatar,proto3" json:"playerAvatar,omitempty"` // 游戏内头像
	Highestcup   int32         `protobuf:"varint,6,opt,name=highestcup,proto3" json:"highestcup,omitempty"`     // 生涯最大杯数
}

func (x *FriendYuezhanInfo) Reset() {
	*x = FriendYuezhanInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_friend_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendYuezhanInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendYuezhanInfo) ProtoMessage() {}

func (x *FriendYuezhanInfo) ProtoReflect() protoreflect.Message {
	mi := &file_friend_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendYuezhanInfo.ProtoReflect.Descriptor instead.
func (*FriendYuezhanInfo) Descriptor() ([]byte, []int) {
	return file_friend_proto_rawDescGZIP(), []int{0}
}

func (x *FriendYuezhanInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FriendYuezhanInfo) GetCup() int32 {
	if x != nil {
		return x.Cup
	}
	return 0
}

func (x *FriendYuezhanInfo) GetStatus() ONLINE_STATUS {
	if x != nil {
		return x.Status
	}
	return ONLINE_STATUS_OFFLINE
}

func (x *FriendYuezhanInfo) GetInviteCode() uint64 {
	if x != nil {
		return x.InviteCode
	}
	return 0
}

func (x *FriendYuezhanInfo) GetPlayerAvatar() int32 {
	if x != nil {
		return x.PlayerAvatar
	}
	return 0
}

func (x *FriendYuezhanInfo) GetHighestcup() int32 {
	if x != nil {
		return x.Highestcup
	}
	return 0
}

// 好友约战列表
type FriendYuezhanListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OnlineFriend []*FriendYuezhanInfo `protobuf:"bytes,1,rep,name=onlineFriend,proto3" json:"onlineFriend,omitempty"` // 在线好友
	OnlinePlayer []*FriendYuezhanInfo `protobuf:"bytes,2,rep,name=onlinePlayer,proto3" json:"onlinePlayer,omitempty"` // 在线玩家
}

func (x *FriendYuezhanListResp) Reset() {
	*x = FriendYuezhanListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_friend_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendYuezhanListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendYuezhanListResp) ProtoMessage() {}

func (x *FriendYuezhanListResp) ProtoReflect() protoreflect.Message {
	mi := &file_friend_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendYuezhanListResp.ProtoReflect.Descriptor instead.
func (*FriendYuezhanListResp) Descriptor() ([]byte, []int) {
	return file_friend_proto_rawDescGZIP(), []int{1}
}

func (x *FriendYuezhanListResp) GetOnlineFriend() []*FriendYuezhanInfo {
	if x != nil {
		return x.OnlineFriend
	}
	return nil
}

func (x *FriendYuezhanListResp) GetOnlinePlayer() []*FriendYuezhanInfo {
	if x != nil {
		return x.OnlinePlayer
	}
	return nil
}

type FriendInviteBattleInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                         // 昵称
	Cup          int32         `protobuf:"varint,2,opt,name=cup,proto3" json:"cup,omitempty"`                          // 杯数
	Status       ONLINE_STATUS `protobuf:"varint,3,opt,name=status,proto3,enum=ONLINE_STATUS" json:"status,omitempty"` // 在线状态
	InviteCode   uint64        `protobuf:"varint,4,opt,name=inviteCode,proto3" json:"inviteCode,omitempty"`
	PlayerAvatar int32         `protobuf:"varint,5,opt,name=playerAvatar,proto3" json:"playerAvatar,omitempty"` // 游戏内头像
	Highestcup   int32         `protobuf:"varint,6,opt,name=highestcup,proto3" json:"highestcup,omitempty"`     // 生涯最大杯数
}

func (x *FriendInviteBattleInfo) Reset() {
	*x = FriendInviteBattleInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_friend_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendInviteBattleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendInviteBattleInfo) ProtoMessage() {}

func (x *FriendInviteBattleInfo) ProtoReflect() protoreflect.Message {
	mi := &file_friend_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendInviteBattleInfo.ProtoReflect.Descriptor instead.
func (*FriendInviteBattleInfo) Descriptor() ([]byte, []int) {
	return file_friend_proto_rawDescGZIP(), []int{2}
}

func (x *FriendInviteBattleInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FriendInviteBattleInfo) GetCup() int32 {
	if x != nil {
		return x.Cup
	}
	return 0
}

func (x *FriendInviteBattleInfo) GetStatus() ONLINE_STATUS {
	if x != nil {
		return x.Status
	}
	return ONLINE_STATUS_OFFLINE
}

func (x *FriendInviteBattleInfo) GetInviteCode() uint64 {
	if x != nil {
		return x.InviteCode
	}
	return 0
}

func (x *FriendInviteBattleInfo) GetPlayerAvatar() int32 {
	if x != nil {
		return x.PlayerAvatar
	}
	return 0
}

func (x *FriendInviteBattleInfo) GetHighestcup() int32 {
	if x != nil {
		return x.Highestcup
	}
	return 0
}

// 好友约战列表1
type FriendInviteBattleListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OnlineFriend []*FriendInviteBattleInfo `protobuf:"bytes,1,rep,name=onlineFriend,proto3" json:"onlineFriend,omitempty"` // 在线好友
	OnlinePlayer []*FriendInviteBattleInfo `protobuf:"bytes,2,rep,name=onlinePlayer,proto3" json:"onlinePlayer,omitempty"` // 在线玩家
}

func (x *FriendInviteBattleListResp) Reset() {
	*x = FriendInviteBattleListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_friend_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendInviteBattleListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendInviteBattleListResp) ProtoMessage() {}

func (x *FriendInviteBattleListResp) ProtoReflect() protoreflect.Message {
	mi := &file_friend_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendInviteBattleListResp.ProtoReflect.Descriptor instead.
func (*FriendInviteBattleListResp) Descriptor() ([]byte, []int) {
	return file_friend_proto_rawDescGZIP(), []int{3}
}

func (x *FriendInviteBattleListResp) GetOnlineFriend() []*FriendInviteBattleInfo {
	if x != nil {
		return x.OnlineFriend
	}
	return nil
}

func (x *FriendInviteBattleListResp) GetOnlinePlayer() []*FriendInviteBattleInfo {
	if x != nil {
		return x.OnlinePlayer
	}
	return nil
}

type Friends struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FInfo []*FriendInfo `protobuf:"bytes,1,rep,name=fInfo,proto3" json:"fInfo,omitempty"` // 好友列表
}

func (x *Friends) Reset() {
	*x = Friends{}
	if protoimpl.UnsafeEnabled {
		mi := &file_friend_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Friends) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Friends) ProtoMessage() {}

func (x *Friends) ProtoReflect() protoreflect.Message {
	mi := &file_friend_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Friends.ProtoReflect.Descriptor instead.
func (*Friends) Descriptor() ([]byte, []int) {
	return file_friend_proto_rawDescGZIP(), []int{4}
}

func (x *Friends) GetFInfo() []*FriendInfo {
	if x != nil {
		return x.FInfo
	}
	return nil
}

// 审批好友申请
type FriendReqRatify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ic     uint64 `protobuf:"varint,1,opt,name=ic,proto3" json:"ic,omitempty"`                     // 发起好友请求的玩家的ic
	Option RATIFY `protobuf:"varint,2,opt,name=option,proto3,enum=RATIFY" json:"option,omitempty"` // 操作类型 [0]拒绝 [1]通过
}

func (x *FriendReqRatify) Reset() {
	*x = FriendReqRatify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_friend_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendReqRatify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendReqRatify) ProtoMessage() {}

func (x *FriendReqRatify) ProtoReflect() protoreflect.Message {
	mi := &file_friend_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendReqRatify.ProtoReflect.Descriptor instead.
func (*FriendReqRatify) Descriptor() ([]byte, []int) {
	return file_friend_proto_rawDescGZIP(), []int{5}
}

func (x *FriendReqRatify) GetIc() uint64 {
	if x != nil {
		return x.Ic
	}
	return 0
}

func (x *FriendReqRatify) GetOption() RATIFY {
	if x != nil {
		return x.Option
	}
	return RATIFY_FRIEND_REJECT
}

// 添加好友
type FriendAddReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ic     uint64        `protobuf:"varint,1,opt,name=ic,proto3" json:"ic,omitempty"` // 玩家ic
	Source FRIEND_SOURCE `protobuf:"varint,2,opt,name=source,proto3,enum=FRIEND_SOURCE" json:"source,omitempty"`
}

func (x *FriendAddReq) Reset() {
	*x = FriendAddReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_friend_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendAddReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendAddReq) ProtoMessage() {}

func (x *FriendAddReq) ProtoReflect() protoreflect.Message {
	mi := &file_friend_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendAddReq.ProtoReflect.Descriptor instead.
func (*FriendAddReq) Descriptor() ([]byte, []int) {
	return file_friend_proto_rawDescGZIP(), []int{6}
}

func (x *FriendAddReq) GetIc() uint64 {
	if x != nil {
		return x.Ic
	}
	return 0
}

func (x *FriendAddReq) GetSource() FRIEND_SOURCE {
	if x != nil {
		return x.Source
	}
	return FRIEND_SOURCE_F_ID
}

// 推荐列表
type RecommendFriends struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecInfo []*Recommend `protobuf:"bytes,1,rep,name=recInfo,proto3" json:"recInfo,omitempty"` // 推荐信息
}

func (x *RecommendFriends) Reset() {
	*x = RecommendFriends{}
	if protoimpl.UnsafeEnabled {
		mi := &file_friend_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecommendFriends) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecommendFriends) ProtoMessage() {}

func (x *RecommendFriends) ProtoReflect() protoreflect.Message {
	mi := &file_friend_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecommendFriends.ProtoReflect.Descriptor instead.
func (*RecommendFriends) Descriptor() ([]byte, []int) {
	return file_friend_proto_rawDescGZIP(), []int{7}
}

func (x *RecommendFriends) GetRecInfo() []*Recommend {
	if x != nil {
		return x.RecInfo
	}
	return nil
}

// 推荐好友
type Recommend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ic        uint64          `protobuf:"varint,1,opt,name=ic,proto3" json:"ic,omitempty"`
	BaseInfo  *FriendBaseInfo `protobuf:"bytes,2,opt,name=baseInfo,proto3" json:"baseInfo,omitempty"`
	Recommend RECOMMEND       `protobuf:"varint,3,opt,name=recommend,proto3,enum=RECOMMEND" json:"recommend,omitempty"` // 推荐理由 [0]最近单挑过{N}场 [1]旗鼓相当的对手 [2]活跃大佬 [3]并肩作战{N}场
	Count     int32           `protobuf:"varint,4,opt,name=count,proto3" json:"count,omitempty"`                        // 场次
	IsOnline  bool            `protobuf:"varint,5,opt,name=isOnline,proto3" json:"isOnline,omitempty"`                  // 是否在线
}

func (x *Recommend) Reset() {
	*x = Recommend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_friend_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Recommend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Recommend) ProtoMessage() {}

func (x *Recommend) ProtoReflect() protoreflect.Message {
	mi := &file_friend_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Recommend.ProtoReflect.Descriptor instead.
func (*Recommend) Descriptor() ([]byte, []int) {
	return file_friend_proto_rawDescGZIP(), []int{8}
}

func (x *Recommend) GetIc() uint64 {
	if x != nil {
		return x.Ic
	}
	return 0
}

func (x *Recommend) GetBaseInfo() *FriendBaseInfo {
	if x != nil {
		return x.BaseInfo
	}
	return nil
}

func (x *Recommend) GetRecommend() RECOMMEND {
	if x != nil {
		return x.Recommend
	}
	return RECOMMEND_RE_BATTLE
}

func (x *Recommend) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *Recommend) GetIsOnline() bool {
	if x != nil {
		return x.IsOnline
	}
	return false
}

// 好友请求
type ReqInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseInfo   *FriendBaseInfo `protobuf:"bytes,1,opt,name=baseInfo,proto3" json:"baseInfo,omitempty"`                 // 申请者信息
	Source     FRIEND_SOURCE   `protobuf:"varint,2,opt,name=source,proto3,enum=FRIEND_SOURCE" json:"source,omitempty"` // 来源 [0]通过id搜索 [1]最近对战添加 [2]推荐添加
	Time       int64           `protobuf:"varint,3,opt,name=time,proto3" json:"time,omitempty"`                        // 申请时间戳
	InviteCode uint64          `protobuf:"varint,4,opt,name=inviteCode,proto3" json:"inviteCode,omitempty"`            // 申请者ic
}

func (x *ReqInfo) Reset() {
	*x = ReqInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_friend_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqInfo) ProtoMessage() {}

func (x *ReqInfo) ProtoReflect() protoreflect.Message {
	mi := &file_friend_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqInfo.ProtoReflect.Descriptor instead.
func (*ReqInfo) Descriptor() ([]byte, []int) {
	return file_friend_proto_rawDescGZIP(), []int{9}
}

func (x *ReqInfo) GetBaseInfo() *FriendBaseInfo {
	if x != nil {
		return x.BaseInfo
	}
	return nil
}

func (x *ReqInfo) GetSource() FRIEND_SOURCE {
	if x != nil {
		return x.Source
	}
	return FRIEND_SOURCE_F_ID
}

func (x *ReqInfo) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *ReqInfo) GetInviteCode() uint64 {
	if x != nil {
		return x.InviteCode
	}
	return 0
}

// 单条好友信息
type FriendInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseInfo       *FriendBaseInfo `protobuf:"bytes,1,opt,name=baseInfo,proto3" json:"baseInfo,omitempty"`
	LastOnlineTime int64           `protobuf:"varint,2,opt,name=lastOnlineTime,proto3" json:"lastOnlineTime,omitempty"` // 最后在线距当前多少秒
	InviteCode     uint64          `protobuf:"varint,3,opt,name=inviteCode,proto3" json:"inviteCode,omitempty"`         // 好友ic
}

func (x *FriendInfo) Reset() {
	*x = FriendInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_friend_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendInfo) ProtoMessage() {}

func (x *FriendInfo) ProtoReflect() protoreflect.Message {
	mi := &file_friend_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendInfo.ProtoReflect.Descriptor instead.
func (*FriendInfo) Descriptor() ([]byte, []int) {
	return file_friend_proto_rawDescGZIP(), []int{10}
}

func (x *FriendInfo) GetBaseInfo() *FriendBaseInfo {
	if x != nil {
		return x.BaseInfo
	}
	return nil
}

func (x *FriendInfo) GetLastOnlineTime() int64 {
	if x != nil {
		return x.LastOnlineTime
	}
	return 0
}

func (x *FriendInfo) GetInviteCode() uint64 {
	if x != nil {
		return x.InviteCode
	}
	return 0
}

// 好友基础信息
type FriendBaseInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cup              int32  `protobuf:"varint,1,opt,name=cup,proto3" json:"cup,omitempty"`                            // 杯数
	Name             string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                           // 昵称
	Avatar           string `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`                       // 头像
	PlayerAvatar     int32  `protobuf:"varint,4,opt,name=playerAvatar,proto3" json:"playerAvatar,omitempty"`          // 游戏内头像
	Highestcup       int32  `protobuf:"varint,5,opt,name=highestcup,proto3" json:"highestcup,omitempty"`              // 生涯最大杯数
	Starlevel        int32  `protobuf:"varint,6,opt,name=starlevel,proto3" json:"starlevel,omitempty"`                // 约战星级
	Title            int32  `protobuf:"varint,7,opt,name=title,proto3" json:"title,omitempty"`                        // 称号
	AvatarFrame      int32  `protobuf:"varint,8,opt,name=avatarFrame,proto3" json:"avatarFrame,omitempty"`            // 头像框
	ColorfulName     int32  `protobuf:"varint,9,opt,name=colorfulName,proto3" json:"colorfulName,omitempty"`          // 炫彩名
	AchievementPoint int32  `protobuf:"varint,10,opt,name=achievementPoint,proto3" json:"achievementPoint,omitempty"` // 成就积分
}

func (x *FriendBaseInfo) Reset() {
	*x = FriendBaseInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_friend_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendBaseInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendBaseInfo) ProtoMessage() {}

func (x *FriendBaseInfo) ProtoReflect() protoreflect.Message {
	mi := &file_friend_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendBaseInfo.ProtoReflect.Descriptor instead.
func (*FriendBaseInfo) Descriptor() ([]byte, []int) {
	return file_friend_proto_rawDescGZIP(), []int{11}
}

func (x *FriendBaseInfo) GetCup() int32 {
	if x != nil {
		return x.Cup
	}
	return 0
}

func (x *FriendBaseInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FriendBaseInfo) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *FriendBaseInfo) GetPlayerAvatar() int32 {
	if x != nil {
		return x.PlayerAvatar
	}
	return 0
}

func (x *FriendBaseInfo) GetHighestcup() int32 {
	if x != nil {
		return x.Highestcup
	}
	return 0
}

func (x *FriendBaseInfo) GetStarlevel() int32 {
	if x != nil {
		return x.Starlevel
	}
	return 0
}

func (x *FriendBaseInfo) GetTitle() int32 {
	if x != nil {
		return x.Title
	}
	return 0
}

func (x *FriendBaseInfo) GetAvatarFrame() int32 {
	if x != nil {
		return x.AvatarFrame
	}
	return 0
}

func (x *FriendBaseInfo) GetColorfulName() int32 {
	if x != nil {
		return x.ColorfulName
	}
	return 0
}

func (x *FriendBaseInfo) GetAchievementPoint() int32 {
	if x != nil {
		return x.AchievementPoint
	}
	return 0
}

// 好友信息返回
type FriendInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FInfo   []*FriendInfo `protobuf:"bytes,1,rep,name=fInfo,proto3" json:"fInfo,omitempty"`     // 好友列表
	ReqInfo []*ReqInfo    `protobuf:"bytes,2,rep,name=reqInfo,proto3" json:"reqInfo,omitempty"` // 申请列表
	RecInfo []*Recommend  `protobuf:"bytes,3,rep,name=recInfo,proto3" json:"recInfo,omitempty"` // 推荐列表
}

func (x *FriendInfoResp) Reset() {
	*x = FriendInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_friend_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendInfoResp) ProtoMessage() {}

func (x *FriendInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_friend_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendInfoResp.ProtoReflect.Descriptor instead.
func (*FriendInfoResp) Descriptor() ([]byte, []int) {
	return file_friend_proto_rawDescGZIP(), []int{12}
}

func (x *FriendInfoResp) GetFInfo() []*FriendInfo {
	if x != nil {
		return x.FInfo
	}
	return nil
}

func (x *FriendInfoResp) GetReqInfo() []*ReqInfo {
	if x != nil {
		return x.ReqInfo
	}
	return nil
}

func (x *FriendInfoResp) GetRecInfo() []*Recommend {
	if x != nil {
		return x.RecInfo
	}
	return nil
}

var File_friend_proto protoreflect.FileDescriptor

var file_friend_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc5, 0x01, 0x0a,
	0x11, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x59, 0x75, 0x65, 0x7a, 0x68, 0x61, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x75, 0x70, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x63, 0x75, 0x70, 0x12, 0x26, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x4f, 0x4e, 0x4c, 0x49, 0x4e,
	0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x63,
	0x75, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x68, 0x69, 0x67, 0x68, 0x65, 0x73,
	0x74, 0x63, 0x75, 0x70, 0x22, 0x87, 0x01, 0x0a, 0x15, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x59,
	0x75, 0x65, 0x7a, 0x68, 0x61, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x36,
	0x0a, 0x0c, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x59, 0x75, 0x65,
	0x7a, 0x68, 0x61, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x12, 0x36, 0x0a, 0x0c, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x59, 0x75, 0x65, 0x7a, 0x68, 0x61, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x0c, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x22, 0xca,
	0x01, 0x0a, 0x16, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x42,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x63, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x63, 0x75, 0x70, 0x12,
	0x26, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0e, 0x2e, 0x4f, 0x4e, 0x4c, 0x49, 0x4e, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x69, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x68,
	0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x63, 0x75, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x68, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x63, 0x75, 0x70, 0x22, 0x96, 0x01, 0x0a, 0x1a,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x42, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3b, 0x0a, 0x0c, 0x6f, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x42,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x6f, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x12, 0x3b, 0x0a, 0x0c, 0x6f, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x42, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x22, 0x2c, 0x0a, 0x07, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x12,
	0x21, 0x0a, 0x05, 0x66, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x66, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x42, 0x0a, 0x0f, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x52,
	0x61, 0x74, 0x69, 0x66, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x02, 0x69, 0x63, 0x12, 0x1f, 0x0a, 0x06, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x07, 0x2e, 0x52, 0x41, 0x54, 0x49, 0x46, 0x59, 0x52, 0x06,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x46, 0x0a, 0x0c, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x02, 0x69, 0x63, 0x12, 0x26, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x46, 0x52, 0x49, 0x45, 0x4e, 0x44, 0x5f,
	0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x38,
	0x0a, 0x10, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x73, 0x12, 0x24, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52,
	0x07, 0x72, 0x65, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xa4, 0x01, 0x0a, 0x09, 0x52, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x02, 0x69, 0x63, 0x12, 0x2b, 0x0a, 0x08, 0x62, 0x61, 0x73, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x62, 0x61, 0x73, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x28, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0a, 0x2e, 0x52, 0x45, 0x43, 0x4f, 0x4d, 0x4d, 0x45,
	0x4e, 0x44, 0x52, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x22,
	0x92, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2b, 0x0a, 0x08, 0x62,
	0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08,
	0x62, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x26, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x46, 0x52, 0x49, 0x45, 0x4e,
	0x44, 0x5f, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x74, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x22, 0x81, 0x01, 0x0a, 0x0a, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x2b, 0x0a, 0x08, 0x62, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x42, 0x61,
	0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x62, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x26, 0x0a, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x4f, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x69, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xb8, 0x02, 0x0a, 0x0e, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x63,
	0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x63, 0x75, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x1e, 0x0a,
	0x0a, 0x68, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x63, 0x75, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x68, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x63, 0x75, 0x70, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x46, 0x72, 0x61, 0x6d, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x46, 0x72,
	0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x66, 0x75, 0x6c, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
	0x66, 0x75, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x61, 0x63, 0x68, 0x69, 0x65,
	0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x10, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x22, 0x7d, 0x0a, 0x0e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x21, 0x0a, 0x05, 0x66, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x05, 0x66, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x52, 0x65, 0x71, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x07, 0x72, 0x65, 0x71, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24, 0x0a, 0x07,
	0x72, 0x65, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52, 0x07, 0x72, 0x65, 0x63, 0x49, 0x6e,
	0x66, 0x6f, 0x2a, 0x34, 0x0a, 0x0d, 0x4f, 0x4e, 0x4c, 0x49, 0x4e, 0x45, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x12, 0x0b, 0x0a, 0x07, 0x4f, 0x46, 0x46, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x00,
	0x12, 0x0a, 0x0a, 0x06, 0x4f, 0x4e, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06,
	0x42, 0x41, 0x54, 0x54, 0x4c, 0x45, 0x10, 0x02, 0x42, 0x0b, 0x5a, 0x09, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_friend_proto_rawDescOnce sync.Once
	file_friend_proto_rawDescData = file_friend_proto_rawDesc
)

func file_friend_proto_rawDescGZIP() []byte {
	file_friend_proto_rawDescOnce.Do(func() {
		file_friend_proto_rawDescData = protoimpl.X.CompressGZIP(file_friend_proto_rawDescData)
	})
	return file_friend_proto_rawDescData
}

var file_friend_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_friend_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_friend_proto_goTypes = []interface{}{
	(ONLINE_STATUS)(0),                 // 0: ONLINE_STATUS
	(*FriendYuezhanInfo)(nil),          // 1: FriendYuezhanInfo
	(*FriendYuezhanListResp)(nil),      // 2: FriendYuezhanListResp
	(*FriendInviteBattleInfo)(nil),     // 3: FriendInviteBattleInfo
	(*FriendInviteBattleListResp)(nil), // 4: FriendInviteBattleListResp
	(*Friends)(nil),                    // 5: Friends
	(*FriendReqRatify)(nil),            // 6: FriendReqRatify
	(*FriendAddReq)(nil),               // 7: FriendAddReq
	(*RecommendFriends)(nil),           // 8: RecommendFriends
	(*Recommend)(nil),                  // 9: Recommend
	(*ReqInfo)(nil),                    // 10: ReqInfo
	(*FriendInfo)(nil),                 // 11: FriendInfo
	(*FriendBaseInfo)(nil),             // 12: FriendBaseInfo
	(*FriendInfoResp)(nil),             // 13: FriendInfoResp
	(RATIFY)(0),                        // 14: RATIFY
	(FRIEND_SOURCE)(0),                 // 15: FRIEND_SOURCE
	(RECOMMEND)(0),                     // 16: RECOMMEND
}
var file_friend_proto_depIdxs = []int32{
	0,  // 0: FriendYuezhanInfo.status:type_name -> ONLINE_STATUS
	1,  // 1: FriendYuezhanListResp.onlineFriend:type_name -> FriendYuezhanInfo
	1,  // 2: FriendYuezhanListResp.onlinePlayer:type_name -> FriendYuezhanInfo
	0,  // 3: FriendInviteBattleInfo.status:type_name -> ONLINE_STATUS
	3,  // 4: FriendInviteBattleListResp.onlineFriend:type_name -> FriendInviteBattleInfo
	3,  // 5: FriendInviteBattleListResp.onlinePlayer:type_name -> FriendInviteBattleInfo
	11, // 6: Friends.fInfo:type_name -> FriendInfo
	14, // 7: FriendReqRatify.option:type_name -> RATIFY
	15, // 8: FriendAddReq.source:type_name -> FRIEND_SOURCE
	9,  // 9: RecommendFriends.recInfo:type_name -> Recommend
	12, // 10: Recommend.baseInfo:type_name -> FriendBaseInfo
	16, // 11: Recommend.recommend:type_name -> RECOMMEND
	12, // 12: ReqInfo.baseInfo:type_name -> FriendBaseInfo
	15, // 13: ReqInfo.source:type_name -> FRIEND_SOURCE
	12, // 14: FriendInfo.baseInfo:type_name -> FriendBaseInfo
	11, // 15: FriendInfoResp.fInfo:type_name -> FriendInfo
	10, // 16: FriendInfoResp.reqInfo:type_name -> ReqInfo
	9,  // 17: FriendInfoResp.recInfo:type_name -> Recommend
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_friend_proto_init() }
func file_friend_proto_init() {
	if File_friend_proto != nil {
		return
	}
	file_define_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_friend_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendYuezhanInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_friend_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendYuezhanListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_friend_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendInviteBattleInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_friend_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendInviteBattleListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_friend_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Friends); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_friend_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendReqRatify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_friend_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendAddReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_friend_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecommendFriends); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_friend_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Recommend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_friend_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_friend_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_friend_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendBaseInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_friend_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_friend_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_friend_proto_goTypes,
		DependencyIndexes: file_friend_proto_depIdxs,
		EnumInfos:         file_friend_proto_enumTypes,
		MessageInfos:      file_friend_proto_msgTypes,
	}.Build()
	File_friend_proto = out.File
	file_friend_proto_rawDesc = nil
	file_friend_proto_goTypes = nil
	file_friend_proto_depIdxs = nil
}
