// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.10.0
// source: player.proto

package pb

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type CheckLoginReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token       string            `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`      // `required` `pattern=[\w\d]{15,}` token
	IsLogin     bool              `protobuf:"varint,2,opt,name=isLogin,proto3" json:"isLogin,omitempty"` // 是否是登录
	Method      int32             `protobuf:"varint,3,opt,name=method,proto3" json:"method,omitempty"`   // 登陆方式  0游客 1QQ 2微信 3ohayoo
	Cp          *CommonLoginParam `protobuf:"bytes,4,opt,name=cp,proto3" json:"cp,omitempty"`            // 基本参数
	IsRealnamed bool              `protobuf:"varint,5,opt,name=isRealnamed,proto3" json:"isRealnamed,omitempty"`
	IsAdult     bool              `protobuf:"varint,6,opt,name=isAdult,proto3" json:"isAdult,omitempty"`
}

func (x *CheckLoginReq) Reset() {
	*x = CheckLoginReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_player_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckLoginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckLoginReq) ProtoMessage() {}

func (x *CheckLoginReq) ProtoReflect() protoreflect.Message {
	mi := &file_player_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckLoginReq.ProtoReflect.Descriptor instead.
func (*CheckLoginReq) Descriptor() ([]byte, []int) {
	return file_player_proto_rawDescGZIP(), []int{0}
}

func (x *CheckLoginReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *CheckLoginReq) GetIsLogin() bool {
	if x != nil {
		return x.IsLogin
	}
	return false
}

func (x *CheckLoginReq) GetMethod() int32 {
	if x != nil {
		return x.Method
	}
	return 0
}

func (x *CheckLoginReq) GetCp() *CommonLoginParam {
	if x != nil {
		return x.Cp
	}
	return nil
}

func (x *CheckLoginReq) GetIsRealnamed() bool {
	if x != nil {
		return x.IsRealnamed
	}
	return false
}

func (x *CheckLoginReq) GetIsAdult() bool {
	if x != nil {
		return x.IsAdult
	}
	return false
}

// 各渠道登录均需要填充的公共信息
type CommonLoginParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Channel      string `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`            // `required` 渠道
	Platform     int32  `protobuf:"varint,2,opt,name=platform,proto3" json:"platform,omitempty"`         // `required` `enum=1,2` [1]-ios [2]-android
	TaId         string `protobuf:"bytes,3,opt,name=taId,proto3" json:"taId,omitempty"`                  // `required` ta distinct_id
	DeviceId     string `protobuf:"bytes,4,opt,name=deviceId,proto3" json:"deviceId,omitempty"`          // `required` `pattern=[\w\d]{15}` 设备id  通过ta sdk获取
	Idfa         string `protobuf:"bytes,5,opt,name=idfa,proto3" json:"idfa,omitempty"`                  // `required` 广告 id，iOS idfa Android 为 gaid
	Idfv         string `protobuf:"bytes,6,opt,name=idfv,proto3" json:"idfv,omitempty"`                  // 厂商标识
	Version      string `protobuf:"bytes,7,opt,name=version,proto3" json:"version,omitempty"`            // `required` `pattern=\d{1-3}\.\d{1-3}\.\d{1-3}` 版本
	VerRes       string `protobuf:"bytes,8,opt,name=verRes,proto3" json:"verRes,omitempty"`              // `required` 资源版本号
	BundleId     string `protobuf:"bytes,9,opt,name=bundleId,proto3" json:"bundleId,omitempty"`          // `required` 包名  通过ta sdk获取
	Model        string `protobuf:"bytes,10,opt,name=model,proto3" json:"model,omitempty"`               // `required` `pattern=[\d\s\w]*` 设备型号 通过ta sdk获取
	Manufacturer string `protobuf:"bytes,11,opt,name=manufacturer,proto3" json:"manufacturer,omitempty"` // `required` 制造商  通过ta sdk获取
	Os           string `protobuf:"bytes,12,opt,name=os,proto3" json:"os,omitempty"`                     // `required`操作系统    通过ta sdk获取
	OsVersion    string `protobuf:"bytes,13,opt,name=osVersion,proto3" json:"osVersion,omitempty"`       // `required` 操作系统版本号  通过ta sdk获取
	ZoneOffset   int32  `protobuf:"varint,14,opt,name=zoneOffset,proto3" json:"zoneOffset,omitempty"`    // `required` 客户端时区  通过ta sdk获取
}

func (x *CommonLoginParam) Reset() {
	*x = CommonLoginParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_player_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonLoginParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonLoginParam) ProtoMessage() {}

func (x *CommonLoginParam) ProtoReflect() protoreflect.Message {
	mi := &file_player_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonLoginParam.ProtoReflect.Descriptor instead.
func (*CommonLoginParam) Descriptor() ([]byte, []int) {
	return file_player_proto_rawDescGZIP(), []int{1}
}

func (x *CommonLoginParam) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *CommonLoginParam) GetPlatform() int32 {
	if x != nil {
		return x.Platform
	}
	return 0
}

func (x *CommonLoginParam) GetTaId() string {
	if x != nil {
		return x.TaId
	}
	return ""
}

func (x *CommonLoginParam) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *CommonLoginParam) GetIdfa() string {
	if x != nil {
		return x.Idfa
	}
	return ""
}

func (x *CommonLoginParam) GetIdfv() string {
	if x != nil {
		return x.Idfv
	}
	return ""
}

func (x *CommonLoginParam) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *CommonLoginParam) GetVerRes() string {
	if x != nil {
		return x.VerRes
	}
	return ""
}

func (x *CommonLoginParam) GetBundleId() string {
	if x != nil {
		return x.BundleId
	}
	return ""
}

func (x *CommonLoginParam) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *CommonLoginParam) GetManufacturer() string {
	if x != nil {
		return x.Manufacturer
	}
	return ""
}

func (x *CommonLoginParam) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *CommonLoginParam) GetOsVersion() string {
	if x != nil {
		return x.OsVersion
	}
	return ""
}

func (x *CommonLoginParam) GetZoneOffset() int32 {
	if x != nil {
		return x.ZoneOffset
	}
	return 0
}

// 游客登陆
type BaseLoginReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cp *CommonLoginParam `protobuf:"bytes,1,opt,name=cp,proto3" json:"cp,omitempty"` // 公共信息
	Id string            `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"` // `required` `pattern=[\w\d]{15}` 设备id
}

func (x *BaseLoginReq) Reset() {
	*x = BaseLoginReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_player_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseLoginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseLoginReq) ProtoMessage() {}

func (x *BaseLoginReq) ProtoReflect() protoreflect.Message {
	mi := &file_player_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseLoginReq.ProtoReflect.Descriptor instead.
func (*BaseLoginReq) Descriptor() ([]byte, []int) {
	return file_player_proto_rawDescGZIP(), []int{2}
}

func (x *BaseLoginReq) GetCp() *CommonLoginParam {
	if x != nil {
		return x.Cp
	}
	return nil
}

func (x *BaseLoginReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// 苹果登录
type AppleLoginReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cp                *CommonLoginParam `protobuf:"bytes,1,opt,name=cp,proto3" json:"cp,omitempty"`                               // 公共信息
	UserId            string            `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`                       // `required` 客户端拿到的玩家 id
	BundleId          string            `protobuf:"bytes,3,opt,name=bundleId,proto3" json:"bundleId,omitempty"`                   // `required` `pattern=[\w\d\.]{15,}` com.sagiteam.basketball
	IdentityToken     string            `protobuf:"bytes,4,opt,name=identityToken,proto3" json:"identityToken,omitempty"`         // `required` token 用于 apple 登录
	AuthorizationCode string            `protobuf:"bytes,5,opt,name=authorizationCode,proto3" json:"authorizationCode,omitempty"` // `required` 授权 code，用于 web 登录
	RealUserStatus    string            `protobuf:"bytes,6,opt,name=realUserStatus,proto3" json:"realUserStatus,omitempty"`       // `required` [0]=unsupported [1]-unknown [2]-likelyReal
	Name              string            `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`                           // `required` 名字
}

func (x *AppleLoginReq) Reset() {
	*x = AppleLoginReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_player_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppleLoginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppleLoginReq) ProtoMessage() {}

func (x *AppleLoginReq) ProtoReflect() protoreflect.Message {
	mi := &file_player_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppleLoginReq.ProtoReflect.Descriptor instead.
func (*AppleLoginReq) Descriptor() ([]byte, []int) {
	return file_player_proto_rawDescGZIP(), []int{3}
}

func (x *AppleLoginReq) GetCp() *CommonLoginParam {
	if x != nil {
		return x.Cp
	}
	return nil
}

func (x *AppleLoginReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AppleLoginReq) GetBundleId() string {
	if x != nil {
		return x.BundleId
	}
	return ""
}

func (x *AppleLoginReq) GetIdentityToken() string {
	if x != nil {
		return x.IdentityToken
	}
	return ""
}

func (x *AppleLoginReq) GetAuthorizationCode() string {
	if x != nil {
		return x.AuthorizationCode
	}
	return ""
}

func (x *AppleLoginReq) GetRealUserStatus() string {
	if x != nil {
		return x.RealUserStatus
	}
	return ""
}

func (x *AppleLoginReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// 微信登录
type WechatLoginReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cp   *CommonLoginParam `protobuf:"bytes,1,opt,name=cp,proto3" json:"cp,omitempty"`     // 公共信息
	Id   string            `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`     // `required` `pattern=[\w\d]{15}` 微信code
	Code string            `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"` // `required` 微信登录 code
	Age  int32             `protobuf:"varint,5,opt,name=age,proto3" json:"age,omitempty"`  // 年龄
}

func (x *WechatLoginReq) Reset() {
	*x = WechatLoginReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_player_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatLoginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatLoginReq) ProtoMessage() {}

func (x *WechatLoginReq) ProtoReflect() protoreflect.Message {
	mi := &file_player_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatLoginReq.ProtoReflect.Descriptor instead.
func (*WechatLoginReq) Descriptor() ([]byte, []int) {
	return file_player_proto_rawDescGZIP(), []int{4}
}

func (x *WechatLoginReq) GetCp() *CommonLoginParam {
	if x != nil {
		return x.Cp
	}
	return nil
}

func (x *WechatLoginReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *WechatLoginReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *WechatLoginReq) GetAge() int32 {
	if x != nil {
		return x.Age
	}
	return 0
}

// QQ登录
type QQLoginReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cp     *CommonLoginParam `protobuf:"bytes,1,opt,name=cp,proto3" json:"cp,omitempty"`         // 公共信息
	Id     string            `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`         // `required` `pattern=[\w\d]{15}` QQ openid
	Token  string            `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`   // `required` 客户端获取的qq登录token
	OpenId string            `protobuf:"bytes,4,opt,name=openId,proto3" json:"openId,omitempty"` // `required` 客户端获取的qq登录 openid
	Age    int32             `protobuf:"varint,5,opt,name=age,proto3" json:"age,omitempty"`      // 年龄
}

func (x *QQLoginReq) Reset() {
	*x = QQLoginReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_player_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QQLoginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QQLoginReq) ProtoMessage() {}

func (x *QQLoginReq) ProtoReflect() protoreflect.Message {
	mi := &file_player_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QQLoginReq.ProtoReflect.Descriptor instead.
func (*QQLoginReq) Descriptor() ([]byte, []int) {
	return file_player_proto_rawDescGZIP(), []int{5}
}

func (x *QQLoginReq) GetCp() *CommonLoginParam {
	if x != nil {
		return x.Cp
	}
	return nil
}

func (x *QQLoginReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *QQLoginReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *QQLoginReq) GetOpenId() string {
	if x != nil {
		return x.OpenId
	}
	return ""
}

func (x *QQLoginReq) GetAge() int32 {
	if x != nil {
		return x.Age
	}
	return 0
}

// Ohayoo登录
type OhayooLoginReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cp          *CommonLoginParam `protobuf:"bytes,1,opt,name=cp,proto3" json:"cp,omitempty"`                    // 公共信息
	Id          string            `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`                    // `required` `pattern=[\w\d]{15}` ohayoo sdk openid
	Token       string            `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`              // `required` 客户端获取的 ohayoo sdk 登录token
	OpenId      string            `protobuf:"bytes,4,opt,name=openId,proto3" json:"openId,omitempty"`            // `required` 客户端获取的 ohayoo sdk 登录 openid
	IsSandBox   bool              `protobuf:"varint,5,opt,name=isSandBox,proto3" json:"isSandBox,omitempty"`     // `required` 是否是沙盒账号
	Type        int32             `protobuf:"varint,6,opt,name=type,proto3" json:"type,omitempty"`               // 0 游客登录  1 手机号  2 抖音
	Head        string            `protobuf:"bytes,7,opt,name=head,proto3" json:"head,omitempty"`                // 抖音头像
	IsRealnamed bool              `protobuf:"varint,8,opt,name=isRealnamed,proto3" json:"isRealnamed,omitempty"` // 是否已实名制
	IsAdult     bool              `protobuf:"varint,9,opt,name=isAdult,proto3" json:"isAdult,omitempty"`         // 是否已成年
}

func (x *OhayooLoginReq) Reset() {
	*x = OhayooLoginReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_player_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OhayooLoginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OhayooLoginReq) ProtoMessage() {}

func (x *OhayooLoginReq) ProtoReflect() protoreflect.Message {
	mi := &file_player_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OhayooLoginReq.ProtoReflect.Descriptor instead.
func (*OhayooLoginReq) Descriptor() ([]byte, []int) {
	return file_player_proto_rawDescGZIP(), []int{6}
}

func (x *OhayooLoginReq) GetCp() *CommonLoginParam {
	if x != nil {
		return x.Cp
	}
	return nil
}

func (x *OhayooLoginReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OhayooLoginReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *OhayooLoginReq) GetOpenId() string {
	if x != nil {
		return x.OpenId
	}
	return ""
}

func (x *OhayooLoginReq) GetIsSandBox() bool {
	if x != nil {
		return x.IsSandBox
	}
	return false
}

func (x *OhayooLoginReq) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *OhayooLoginReq) GetHead() string {
	if x != nil {
		return x.Head
	}
	return ""
}

func (x *OhayooLoginReq) GetIsRealnamed() bool {
	if x != nil {
		return x.IsRealnamed
	}
	return false
}

func (x *OhayooLoginReq) GetIsAdult() bool {
	if x != nil {
		return x.IsAdult
	}
	return false
}

type LoginRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token      string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`            // 鉴权 token
	IsNew      int32  `protobuf:"varint,2,opt,name=isNew,proto3" json:"isNew,omitempty"`           // 是否新玩家  0老玩家  1新玩家
	IsActive   bool   `protobuf:"varint,3,opt,name=isActive,proto3" json:"isActive,omitempty"`     // 是否已激活
	InviteCode uint64 `protobuf:"varint,4,opt,name=inviteCode,proto3" json:"inviteCode,omitempty"` // 本次登录的InviteCode 用来在封号时显示
}

func (x *LoginRsp) Reset() {
	*x = LoginRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_player_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRsp) ProtoMessage() {}

func (x *LoginRsp) ProtoReflect() protoreflect.Message {
	mi := &file_player_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRsp.ProtoReflect.Descriptor instead.
func (*LoginRsp) Descriptor() ([]byte, []int) {
	return file_player_proto_rawDescGZIP(), []int{7}
}

func (x *LoginRsp) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *LoginRsp) GetIsNew() int32 {
	if x != nil {
		return x.IsNew
	}
	return 0
}

func (x *LoginRsp) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *LoginRsp) GetInviteCode() uint64 {
	if x != nil {
		return x.InviteCode
	}
	return 0
}

type OhayooBind struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                // `required` `pattern=[\w\d]{15}` ohayoo sdk openid
	Token     string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`          // `required` 客户端获取的 ohayoo sdk 登录token
	OpenId    string `protobuf:"bytes,3,opt,name=openId,proto3" json:"openId,omitempty"`        // `required` 客户端获取的 ohayoo sdk 登录 openid
	IsSandBox bool   `protobuf:"varint,5,opt,name=isSandBox,proto3" json:"isSandBox,omitempty"` // `required` 是否是沙盒账号
	Type      int32  `protobuf:"varint,6,opt,name=type,proto3" json:"type,omitempty"`           // 1 手机号  2 抖音
}

func (x *OhayooBind) Reset() {
	*x = OhayooBind{}
	if protoimpl.UnsafeEnabled {
		mi := &file_player_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OhayooBind) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OhayooBind) ProtoMessage() {}

func (x *OhayooBind) ProtoReflect() protoreflect.Message {
	mi := &file_player_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OhayooBind.ProtoReflect.Descriptor instead.
func (*OhayooBind) Descriptor() ([]byte, []int) {
	return file_player_proto_rawDescGZIP(), []int{8}
}

func (x *OhayooBind) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OhayooBind) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *OhayooBind) GetOpenId() string {
	if x != nil {
		return x.OpenId
	}
	return ""
}

func (x *OhayooBind) GetIsSandBox() bool {
	if x != nil {
		return x.IsSandBox
	}
	return false
}

func (x *OhayooBind) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type Player struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fixed   *PlayerStatic `protobuf:"bytes,1,opt,name=fixed,proto3" json:"fixed,omitempty"`     // 固定属性
	Feature *FuncProperty `protobuf:"bytes,2,opt,name=feature,proto3" json:"feature,omitempty"` // 功能属性
}

func (x *Player) Reset() {
	*x = Player{}
	if protoimpl.UnsafeEnabled {
		mi := &file_player_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Player) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Player) ProtoMessage() {}

func (x *Player) ProtoReflect() protoreflect.Message {
	mi := &file_player_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Player.ProtoReflect.Descriptor instead.
func (*Player) Descriptor() ([]byte, []int) {
	return file_player_proto_rawDescGZIP(), []int{9}
}

func (x *Player) GetFixed() *PlayerStatic {
	if x != nil {
		return x.Fixed
	}
	return nil
}

func (x *Player) GetFeature() *FuncProperty {
	if x != nil {
		return x.Feature
	}
	return nil
}

type PlayerStatic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InviteCode     uint64 `protobuf:"varint,1,opt,name=inviteCode,proto3" json:"inviteCode,omitempty"`         // 邀请码
	Name           string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                      // 姓名
	Avatar         string `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`                  // 头像
	Sex            int32  `protobuf:"varint,4,opt,name=sex,proto3" json:"sex,omitempty"`                       // 性别
	PlayerAvatar   int32  `protobuf:"varint,5,opt,name=playerAvatar,proto3" json:"playerAvatar,omitempty"`     // 游戏内头像
	LastRenameTime int64  `protobuf:"varint,6,opt,name=lastRenameTime,proto3" json:"lastRenameTime,omitempty"` // 上次改名时间戳
	NextRenameTime int32  `protobuf:"varint,7,opt,name=nextRenameTime,proto3" json:"nextRenameTime,omitempty"` // 改名冷却时间（秒）
	SBT            int32  `protobuf:"varint,8,opt,name=sBT,proto3" json:"sBT,omitempty"`                       // selected battle type
	SMode          int32  `protobuf:"varint,9,opt,name=sMode,proto3" json:"sMode,omitempty"`                   // selected mode
	HasBind        bool   `protobuf:"varint,10,opt,name=hasBind,proto3" json:"hasBind,omitempty"`              // 是否绑定三方账号
	BindReward     bool   `protobuf:"varint,11,opt,name=bindReward,proto3" json:"bindReward,omitempty"`        // 绑定账号是否领取
	AvatarFrame    int32  `protobuf:"varint,12,opt,name=avatarFrame,proto3" json:"avatarFrame,omitempty"`      // 使用的头像框
	Title          int32  `protobuf:"varint,13,opt,name=title,proto3" json:"title,omitempty"`                  // 使用的称号
	ColorfulName   int32  `protobuf:"varint,14,opt,name=colorfulName,proto3" json:"colorfulName,omitempty"`    // 使用的炫彩名
}

func (x *PlayerStatic) Reset() {
	*x = PlayerStatic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_player_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerStatic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerStatic) ProtoMessage() {}

func (x *PlayerStatic) ProtoReflect() protoreflect.Message {
	mi := &file_player_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerStatic.ProtoReflect.Descriptor instead.
func (*PlayerStatic) Descriptor() ([]byte, []int) {
	return file_player_proto_rawDescGZIP(), []int{10}
}

func (x *PlayerStatic) GetInviteCode() uint64 {
	if x != nil {
		return x.InviteCode
	}
	return 0
}

func (x *PlayerStatic) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PlayerStatic) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *PlayerStatic) GetSex() int32 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *PlayerStatic) GetPlayerAvatar() int32 {
	if x != nil {
		return x.PlayerAvatar
	}
	return 0
}

func (x *PlayerStatic) GetLastRenameTime() int64 {
	if x != nil {
		return x.LastRenameTime
	}
	return 0
}

func (x *PlayerStatic) GetNextRenameTime() int32 {
	if x != nil {
		return x.NextRenameTime
	}
	return 0
}

func (x *PlayerStatic) GetSBT() int32 {
	if x != nil {
		return x.SBT
	}
	return 0
}

func (x *PlayerStatic) GetSMode() int32 {
	if x != nil {
		return x.SMode
	}
	return 0
}

func (x *PlayerStatic) GetHasBind() bool {
	if x != nil {
		return x.HasBind
	}
	return false
}

func (x *PlayerStatic) GetBindReward() bool {
	if x != nil {
		return x.BindReward
	}
	return false
}

func (x *PlayerStatic) GetAvatarFrame() int32 {
	if x != nil {
		return x.AvatarFrame
	}
	return 0
}

func (x *PlayerStatic) GetTitle() int32 {
	if x != nil {
		return x.Title
	}
	return 0
}

func (x *PlayerStatic) GetColorfulName() int32 {
	if x != nil {
		return x.ColorfulName
	}
	return 0
}

type PlayerSubMapData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Wechatid string `protobuf:"bytes,2,opt,name=wechatid,proto3" json:"wechatid,omitempty"`
	Qqid     string `protobuf:"bytes,3,opt,name=qqid,proto3" json:"qqid,omitempty"`
	Ohayooid string `protobuf:"bytes,4,opt,name=ohayooid,proto3" json:"ohayooid,omitempty"`
	// 账号信息
	Invitecode     uint64 `protobuf:"varint,5,opt,name=invitecode,proto3" json:"invitecode,omitempty"`
	Name           string `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	Avatar         string `protobuf:"bytes,7,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Sex            int32  `protobuf:"varint,8,opt,name=sex,proto3" json:"sex,omitempty"`
	Born           int64  `protobuf:"varint,9,opt,name=born,proto3" json:"born,omitempty"`
	Llt            int64  `protobuf:"varint,10,opt,name=llt,proto3" json:"llt,omitempty"`
	Status         int32  `protobuf:"varint,11,opt,name=status,proto3" json:"status,omitempty"`
	Sbt            int32  `protobuf:"varint,12,opt,name=sbt,proto3" json:"sbt,omitempty"`
	Smode          int32  `protobuf:"varint,13,opt,name=smode,proto3" json:"smode,omitempty"`
	HasBind        bool   `protobuf:"varint,14,opt,name=hasBind,proto3" json:"hasBind,omitempty"`
	BindReward     bool   `protobuf:"varint,15,opt,name=bindReward,proto3" json:"bindReward,omitempty"`
	PlayerAvatar   int32  `protobuf:"varint,16,opt,name=playerAvatar,proto3" json:"playerAvatar,omitempty"`
	LastRenameTime int64  `protobuf:"varint,17,opt,name=lastRenameTime,proto3" json:"lastRenameTime,omitempty"`
	IsActivate     bool   `protobuf:"varint,18,opt,name=isActivate,proto3" json:"isActivate,omitempty"`
	AvatarFrame    int32  `protobuf:"varint,19,opt,name=avatarFrame,proto3" json:"avatarFrame,omitempty"`
	Title          int32  `protobuf:"varint,20,opt,name=title,proto3" json:"title,omitempty"`
	ColorfulName   int32  `protobuf:"varint,21,opt,name=colorfulName,proto3" json:"colorfulName,omitempty"`
	// 设备信息
	Channel      string `protobuf:"bytes,22,opt,name=channel,proto3" json:"channel,omitempty"`
	Platform     int32  `protobuf:"varint,23,opt,name=platform,proto3" json:"platform,omitempty"`
	TAId         string `protobuf:"bytes,24,opt,name=tAId,proto3" json:"tAId,omitempty"`
	DeviceId     string `protobuf:"bytes,25,opt,name=deviceId,proto3" json:"deviceId,omitempty"`
	Idfa         string `protobuf:"bytes,26,opt,name=idfa,proto3" json:"idfa,omitempty"`
	Idfv         string `protobuf:"bytes,27,opt,name=idfv,proto3" json:"idfv,omitempty"`
	Version      string `protobuf:"bytes,29,opt,name=version,proto3" json:"version,omitempty"`
	VerRes       string `protobuf:"bytes,30,opt,name=verRes,proto3" json:"verRes,omitempty"`
	BundleId     string `protobuf:"bytes,31,opt,name=bundleId,proto3" json:"bundleId,omitempty"`
	Model        string `protobuf:"bytes,32,opt,name=model,proto3" json:"model,omitempty"`
	Manufacturer string `protobuf:"bytes,33,opt,name=manufacturer,proto3" json:"manufacturer,omitempty"`
	Os           string `protobuf:"bytes,34,opt,name=os,proto3" json:"os,omitempty"`
	OsVersion    string `protobuf:"bytes,35,opt,name=osVersion,proto3" json:"osVersion,omitempty"`
	Ip           string `protobuf:"bytes,36,opt,name=ip,proto3" json:"ip,omitempty"`
	ZoneOffset   int32  `protobuf:"varint,37,opt,name=zoneOffset,proto3" json:"zoneOffset,omitempty"`
	OpenId       string `protobuf:"bytes,38,opt,name=OpenId,proto3" json:"OpenId,omitempty"`
}

func (x *PlayerSubMapData) Reset() {
	*x = PlayerSubMapData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_player_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerSubMapData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerSubMapData) ProtoMessage() {}

func (x *PlayerSubMapData) ProtoReflect() protoreflect.Message {
	mi := &file_player_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerSubMapData.ProtoReflect.Descriptor instead.
func (*PlayerSubMapData) Descriptor() ([]byte, []int) {
	return file_player_proto_rawDescGZIP(), []int{11}
}

func (x *PlayerSubMapData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PlayerSubMapData) GetWechatid() string {
	if x != nil {
		return x.Wechatid
	}
	return ""
}

func (x *PlayerSubMapData) GetQqid() string {
	if x != nil {
		return x.Qqid
	}
	return ""
}

func (x *PlayerSubMapData) GetOhayooid() string {
	if x != nil {
		return x.Ohayooid
	}
	return ""
}

func (x *PlayerSubMapData) GetInvitecode() uint64 {
	if x != nil {
		return x.Invitecode
	}
	return 0
}

func (x *PlayerSubMapData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PlayerSubMapData) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *PlayerSubMapData) GetSex() int32 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *PlayerSubMapData) GetBorn() int64 {
	if x != nil {
		return x.Born
	}
	return 0
}

func (x *PlayerSubMapData) GetLlt() int64 {
	if x != nil {
		return x.Llt
	}
	return 0
}

func (x *PlayerSubMapData) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *PlayerSubMapData) GetSbt() int32 {
	if x != nil {
		return x.Sbt
	}
	return 0
}

func (x *PlayerSubMapData) GetSmode() int32 {
	if x != nil {
		return x.Smode
	}
	return 0
}

func (x *PlayerSubMapData) GetHasBind() bool {
	if x != nil {
		return x.HasBind
	}
	return false
}

func (x *PlayerSubMapData) GetBindReward() bool {
	if x != nil {
		return x.BindReward
	}
	return false
}

func (x *PlayerSubMapData) GetPlayerAvatar() int32 {
	if x != nil {
		return x.PlayerAvatar
	}
	return 0
}

func (x *PlayerSubMapData) GetLastRenameTime() int64 {
	if x != nil {
		return x.LastRenameTime
	}
	return 0
}

func (x *PlayerSubMapData) GetIsActivate() bool {
	if x != nil {
		return x.IsActivate
	}
	return false
}

func (x *PlayerSubMapData) GetAvatarFrame() int32 {
	if x != nil {
		return x.AvatarFrame
	}
	return 0
}

func (x *PlayerSubMapData) GetTitle() int32 {
	if x != nil {
		return x.Title
	}
	return 0
}

func (x *PlayerSubMapData) GetColorfulName() int32 {
	if x != nil {
		return x.ColorfulName
	}
	return 0
}

func (x *PlayerSubMapData) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *PlayerSubMapData) GetPlatform() int32 {
	if x != nil {
		return x.Platform
	}
	return 0
}

func (x *PlayerSubMapData) GetTAId() string {
	if x != nil {
		return x.TAId
	}
	return ""
}

func (x *PlayerSubMapData) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *PlayerSubMapData) GetIdfa() string {
	if x != nil {
		return x.Idfa
	}
	return ""
}

func (x *PlayerSubMapData) GetIdfv() string {
	if x != nil {
		return x.Idfv
	}
	return ""
}

func (x *PlayerSubMapData) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *PlayerSubMapData) GetVerRes() string {
	if x != nil {
		return x.VerRes
	}
	return ""
}

func (x *PlayerSubMapData) GetBundleId() string {
	if x != nil {
		return x.BundleId
	}
	return ""
}

func (x *PlayerSubMapData) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *PlayerSubMapData) GetManufacturer() string {
	if x != nil {
		return x.Manufacturer
	}
	return ""
}

func (x *PlayerSubMapData) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *PlayerSubMapData) GetOsVersion() string {
	if x != nil {
		return x.OsVersion
	}
	return ""
}

func (x *PlayerSubMapData) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *PlayerSubMapData) GetZoneOffset() int32 {
	if x != nil {
		return x.ZoneOffset
	}
	return 0
}

func (x *PlayerSubMapData) GetOpenId() string {
	if x != nil {
		return x.OpenId
	}
	return ""
}

type Currency struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Currency []*ItemPair `protobuf:"bytes,1,rep,name=currency,proto3" json:"currency,omitempty"` // 货币键值对 基础存储数据
}

func (x *Currency) Reset() {
	*x = Currency{}
	if protoimpl.UnsafeEnabled {
		mi := &file_player_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Currency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Currency) ProtoMessage() {}

func (x *Currency) ProtoReflect() protoreflect.Message {
	mi := &file_player_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Currency.ProtoReflect.Descriptor instead.
func (*Currency) Descriptor() ([]byte, []int) {
	return file_player_proto_rawDescGZIP(), []int{12}
}

func (x *Currency) GetCurrency() []*ItemPair {
	if x != nil {
		return x.Currency
	}
	return nil
}

type PlayerLevel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Level int32 `protobuf:"varint,1,opt,name=level,proto3" json:"level,omitempty"` // 当前玩家等级
	Exp   int32 `protobuf:"varint,2,opt,name=exp,proto3" json:"exp,omitempty"`     // 升级完成后剩余的经验 确保玩家等级会不随计算公式改变而改变
}

func (x *PlayerLevel) Reset() {
	*x = PlayerLevel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_player_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerLevel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerLevel) ProtoMessage() {}

func (x *PlayerLevel) ProtoReflect() protoreflect.Message {
	mi := &file_player_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerLevel.ProtoReflect.Descriptor instead.
func (*PlayerLevel) Descriptor() ([]byte, []int) {
	return file_player_proto_rawDescGZIP(), []int{13}
}

func (x *PlayerLevel) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *PlayerLevel) GetExp() int32 {
	if x != nil {
		return x.Exp
	}
	return 0
}

// 主界面会用到的功能模块信息，如果主界面只显示入口，则放在具体功能模块中发送
type FuncProperty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LevelInfo    *PlayerLevel     `protobuf:"bytes,1,opt,name=levelInfo,proto3" json:"levelInfo,omitempty"`       // 玩家等级模块
	ActorInfo    *ActorInfo       `protobuf:"bytes,2,opt,name=actorInfo,proto3" json:"actorInfo,omitempty"`       // 球员模块
	CurrencyInfo *Currency        `protobuf:"bytes,3,opt,name=currencyInfo,proto3" json:"currencyInfo,omitempty"` // 货币模块
	ControlInfo  *OpenControlInfo `protobuf:"bytes,4,opt,name=controlInfo,proto3" json:"controlInfo,omitempty"`   // 功能开启模块
}

func (x *FuncProperty) Reset() {
	*x = FuncProperty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_player_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FuncProperty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FuncProperty) ProtoMessage() {}

func (x *FuncProperty) ProtoReflect() protoreflect.Message {
	mi := &file_player_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FuncProperty.ProtoReflect.Descriptor instead.
func (*FuncProperty) Descriptor() ([]byte, []int) {
	return file_player_proto_rawDescGZIP(), []int{14}
}

func (x *FuncProperty) GetLevelInfo() *PlayerLevel {
	if x != nil {
		return x.LevelInfo
	}
	return nil
}

func (x *FuncProperty) GetActorInfo() *ActorInfo {
	if x != nil {
		return x.ActorInfo
	}
	return nil
}

func (x *FuncProperty) GetCurrencyInfo() *Currency {
	if x != nil {
		return x.CurrencyInfo
	}
	return nil
}

func (x *FuncProperty) GetControlInfo() *OpenControlInfo {
	if x != nil {
		return x.ControlInfo
	}
	return nil
}

// 更换头像
type PlayerAvatarReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // 头像id
}

func (x *PlayerAvatarReq) Reset() {
	*x = PlayerAvatarReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_player_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerAvatarReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerAvatarReq) ProtoMessage() {}

func (x *PlayerAvatarReq) ProtoReflect() protoreflect.Message {
	mi := &file_player_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerAvatarReq.ProtoReflect.Descriptor instead.
func (*PlayerAvatarReq) Descriptor() ([]byte, []int) {
	return file_player_proto_rawDescGZIP(), []int{15}
}

func (x *PlayerAvatarReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 修改昵称
type PlayerNameReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"` // 昵称
}

func (x *PlayerNameReq) Reset() {
	*x = PlayerNameReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_player_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerNameReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerNameReq) ProtoMessage() {}

func (x *PlayerNameReq) ProtoReflect() protoreflect.Message {
	mi := &file_player_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerNameReq.ProtoReflect.Descriptor instead.
func (*PlayerNameReq) Descriptor() ([]byte, []int) {
	return file_player_proto_rawDescGZIP(), []int{16}
}

func (x *PlayerNameReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// 改名返回
type PlayerRenameResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Static     *PlayerStatic     `protobuf:"bytes,1,opt,name=static,proto3" json:"static,omitempty"`
	ItemResult *ItemUpdateResult `protobuf:"bytes,2,opt,name=itemResult,proto3" json:"itemResult,omitempty"` // 改名消耗，物品变更返回
	Pass       bool              `protobuf:"varint,3,opt,name=pass,proto3" json:"pass,omitempty"`            // 敏感词检查 true=通过 false=不通过
}

func (x *PlayerRenameResp) Reset() {
	*x = PlayerRenameResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_player_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerRenameResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerRenameResp) ProtoMessage() {}

func (x *PlayerRenameResp) ProtoReflect() protoreflect.Message {
	mi := &file_player_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerRenameResp.ProtoReflect.Descriptor instead.
func (*PlayerRenameResp) Descriptor() ([]byte, []int) {
	return file_player_proto_rawDescGZIP(), []int{17}
}

func (x *PlayerRenameResp) GetStatic() *PlayerStatic {
	if x != nil {
		return x.Static
	}
	return nil
}

func (x *PlayerRenameResp) GetItemResult() *ItemUpdateResult {
	if x != nil {
		return x.ItemResult
	}
	return nil
}

func (x *PlayerRenameResp) GetPass() bool {
	if x != nil {
		return x.Pass
	}
	return false
}

// 最近访客信息
type VisitorInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InviteCode uint64 `protobuf:"varint,1,opt,name=inviteCode,proto3" json:"inviteCode,omitempty"` // ic
	AvatarId   int32  `protobuf:"varint,2,opt,name=avatarId,proto3" json:"avatarId,omitempty"`     // 头像id
}

func (x *VisitorInfo) Reset() {
	*x = VisitorInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_player_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VisitorInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VisitorInfo) ProtoMessage() {}

func (x *VisitorInfo) ProtoReflect() protoreflect.Message {
	mi := &file_player_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VisitorInfo.ProtoReflect.Descriptor instead.
func (*VisitorInfo) Descriptor() ([]byte, []int) {
	return file_player_proto_rawDescGZIP(), []int{18}
}

func (x *VisitorInfo) GetInviteCode() uint64 {
	if x != nil {
		return x.InviteCode
	}
	return 0
}

func (x *VisitorInfo) GetAvatarId() int32 {
	if x != nil {
		return x.AvatarId
	}
	return 0
}

// 个人信息返回
type PlayerPersonalResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Static           *PlayerStatic            `protobuf:"bytes,1,opt,name=static,proto3" json:"static,omitempty"`                                                                                              // 基本信息
	Record           *RecordInfo              `protobuf:"bytes,2,opt,name=record,proto3" json:"record,omitempty"`                                                                                              // 生涯数据
	AInfo            *ActorInfo               `protobuf:"bytes,3,opt,name=aInfo,proto3" json:"aInfo,omitempty"`                                                                                                // 球员信息
	Level            *PlayerLevel             `protobuf:"bytes,4,opt,name=level,proto3" json:"level,omitempty"`                                                                                                // 等级信息
	CurCup           int32                    `protobuf:"varint,5,opt,name=curCup,proto3" json:"curCup,omitempty"`                                                                                             // 当前奖杯
	RecentlyVisited  []*VisitorInfo           `protobuf:"bytes,6,rep,name=recentlyVisited,proto3" json:"recentlyVisited,omitempty"`                                                                            // 最近访问过的玩家
	StarInfo         *StarInfoResp            `protobuf:"bytes,7,opt,name=starInfo,proto3" json:"starInfo,omitempty"`                                                                                          // 约战星星信息
	SkinInfo         map[int32]*SkinEquipInfo `protobuf:"bytes,8,rep,name=skinInfo,proto3" json:"skinInfo,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // 皮肤装备信息
	AchievementLevel int32                    `protobuf:"varint,9,opt,name=achievementLevel,proto3" json:"achievementLevel,omitempty"`                                                                         // 成就等级
	VisitorCount     int32                    `protobuf:"varint,10,opt,name=visitorCount,proto3" json:"visitorCount,omitempty"`                                                                                // 历史访客总数
	TourInfo         *TourInfo                `protobuf:"bytes,11,opt,name=tourInfo,proto3" json:"tourInfo,omitempty"`                                                                                         // 赛季挑战赛信息
	KingRoundInfo    *KingRoundInfo           `protobuf:"bytes,12,opt,name=kingRoundInfo,proto3" json:"kingRoundInfo,omitempty"`                                                                               // 路人王信息
	AchievementPoint int32                    `protobuf:"varint,13,opt,name=achievementPoint,proto3" json:"achievementPoint,omitempty"`                                                                        // 成就积分
	PrivilegeInfo    *PrivilegeInfo           `protobuf:"bytes,14,opt,name=privilegeInfo,proto3" json:"privilegeInfo,omitempty"`                                                                               // 特权信息
}

func (x *PlayerPersonalResp) Reset() {
	*x = PlayerPersonalResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_player_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerPersonalResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerPersonalResp) ProtoMessage() {}

func (x *PlayerPersonalResp) ProtoReflect() protoreflect.Message {
	mi := &file_player_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerPersonalResp.ProtoReflect.Descriptor instead.
func (*PlayerPersonalResp) Descriptor() ([]byte, []int) {
	return file_player_proto_rawDescGZIP(), []int{19}
}

func (x *PlayerPersonalResp) GetStatic() *PlayerStatic {
	if x != nil {
		return x.Static
	}
	return nil
}

func (x *PlayerPersonalResp) GetRecord() *RecordInfo {
	if x != nil {
		return x.Record
	}
	return nil
}

func (x *PlayerPersonalResp) GetAInfo() *ActorInfo {
	if x != nil {
		return x.AInfo
	}
	return nil
}

func (x *PlayerPersonalResp) GetLevel() *PlayerLevel {
	if x != nil {
		return x.Level
	}
	return nil
}

func (x *PlayerPersonalResp) GetCurCup() int32 {
	if x != nil {
		return x.CurCup
	}
	return 0
}

func (x *PlayerPersonalResp) GetRecentlyVisited() []*VisitorInfo {
	if x != nil {
		return x.RecentlyVisited
	}
	return nil
}

func (x *PlayerPersonalResp) GetStarInfo() *StarInfoResp {
	if x != nil {
		return x.StarInfo
	}
	return nil
}

func (x *PlayerPersonalResp) GetSkinInfo() map[int32]*SkinEquipInfo {
	if x != nil {
		return x.SkinInfo
	}
	return nil
}

func (x *PlayerPersonalResp) GetAchievementLevel() int32 {
	if x != nil {
		return x.AchievementLevel
	}
	return 0
}

func (x *PlayerPersonalResp) GetVisitorCount() int32 {
	if x != nil {
		return x.VisitorCount
	}
	return 0
}

func (x *PlayerPersonalResp) GetTourInfo() *TourInfo {
	if x != nil {
		return x.TourInfo
	}
	return nil
}

func (x *PlayerPersonalResp) GetKingRoundInfo() *KingRoundInfo {
	if x != nil {
		return x.KingRoundInfo
	}
	return nil
}

func (x *PlayerPersonalResp) GetAchievementPoint() int32 {
	if x != nil {
		return x.AchievementPoint
	}
	return 0
}

func (x *PlayerPersonalResp) GetPrivilegeInfo() *PrivilegeInfo {
	if x != nil {
		return x.PrivilegeInfo
	}
	return nil
}

type PlayerInviteCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InviteCode uint64 `protobuf:"varint,1,opt,name=inviteCode,proto3" json:"inviteCode,omitempty"` // ic
}

func (x *PlayerInviteCode) Reset() {
	*x = PlayerInviteCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_player_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerInviteCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerInviteCode) ProtoMessage() {}

func (x *PlayerInviteCode) ProtoReflect() protoreflect.Message {
	mi := &file_player_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerInviteCode.ProtoReflect.Descriptor instead.
func (*PlayerInviteCode) Descriptor() ([]byte, []int) {
	return file_player_proto_rawDescGZIP(), []int{20}
}

func (x *PlayerInviteCode) GetInviteCode() uint64 {
	if x != nil {
		return x.InviteCode
	}
	return 0
}

type PlayerPersonalReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid        uint64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	VisitorUid uint64 `protobuf:"varint,2,opt,name=visitorUid,proto3" json:"visitorUid,omitempty"` // 访问者uid
}

func (x *PlayerPersonalReq) Reset() {
	*x = PlayerPersonalReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_player_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerPersonalReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerPersonalReq) ProtoMessage() {}

func (x *PlayerPersonalReq) ProtoReflect() protoreflect.Message {
	mi := &file_player_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerPersonalReq.ProtoReflect.Descriptor instead.
func (*PlayerPersonalReq) Descriptor() ([]byte, []int) {
	return file_player_proto_rawDescGZIP(), []int{21}
}

func (x *PlayerPersonalReq) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *PlayerPersonalReq) GetVisitorUid() uint64 {
	if x != nil {
		return x.VisitorUid
	}
	return 0
}

type PlayerUid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid uint64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *PlayerUid) Reset() {
	*x = PlayerUid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_player_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerUid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerUid) ProtoMessage() {}

func (x *PlayerUid) ProtoReflect() protoreflect.Message {
	mi := &file_player_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerUid.ProtoReflect.Descriptor instead.
func (*PlayerUid) Descriptor() ([]byte, []int) {
	return file_player_proto_rawDescGZIP(), []int{22}
}

func (x *PlayerUid) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

var File_player_proto protoreflect.FileDescriptor

var file_player_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a,
	0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x69, 0x74, 0x65, 0x6d,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x61, 0x70,
	0x70, 0x65, 0x61, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a,
	0x74, 0x6f, 0x75, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x6b, 0x69, 0x6e, 0x67,
	0x5f, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x70, 0x72,
	0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb6, 0x01,
	0x0a, 0x0d, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12,
	0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x21, 0x0a, 0x02, 0x63, 0x70, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x02, 0x63, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x73,
	0x52, 0x65, 0x61, 0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0b, 0x69, 0x73, 0x52, 0x65, 0x61, 0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x69, 0x73, 0x41, 0x64, 0x75, 0x6c, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69,
	0x73, 0x41, 0x64, 0x75, 0x6c, 0x74, 0x22, 0xf6, 0x02, 0x0a, 0x10, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x61, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x64, 0x66, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x69, 0x64, 0x66, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x64, 0x66, 0x76, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x64, 0x66, 0x76, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x62,
	0x75, 0x6e, 0x64, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62,
	0x75, 0x6e, 0x64, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x22, 0x0a,
	0x0c, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x72, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6f,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x1e, 0x0a, 0x0a, 0x7a, 0x6f, 0x6e, 0x65, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x7a, 0x6f, 0x6e, 0x65, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22,
	0x41, 0x0a, 0x0c, 0x42, 0x61, 0x73, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12,
	0x21, 0x0a, 0x02, 0x63, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x02,
	0x63, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x22, 0xf6, 0x01, 0x0a, 0x0d, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x02, 0x63, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x52, 0x02, 0x63, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x2c, 0x0a, 0x11, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x26, 0x0a, 0x0e, 0x72, 0x65, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x61, 0x6c, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x69, 0x0a, 0x0e, 0x57,
	0x65, 0x63, 0x68, 0x61, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a,
	0x02, 0x63, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x02, 0x63, 0x70,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x61, 0x67, 0x65, 0x22, 0x7f, 0x0a, 0x0a, 0x51, 0x51, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x02, 0x63, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x52, 0x02, 0x63, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a,
	0x06, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f,
	0x70, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x61, 0x67, 0x65, 0x22, 0xf3, 0x01, 0x0a, 0x0e, 0x4f, 0x68, 0x61, 0x79,
	0x6f, 0x6f, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x02, 0x63, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x02, 0x63, 0x70, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x69,
	0x73, 0x53, 0x61, 0x6e, 0x64, 0x42, 0x6f, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x69, 0x73, 0x53, 0x61, 0x6e, 0x64, 0x42, 0x6f, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x68, 0x65, 0x61, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x65, 0x61,
	0x64, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x73, 0x52, 0x65, 0x61, 0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x52, 0x65, 0x61, 0x6c, 0x6e, 0x61,
	0x6d, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x41, 0x64, 0x75, 0x6c, 0x74, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x41, 0x64, 0x75, 0x6c, 0x74, 0x22, 0x72, 0x0a,
	0x08, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x69, 0x73, 0x4e, 0x65, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x69, 0x73, 0x4e, 0x65, 0x77, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64,
	0x65, 0x22, 0x7c, 0x0a, 0x0a, 0x4f, 0x68, 0x61, 0x79, 0x6f, 0x6f, 0x42, 0x69, 0x6e, 0x64, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x69, 0x73, 0x53, 0x61, 0x6e, 0x64, 0x42, 0x6f, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x69, 0x73, 0x53, 0x61, 0x6e, 0x64, 0x42, 0x6f, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22,
	0x56, 0x0a, 0x06, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x05, 0x66, 0x69, 0x78,
	0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x05, 0x66, 0x69, 0x78, 0x65, 0x64, 0x12, 0x27,
	0x0a, 0x07, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x07,
	0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x9e, 0x03, 0x0a, 0x0c, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x69, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x6c, 0x61,
	0x73, 0x74, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x6e, 0x65, 0x78, 0x74, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x6e, 0x65, 0x78, 0x74,
	0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x42,
	0x54, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x73, 0x42, 0x54, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x4d, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x61, 0x73, 0x42, 0x69, 0x6e, 0x64, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x61, 0x73, 0x42, 0x69, 0x6e, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x62, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x62, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x66, 0x75, 0x6c,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x66, 0x75, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xc0, 0x07, 0x0a, 0x10, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x53, 0x75, 0x62, 0x4d, 0x61, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x71, 0x71, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x71, 0x71, 0x69, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x6f, 0x68, 0x61, 0x79, 0x6f, 0x6f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6f, 0x68, 0x61, 0x79, 0x6f, 0x6f, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x69,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x72, 0x6e, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x62, 0x6f, 0x72, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6c,
	0x6c, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6c, 0x6c, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x62, 0x74, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x73, 0x62, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x6d, 0x6f, 0x64, 0x65,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x68, 0x61, 0x73, 0x42, 0x69, 0x6e, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x68, 0x61, 0x73, 0x42, 0x69, 0x6e, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x69, 0x6e, 0x64, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x62, 0x69, 0x6e,
	0x64, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x6c,
	0x61, 0x73, 0x74, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x46, 0x72, 0x61,
	0x6d, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x66, 0x75, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x66, 0x75, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x17, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x41, 0x49, 0x64, 0x18, 0x18, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x41, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x64, 0x66, 0x61, 0x18, 0x1a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x64, 0x66, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x64, 0x66,
	0x76, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x64, 0x66, 0x76, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x12,
	0x1a, 0x0a, 0x08, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x1f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x72, 0x18, 0x21, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63,
	0x74, 0x75, 0x72, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x73, 0x18, 0x22, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x6f, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x23, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x73, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x24, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x7a, 0x6f, 0x6e, 0x65, 0x4f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x18, 0x25, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x7a, 0x6f, 0x6e, 0x65, 0x4f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x18, 0x26, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x22, 0x31, 0x0a, 0x08, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x25, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x49, 0x74, 0x65, 0x6d,
	0x50, 0x61, 0x69, 0x72, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x22, 0x35,
	0x0a, 0x0b, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x78, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x65, 0x78, 0x70, 0x22, 0xc7, 0x01, 0x0a, 0x0c, 0x46, 0x75, 0x6e, 0x63, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x2a, 0x0a, 0x09, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x09, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x28, 0x0a, 0x09, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x09, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2d, 0x0a, 0x0c,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x09, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x0c, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x32, 0x0a, 0x0b, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0x21, 0x0a, 0x0f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52,
	0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x23, 0x0a, 0x0d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x80, 0x01, 0x0a, 0x10, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x25, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x69, 0x63, 0x12, 0x31, 0x0a, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0a, 0x69, 0x74, 0x65, 0x6d,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x73, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x70, 0x61, 0x73, 0x73, 0x22, 0x49, 0x0a, 0x0b, 0x56, 0x69,
	0x73, 0x69, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x69,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x49, 0x64, 0x22, 0xbc, 0x05, 0x0a, 0x12, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x25, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x69, 0x63, 0x12, 0x23, 0x0a, 0x06, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x06, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x20, 0x0a, 0x05, 0x61, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x05, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22, 0x0a, 0x05, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x16,
	0x0a, 0x06, 0x63, 0x75, 0x72, 0x43, 0x75, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x63, 0x75, 0x72, 0x43, 0x75, 0x70, 0x12, 0x36, 0x0a, 0x0f, 0x72, 0x65, 0x63, 0x65, 0x6e, 0x74,
	0x6c, 0x79, 0x56, 0x69, 0x73, 0x69, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x56, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x72,
	0x65, 0x63, 0x65, 0x6e, 0x74, 0x6c, 0x79, 0x56, 0x69, 0x73, 0x69, 0x74, 0x65, 0x64, 0x12, 0x29,
	0x0a, 0x08, 0x73, 0x74, 0x61, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x52,
	0x08, 0x73, 0x74, 0x61, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3d, 0x0a, 0x08, 0x73, 0x6b, 0x69,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x2e, 0x53, 0x6b, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08,
	0x73, 0x6b, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2a, 0x0a, 0x10, 0x61, 0x63, 0x68, 0x69,
	0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x10, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x76, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x76, 0x69, 0x73, 0x69,
	0x74, 0x6f, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x08, 0x74, 0x6f, 0x75, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x54, 0x6f, 0x75,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x74, 0x6f, 0x75, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x34, 0x0a, 0x0d, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x4b, 0x69, 0x6e, 0x67, 0x52, 0x6f, 0x75,
	0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x6f, 0x75, 0x6e,
	0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2a, 0x0a, 0x10, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x10, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x12, 0x34, 0x0a, 0x0d, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x50, 0x72, 0x69, 0x76, 0x69,
	0x6c, 0x65, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c,
	0x65, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x4b, 0x0a, 0x0d, 0x53, 0x6b, 0x69, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x24, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x53, 0x6b, 0x69, 0x6e,
	0x45, 0x71, 0x75, 0x69, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x32, 0x0a, 0x10, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x69, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x45, 0x0a, 0x11, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x55, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x55, 0x69, 0x64, 0x22,
	0x1d, 0x0a, 0x09, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x55, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x75, 0x69, 0x64, 0x42, 0x0b,
	0x5a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_player_proto_rawDescOnce sync.Once
	file_player_proto_rawDescData = file_player_proto_rawDesc
)

func file_player_proto_rawDescGZIP() []byte {
	file_player_proto_rawDescOnce.Do(func() {
		file_player_proto_rawDescData = protoimpl.X.CompressGZIP(file_player_proto_rawDescData)
	})
	return file_player_proto_rawDescData
}

var file_player_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_player_proto_goTypes = []interface{}{
	(*CheckLoginReq)(nil),      // 0: CheckLoginReq
	(*CommonLoginParam)(nil),   // 1: CommonLoginParam
	(*BaseLoginReq)(nil),       // 2: BaseLoginReq
	(*AppleLoginReq)(nil),      // 3: AppleLoginReq
	(*WechatLoginReq)(nil),     // 4: WechatLoginReq
	(*QQLoginReq)(nil),         // 5: QQLoginReq
	(*OhayooLoginReq)(nil),     // 6: OhayooLoginReq
	(*LoginRsp)(nil),           // 7: LoginRsp
	(*OhayooBind)(nil),         // 8: OhayooBind
	(*Player)(nil),             // 9: Player
	(*PlayerStatic)(nil),       // 10: PlayerStatic
	(*PlayerSubMapData)(nil),   // 11: PlayerSubMapData
	(*Currency)(nil),           // 12: Currency
	(*PlayerLevel)(nil),        // 13: PlayerLevel
	(*FuncProperty)(nil),       // 14: FuncProperty
	(*PlayerAvatarReq)(nil),    // 15: PlayerAvatarReq
	(*PlayerNameReq)(nil),      // 16: PlayerNameReq
	(*PlayerRenameResp)(nil),   // 17: PlayerRenameResp
	(*VisitorInfo)(nil),        // 18: VisitorInfo
	(*PlayerPersonalResp)(nil), // 19: PlayerPersonalResp
	(*PlayerInviteCode)(nil),   // 20: PlayerInviteCode
	(*PlayerPersonalReq)(nil),  // 21: PlayerPersonalReq
	(*PlayerUid)(nil),          // 22: PlayerUid
	nil,                        // 23: PlayerPersonalResp.SkinInfoEntry
	(*ItemPair)(nil),           // 24: ItemPair
	(*ActorInfo)(nil),          // 25: ActorInfo
	(*OpenControlInfo)(nil),    // 26: OpenControlInfo
	(*ItemUpdateResult)(nil),   // 27: ItemUpdateResult
	(*RecordInfo)(nil),         // 28: RecordInfo
	(*StarInfoResp)(nil),       // 29: StarInfoResp
	(*TourInfo)(nil),           // 30: TourInfo
	(*KingRoundInfo)(nil),      // 31: KingRoundInfo
	(*PrivilegeInfo)(nil),      // 32: PrivilegeInfo
	(*SkinEquipInfo)(nil),      // 33: SkinEquipInfo
}
var file_player_proto_depIdxs = []int32{
	1,  // 0: CheckLoginReq.cp:type_name -> CommonLoginParam
	1,  // 1: BaseLoginReq.cp:type_name -> CommonLoginParam
	1,  // 2: AppleLoginReq.cp:type_name -> CommonLoginParam
	1,  // 3: WechatLoginReq.cp:type_name -> CommonLoginParam
	1,  // 4: QQLoginReq.cp:type_name -> CommonLoginParam
	1,  // 5: OhayooLoginReq.cp:type_name -> CommonLoginParam
	10, // 6: Player.fixed:type_name -> PlayerStatic
	14, // 7: Player.feature:type_name -> FuncProperty
	24, // 8: Currency.currency:type_name -> ItemPair
	13, // 9: FuncProperty.levelInfo:type_name -> PlayerLevel
	25, // 10: FuncProperty.actorInfo:type_name -> ActorInfo
	12, // 11: FuncProperty.currencyInfo:type_name -> Currency
	26, // 12: FuncProperty.controlInfo:type_name -> OpenControlInfo
	10, // 13: PlayerRenameResp.static:type_name -> PlayerStatic
	27, // 14: PlayerRenameResp.itemResult:type_name -> ItemUpdateResult
	10, // 15: PlayerPersonalResp.static:type_name -> PlayerStatic
	28, // 16: PlayerPersonalResp.record:type_name -> RecordInfo
	25, // 17: PlayerPersonalResp.aInfo:type_name -> ActorInfo
	13, // 18: PlayerPersonalResp.level:type_name -> PlayerLevel
	18, // 19: PlayerPersonalResp.recentlyVisited:type_name -> VisitorInfo
	29, // 20: PlayerPersonalResp.starInfo:type_name -> StarInfoResp
	23, // 21: PlayerPersonalResp.skinInfo:type_name -> PlayerPersonalResp.SkinInfoEntry
	30, // 22: PlayerPersonalResp.tourInfo:type_name -> TourInfo
	31, // 23: PlayerPersonalResp.kingRoundInfo:type_name -> KingRoundInfo
	32, // 24: PlayerPersonalResp.privilegeInfo:type_name -> PrivilegeInfo
	33, // 25: PlayerPersonalResp.SkinInfoEntry.value:type_name -> SkinEquipInfo
	26, // [26:26] is the sub-list for method output_type
	26, // [26:26] is the sub-list for method input_type
	26, // [26:26] is the sub-list for extension type_name
	26, // [26:26] is the sub-list for extension extendee
	0,  // [0:26] is the sub-list for field type_name
}

func init() { file_player_proto_init() }
func file_player_proto_init() {
	if File_player_proto != nil {
		return
	}
	file_game_proto_init()
	file_item_proto_init()
	file_record_proto_init()
	file_actor_proto_init()
	file_control_proto_init()
	file_star_proto_init()
	file_appearance_proto_init()
	file_tour_proto_init()
	file_king_round_proto_init()
	file_privilege_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_player_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckLoginReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_player_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonLoginParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_player_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseLoginReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_player_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppleLoginReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_player_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatLoginReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_player_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QQLoginReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_player_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OhayooLoginReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_player_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_player_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OhayooBind); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_player_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Player); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_player_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerStatic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_player_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerSubMapData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_player_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Currency); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_player_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerLevel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_player_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FuncProperty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_player_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerAvatarReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_player_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerNameReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_player_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerRenameResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_player_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VisitorInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_player_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerPersonalResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_player_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerInviteCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_player_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerPersonalReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_player_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerUid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_player_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_player_proto_goTypes,
		DependencyIndexes: file_player_proto_depIdxs,
		MessageInfos:      file_player_proto_msgTypes,
	}.Build()
	File_player_proto = out.File
	file_player_proto_rawDesc = nil
	file_player_proto_goTypes = nil
	file_player_proto_depIdxs = nil
}
